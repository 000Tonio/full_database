{"Modified":"2022-09-22T16:07:00","Published":"2022-09-21T16:15:00","access":{},"assigner":"jenkinsci-cert@googlegroups.com","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2022-41237","impact":{},"last-modified":"2022-09-22T16:07:00","references":["https://www.jenkins.io/security/advisory/2022-09-21/#SECURITY-1737"],"summary":"Jenkins DotCi Plugin 2.40.00 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types, resulting in a remote code execution vulnerability.","vulnerable_configuration":[{"id":"cpe:2.3:a:jenkins:dotci:*:*:*:*:*:jenkins:*:*","title":"cpe:2.3:a:jenkins:dotci:*:*:*:*:*:jenkins:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:jenkins:dotci:*:*:*:*:*:jenkins:*:*"]}