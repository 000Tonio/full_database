{"Modified":"2022-12-21T18:57:00","Published":"2022-09-20T14:15:00","access":{},"assigner":"security@apache.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2022-40955","impact":{},"last-modified":"2022-12-21T18:57:00","references":["https://lists.apache.org/thread/r1r34y7bchrpmp9jhfdoohzdmk7pj1q1","http://www.openwall.com/lists/oss-security/2022/09/22/5"],"summary":"In versions of Apache InLong prior to 1.3.0, an attacker with sufficient privileges to specify MySQL JDBC connection URL parameters and to write arbitrary data to the MySQL database, could cause this data to be deserialized by Apache InLong, potentially leading to Remote Code Execution on the Apache InLong server. Users are advised to upgrade to Apache InLong 1.3.0 or newer.","vulnerable_configuration":[{"id":"cpe:2.3:a:apache:inlong:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:inlong:*:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:apache:inlong:*:*:*:*:*:*:*:*"]}