{"Modified":"2022-05-11T13:27:00","Published":"2022-04-29T17:15:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":6.5,"cvss-time":"2022-05-11T13:27:00","cvss-vector":"AV:N/AC:L/Au:S/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2022-29936","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2022-05-11T13:27:00","references":["https://github.com/orangecertcc/security-research/security/advisories/GHSA-rj5c-j274-vw7g"],"summary":"USU Oracle Optimization before 5.17 allows authenticated quantum users to achieve remote code execution because of /v2/quantum/save-data-upload-big-file Java deserialization. NOTE: this is not an Oracle Corporation product.","vulnerable_configuration":[{"id":"cpe:2.3:a:usu:oracle_optimization:5.16.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:usu:oracle_optimization:5.16.2:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:usu:oracle_optimization:5.16.2:*:*:*:*:*:*:*"]}