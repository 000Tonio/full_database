{"Modified":"2022-10-26T02:52:00","Published":"2022-08-02T16:15:00","access":{},"assigner":"cve@cert.org.tw","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2022-35223","impact":{},"last-modified":"2022-10-26T02:52:00","references":["https://www.twcert.org.tw/tw/cp-132-6365-b056c-1.html","https://www.chtsecurity.com/news/a381467e-74ff-4a8c-a4d3-fc86720f5400"],"summary":"EasyUse MailHunter Ultimateâ€™s cookie deserialization function has an inadequate validation vulnerability. Deserializing a cookie containing malicious payload will trigger this insecure deserialization vulnerability, allowing an unauthenticated remote attacker to execute arbitrary code, manipulate system command or interrupt service.","vulnerable_configuration":[{"id":"cpe:2.3:a:easyuse:mailhunter_ultimate:-:*:*:*:*:*:*:*","title":"cpe:2.3:a:easyuse:mailhunter_ultimate:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:easyuse:mailhunter_ultimate:2020:*:*:*:*:*:*:*","title":"cpe:2.3:a:easyuse:mailhunter_ultimate:2020:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:easyuse:mailhunter_ultimate:-:*:*:*:*:*:*:*","cpe:2.3:a:easyuse:mailhunter_ultimate:2020:*:*:*:*:*:*:*"]}