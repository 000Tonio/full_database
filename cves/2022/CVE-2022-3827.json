{"Modified":"2022-11-04T03:51:00","Published":"2022-11-02T13:15:00","access":{},"assigner":"cna@vuldb.com","capec":[{"id":"7","name":"Blind SQL Injection","prerequisites":"SQL queries used by the application to store, retrieve or modify data. User-controllable input that is not properly validated by the application as part of SQL queries.","related_weakness":["20","209","697","707","713","74","89"],"solutions":"Security by Obscurity is not a solution to preventing SQL Injection. Rather than suppress error messages and exceptions, the application must handle them gracefully, returning either a custom error page or redirecting the user to a default page, without revealing any information about the database or the application internals. Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear.","summary":"Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection."},{"id":"84","name":"XQuery Injection","prerequisites":"The XQL must execute unvalidated data","related_weakness":["707","713","74"],"solutions":"Design: Perform input white list validation on all XML input Implementation: Run xml parsing and query infrastructure with minimal privileges so that an attacker is limited in their ability to probe other system resources from XQL.","summary":"This attack utilizes XQuery to probe and attack server systems; in a similar manner that SQL Injection allows an attacker to exploit SQL calls to RDBMS, XQuery Injection uses improperly validated data that is passed to XQuery commands to traverse and execute commands that the XQuery routines have access to. XQuery injection can be used to enumerate elements on the victim's environment, inject commands to the local host, or execute queries to remote files and data sources."},{"id":"53","name":"Postfix, Null Terminate, and Backslash","prerequisites":"Null terminators are not properly handled by the filter.","related_weakness":["158","171","172","173","20","697","707","74"],"solutions":"Properly handle Null characters. Make sure canonicalization is properly applied. Do not pass Null characters to the underlying APIs. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.","summary":"If a string is passed through a filter of some kind, then a terminal NULL may not be valid. Using alternate representation of NULL allows an attacker to embed the NULL mid-string while postfixing the proper data so that the filter is avoided. One example is a filter that looks for a trailing slash character. If a string insertion is possible, but the slash must exist, an alternate encoding of NULL in mid-string may be used."},{"id":"468","name":"Generic Cross-Browser Cross-Domain Theft","prerequisites":"No new lines can be present in the injected CSS stringProper HTML or URL escaping of the \" and ' characters is not presentThe attacker has control of two injection points: pre-string and post-string","related_weakness":["149","177","707","838"],"solutions":"Implementation: Perform proper HTML encoding and URL escaping","summary":"An attacker makes use of Cascading Style Sheets (CSS) injection to steal data cross domain from the victim's browser. The attack works by abusing the standards relating to loading of CSS: 1. Send cookies on any load of CSS (including cross-domain) 2. When parsing returned CSS ignore all data that does not make sense before a valid CSS descriptor is found by the CSS parser By having control of some text in the victim's domain, the attacker is able to inject a seemingly valid CSS string. It does not matter if this CSS string is preceded by other data. The CSS parser will still locate the CSS string. If the attacker is able to control two injection points, one before the cross domain data that the attacker is interested in receiving and the other one after, the attacker can use this attack to steal all of the data in between these two CSS injection points when referencing the injected CSS while performing rendering on the site that the attacker controls. When rendering, the CSS parser will detect the valid CSS string to parse and ignore the data that \"does not make sense\". That data will simply be rendered. That data is in fact the data that the attacker just stole cross domain. The stolen data may contain sensitive information, such CSRF protection tokens."},{"id":"278","name":"Web Services Protocol Manipulation","prerequisites":"The targeted application or service must rely on web service protocols in such a way that malicious manipulation of them can alter functionality.","related_weakness":["707"],"solutions":"Design: Range, size and value and consistency verification for any arguments supplied to applications and services from external sources and devise appropriate error response. Design: Ensure that function calls that should not be called by an unprivileged user are not accessible to them.","summary":"An adversary manipulates a web service related protocol to cause a web application or service to react differently than intended. This can either be performed through the manipulation of call parameters to include unexpected values, or by changing the called function to one that should normally be restricted or limited. By leveraging this pattern of attack, the adversary is able to gain access to data or resources normally restricted, or to cause the application or service to crash."},{"id":"83","name":"XPath Injection","prerequisites":"XPath queries used to retrieve information stored in XML documents User-controllable input not properly sanitized before being used as part of XPath queries","related_weakness":["20","707","713","74","91"],"solutions":"Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XPath expression. Characters such as a single-quote(') or operators such as or (|), and (&) and such should be filtered if the application does not expect them in the context in which they appear. If such content cannot be filtered, it must at least be properly escaped to avoid them being interpreted as part of XPath expressions. Use of parameterized XPath queries - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails. Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.","summary":"An attacker can craft special user-controllable input consisting of XPath expressions to inject the XML database and bypass authentication or glean information that he normally would not be able to. XPath Injection enables an attacker to talk directly to the XML database, thus bypassing the application completely. XPath Injection results from the failure of an application to properly sanitize input used as part of dynamic XPath expressions used to query an XML database."},{"id":"34","name":"HTTP Response Splitting","prerequisites":"User-controlled input used as part of HTTP header Ability of adversary to inject custom strings in HTTP header Insufficient input validation in application to check for input sanity before using it as part of response header","related_weakness":["113","697","707","713","74"],"solutions":"To avoid HTTP Response Splitting, the application must not rely on user-controllable input to form part of its output response stream. Specifically, response splitting occurs due to injection of CR-LF sequences and additional headers. All data arriving from the user and being used as part of HTTP response headers must be subjected to strict validation that performs simple character-based as well as semantic filtering to strip it of malicious character sequences and headers.","summary":"This attack uses a maliciously-crafted HTTP request in order to cause a vulnerable web server to respond with an HTTP response stream that will be interpreted by the client as two separate responses instead of one. This is possible when user-controlled input is used unvalidated as part of the response headers. The target software, the client, will interpret the injected header as being a response to a second request, thereby causing the maliciously-crafted contents be displayed and possibly cached."},{"id":"64","name":"Using Slashes and URL Encoding Combined to Bypass Validation Logic","prerequisites":"The application accepts and decodes URL string request. The application performs insufficient filtering/canonicalization on the URLs.","related_weakness":["171","172","173","177","20","21","22","697","707","73","74"],"solutions":"Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input. Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible. Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL. Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive. There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx).","summary":"This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc."},{"id":"52","name":"Embedding NULL Bytes","prerequisites":"The program does not properly handle postfix NULL terminators","related_weakness":["158","171","172","173","20","697","707","74"],"solutions":"Properly handle the NULL characters supplied as part of user input prior to doing anything with the data.","summary":"An attacker embeds one or more null bytes in input to the target software. This attack relies on the usage of a null-valued byte as a string terminator in many environments. The goal is for certain components of the target software to stop processing the input when it encounters the null byte(s)."},{"id":"78","name":"Using Escaped Slashes in Alternate Encoding","prerequisites":"The application accepts the backlash character as escape character. The application server does incomplete input data decoding, filtering and validation.","related_weakness":["171","172","173","180","181","20","21","22","697","707","73","74"],"solutions":"Verify that the user-supplied data does not use backslash character to escape malicious characters. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Be aware of the threat of alternative method of data encoding. Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data. In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access. Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.","summary":"This attack targets the use of the backslash in alternate encoding. An attacker can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the attacker tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack."},{"id":"279","name":"SOAP Manipulation","prerequisites":"An application uses SOAP-based web service api. An application does not perform sufficient input validation to ensure that user-controllable data is safe for an XML parser. The targeted server either fails to verify that data in SOAP messages conforms to the appropriate XML schema, or it fails to correctly handle the complete range of data allowed by the schema.","related_weakness":["707"],"solutions":"","summary":"Simple Object Access Protocol (SOAP) is used as a communication protocol between a client and server to invoke web services on the server. It is an XML-based protocol, and therefore suffers from many of the same shortcomings as other XML-based protocols. Adviseries can make use these shortcomings to mount an denial of service attack, disclose information and execute arbitrary code. This includes a SOAP parameter tampering attack in which an attacker sends a SOAP message where the field values are other than what the server is likely to expect in order to precipitate non-standard server behavior."},{"id":"33","name":"HTTP Request Smuggling","prerequisites":"An additional HTTP entity such as an application firewall or a web caching proxy between the attacker and the second entity such as a web server Differences in the way the two HTTP entities parse HTTP requests","related_weakness":["436","444","707"],"solutions":"HTTP Request Smuggling is usually targeted at web servers. Therefore, in such cases, careful analysis of the entities must occur during system design prior to deployment. If there are known differences in the way the entities parse HTTP requests, the choice of entities needs consideration. Employing an application firewall can help. However, there are instances of the firewalls being susceptible to HTTP Request Smuggling as well.","summary":"HTTP Request Smuggling results from the discrepancies in parsing HTTP requests between HTTP entities such as web caching proxies or application firewalls. Entities such as web servers, web caching proxies, application firewalls or simple proxies often parse HTTP requests in slightly different ways. Under specific situations where there are two or more such entities in the path of the HTTP request, a specially crafted request is seen by two attacked entities as two different sets of requests. This allows certain requests to be smuggled through to a second entity without the first one realizing it."},{"id":"66","name":"SQL Injection","prerequisites":"SQL queries used by the application to store, retrieve or modify data. User-controllable input that is not properly validated by the application as part of SQL queries.","related_weakness":["20","697","707","713","74","89"],"solutions":"Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear. Use of parameterized queries or stored procedures - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails. Note that SQL Injection is possible even in the presence of stored procedures if the eventual query is constructed dynamically. Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.","summary":"This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended. SQL Injection results from failure of the application to appropriately validate input. When specially crafted user-controlled input consisting of SQL syntax is used without proper validation as part of SQL queries, it is possible to glean information from the database in ways not envisaged during application design. Depending upon the database and the design of the application, it may also be possible to leverage injection to have the database execute system-related commands of the attackers' choice. SQL Injection enables an attacker to talk directly to the database, thus bypassing the application completely. Successful injection can cause information disclosure as well as ability to add or modify data in the database. In order to successfully inject SQL and retrieve information from a database, an attacker:"},{"id":"79","name":"Using Slashes in Alternate Encoding","prerequisites":"The application server accepts paths to locate resources. The application server does insufficient input data validation on the resource path requested by the user. The access right to resources are not set properly.","related_weakness":["171","173","180","181","185","20","200","21","22","697","707","73","74"],"solutions":"Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL. When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible. There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx) Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section) Test your path decoding process against malicious input. In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access. Assume all input is malicious. Create a white list that defines all valid input to the application based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.","summary":"This attack targets the encoding of the Slash characters. An attacker would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the attacker many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other."},{"id":"276","name":"Inter-component Protocol Manipulation","prerequisites":"","related_weakness":["707"],"solutions":"","summary":"Inter-component protocols are used to communicate between different software and hardware modules within a single computer. Common examples are: interrupt signals and data pipes. Subverting the protocol can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself."},{"id":"250","name":"XML Injection","prerequisites":"XML queries used to process user input and retrieve information stored in XML documents User-controllable input not properly sanitized","related_weakness":["20","707","713","74","91"],"solutions":"Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.","summary":"An attacker utilizes crafted XML user-controllable input to probe, attack, and inject data into the XML database, using techniques similar to SQL injection. The user-controllable input can allow for unauthorized viewing of data, bypassing authentication or the front-end application for direct XML database access, and possibly altering database information."},{"id":"277","name":"Data Interchange Protocol Manipulation","prerequisites":"","related_weakness":["707"],"solutions":"","summary":"Data Interchange Protocols are used to transmit structured data between entities. These protocols are often specific to a particular domain (B2B: purchase orders, invoices, transport logistics and waybills, medical records). They are often, but not always, XML-based. Subverting the protocol can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself."},{"id":"3","name":"Using Leading 'Ghost' Character Sequences to Bypass Input Filters","prerequisites":"The targeted API must ignore the leading ghost characters that are used to get past the filters for the semantics to be the same.","related_weakness":["171","172","173","179","180","181","183","184","20","41","697","707","74"],"solutions":"Perform white list rather than black list input validation. Canonicalize all data prior to validation. Take an iterative approach to input validation (defense in depth).","summary":"Some APIs will strip certain leading characters from a string of parameters. An adversary can intentionally introduce leading \"ghost\" characters (extra characters that don't affect the validity of the request at the API layer) that enable the input to pass the filters and therefore process the adversary's input. This occurs when the targeted API will accept input data in several syntactic forms and interpret it in the equivalent semantic way, while the filter does not take into account the full spectrum of the syntactic forms acceptable to the targeted API."},{"id":"43","name":"Exploiting Multiple Input Interpretation Layers","prerequisites":"User input is used to construct a command to be executed on the target system or as part of the file name. Multiple parser passes are performed on the data supplied by the user.","related_weakness":["171","179","181","183","184","20","697","707","74","77","78"],"solutions":"An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it. Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.","summary":"An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop."}],"cvss":null,"cwe":"CWE-707","id":"CVE-2022-3827","impact":{},"last-modified":"2022-11-04T03:51:00","references":["https://github.com/centreon/centreon/pull/11869","https://github.com/centreon/centreon/commit/293b10628f7d9f83c6c82c78cf637cbe9b907369","https://vuldb.com/?id.212794"],"summary":"A vulnerability was found in centreon. It has been declared as critical. This vulnerability affects unknown code of the file formContactGroup.php of the component Contact Groups Form. The manipulation of the argument cg_id leads to sql injection. The attack can be initiated remotely. The name of the patch is 293b10628f7d9f83c6c82c78cf637cbe9b907369. It is recommended to apply a patch to fix this issue. VDB-212794 is the identifier assigned to this vulnerability.","vulnerable_configuration":[{"id":"cpe:2.3:a:centreon:centreon:-:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.4.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.4.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.4.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.4.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.4.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.4.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.4.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.4.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.5.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.5.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.5.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.5.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.5.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.5.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.5.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.5.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.5.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.5.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.6.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.6.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.6.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.6.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.6.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.6.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.6.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.6.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.6.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.6.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.6.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.6.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.6.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.6.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.7.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.7.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.0:beta2:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.0:beta2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.14:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.14:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.15:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.15:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.16:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.16:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.17:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.17:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.18:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.18:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.19:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.19:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.20:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.20:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.21:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.21:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.22:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.22:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.23:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.23:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.24:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.24:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.25:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.25:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.26:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.26:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.27:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.27:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.28:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.28:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.29:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.29:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.30:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.30:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.31:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.31:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.32:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.32:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.8.216:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.8.216:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.28.29:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.28.29:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.99.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.99.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.99.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.99.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.99.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.99.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.99.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.99.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:2.99.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:2.99.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:3.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:3.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:3.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:3.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:3.4.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:3.4.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:3.4.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:3.4.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:18.10.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:18.10.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.04.15:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.04.15:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10:el7:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10:el7:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.0:beta1:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.0:beta1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.0:beta2:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.0:beta2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.0:beta3:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.0:beta3:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.0:rc1:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.0:rc1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.14:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.14:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.15:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.15:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.16:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.16:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.17:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.17:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.18:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.18:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.19:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.19:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.20:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.20:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.21:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.21:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.22:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.22:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:19.10.23:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:19.10.23:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.0:beta1:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.0:beta1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.0:rc1:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.0:rc1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.0:rc2:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.0:rc2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.0:rc3:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.0:rc3:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.14:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.14:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.15:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.15:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.16:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.16:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.04.17:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.04.17:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.14:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.14:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.15:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.15:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.16:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.16:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.17:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.17:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:20.10.18:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:20.10.18:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.14:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.14:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.15:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.15:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.16:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.16:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.17:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.17:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.18:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.18:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.19:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.19:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.04.20:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.04.20:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.0:beta1:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.0:beta1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.0:beta2:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.0:beta2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.0:rc1:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.0:rc1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:21.10.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:21.10.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.0:beta1:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.0:beta1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.0:beta2:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.0:beta2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:centreon:centreon:22.04.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:centreon:centreon:22.04.7:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:centreon:centreon:-:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.4.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.4.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.4.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.4.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.4.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.5.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.5.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.5.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.5.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.5.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.6.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.6.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.6.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.6.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.6.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.6.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.6.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.7:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.8:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.11:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.7.13:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.0:-:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.0:beta2:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.7:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.9:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.11:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.13:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.14:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.15:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.16:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.17:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.18:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.19:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.20:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.21:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.22:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.23:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.24:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.25:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.26:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.27:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.28:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.29:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.30:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.31:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.32:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.8.216:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.28.29:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.99.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.99.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.99.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.99.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:2.99.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:3.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:3.4.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:3.4.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:3.4.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.0.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.8:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.9:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.11:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:18.10.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.0.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.7:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.8:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.9:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.11:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.13:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.04.15:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10:el7:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.0:-:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.0:beta1:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.0:beta2:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.0:beta3:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.0:rc1:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.7:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.8:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.9:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.13:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.14:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.15:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.16:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.17:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.18:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.19:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.20:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.21:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.22:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:19.10.23:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.0:-:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.0:beta1:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.0:rc1:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.0:rc2:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.0:rc3:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.7:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.8:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.9:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.11:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.13:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.14:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.15:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.16:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.04.17:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.7:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.8:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.9:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.11:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.13:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.14:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.15:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.16:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.17:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:20.10.18:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.7:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.8:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.9:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.11:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.13:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.14:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.15:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.16:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.17:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.18:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.19:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.04.20:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.0:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.0:-:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.0:beta1:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.0:beta2:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.0:rc1:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.7:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.8:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.9:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.10:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.11:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.12:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:21.10.13:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.0:-:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.0:beta1:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.0:beta2:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.1:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.2:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.3:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.4:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.5:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.6:*:*:*:*:*:*:*","cpe:2.3:a:centreon:centreon:22.04.7:*:*:*:*:*:*:*"]}