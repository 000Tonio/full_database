{"Modified":"2022-10-12T18:17:00","Published":"2022-10-10T21:15:00","access":{},"assigner":"security-advisories@github.com","capec":[],"cvss":null,"cwe":"CWE-121","id":"CVE-2022-36063","impact":{},"last-modified":"2022-10-12T18:17:00","references":["https://github.com/azure-rtos/usbx/security/advisories/GHSA-chpp-5fv9-6368","https://github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel","https://github.com/azure-rtos/usbx/blob/master/common/usbx_host_classes/src/ux_host_class_cdc_ecm_mac_address_get.c#L264"],"summary":"Azure RTOS USBx is a USB host, device, and on-the-go (OTG) embedded stack, fully integrated with Azure RTOS ThreadX and available for all Azure RTOS ThreadXâ€“supported processors. Azure RTOS USBX implementation of host support for USB CDC ECM includes an integer underflow and a buffer overflow in the `_ux_host_class_cdc_ecm_mac_address_get` function which may be potentially exploited to achieve remote code execution or denial of service. Setting mac address string descriptor length to a `0` or `1` allows an attacker to introduce an integer underflow followed (string_length) by a buffer overflow of the `cdc_ecm -> ux_host_class_cdc_ecm_node_id` array. This may allow one to redirect the code execution flow or introduce a denial of service. The fix has been included in USBX release [6.1.12](https://github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel). Improved mac address string descriptor length validation to check for unexpectedly small values may be used as a workaround.","vulnerable_configuration":[{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.0:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.0.1:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.0.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.0.2:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.0.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.2:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.3:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.4:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.5:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.6:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.7:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.8:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.9:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.10:*:*:*:*:*:*:*","title":"cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.10:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:microsoft:azure_rtos_usbx:6.0:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.0.1:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.0.2:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.2:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.3:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.4:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.5:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.6:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.7:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.8:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.9:*:*:*:*:*:*:*","cpe:2.3:o:microsoft:azure_rtos_usbx:6.1.10:*:*:*:*:*:*:*"]}