{"Modified":"2022-08-24T15:58:00","Published":"2022-08-19T13:15:00","access":{},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2022-29805","impact":{},"last-modified":"2022-08-24T15:58:00","references":["https://www.whiteoaksecurity.com/blog/fishbowl-disclosure-cve-2022-29805/","https://www.fishbowlinventory.com"],"summary":"A Java Deserialization vulnerability in the Fishbowl Server in Fishbowl Inventory before 2022.4.1 allows remote attackers to execute arbitrary code via a crafted XML payload.","vulnerable_configuration":[{"id":"cpe:2.3:a:fishbowlinventory:fishbowl:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:fishbowlinventory:fishbowl:*:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:fishbowlinventory:fishbowl:*:*:*:*:*:*:*:*"]}