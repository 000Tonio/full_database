{"Modified":"2022-11-18T20:25:00","Published":"2022-11-16T08:15:00","access":{},"assigner":"cna@vuldb.com","capec":[{"id":"81","name":"Web Logs Tampering","prerequisites":"Target server software must be a HTTP server that performs web logging.","related_weakness":["116","117","150","20","221","276","279","713","75","93","96"],"solutions":"Design: Use input validation before writing to web log Design: Validate all log data before it is output","summary":"Web Logs Tampering attacks involve an attacker injecting, deleting or otherwise tampering with the contents of web logs typically for the purposes of masking other malicious behavior. Additionally, writing malicious data to log files may target jobs, filters, reports, and other agents that process the logs in an asynchronous attack pattern. This pattern of attack is similar to \"Log Injection-Tampering-Forging\" except that in this case, the attack is targeting the logs of the web server and not the application."},{"id":"93","name":"Log Injection-Tampering-Forging","prerequisites":"The target host is logging the action and data of the user. The target host insufficiently protects access to the logs or logging mechanisms.","related_weakness":["117","150","713","75"],"solutions":"Carefully control access to physical log files. Do not allow tainted data to be written in the log file without prior input validation. Whitelisting may be used to properly validate the data. Use synchronization to control the flow of execution. Use static analysis tools to identify log forging vulnerabilities. Avoid viewing logs with tools that may interpret control characters in the file, such as command-line shells.","summary":"This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing him to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability."},{"id":"268","name":"Audit Log Manipulation","prerequisites":"The target host is logging the action and data of the user. The target host insufficiently protects access to the logs or logging mechanisms.","related_weakness":["117"],"solutions":"","summary":"The attacker injects, manipulates, deletes, or forges malicious log entries into the log file, in an attempt to mislead an audit of the log file or cover tracks of an attack. Due to either insufficient access controls of the log files or the logging mechanism, the attacker is able to perform such actions."}],"cvss":null,"cwe":"CWE-117","id":"CVE-2022-4011","impact":{},"last-modified":"2022-11-18T20:25:00","references":["https://drive.google.com/file/d/142cPciqIhNbfKhhxIwbrYFTegLvnwin_/view","https://vuldb.com/?id.213785","https://drive.google.com/file/d/1AJXip8UG_ADbxtokPzAb61-lEg-xLebZ/view"],"summary":"A vulnerability was found in Simple History Plugin. It has been rated as critical. This issue affects some unknown processing of the component Header Handler. The manipulation of the argument X-Forwarded-For leads to improper output neutralization for logs. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-213785 was assigned to this vulnerability.","vulnerable_configuration":[{"id":"cpe:2.3:a:simple_history_project:simple_history:-:*:*:*:*:wordpress:*:*","title":"cpe:2.3:a:simple_history_project:simple_history:-:*:*:*:*:wordpress:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:simple_history_project:simple_history:-:*:*:*:*:wordpress:*:*"]}