{"Modified":"2022-07-27T22:42:00","Published":"2022-07-19T16:15:00","access":{},"assigner":"psirt@sick.de","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2022-27580","impact":{},"last-modified":"2022-07-27T22:42:00","references":["https://sick.com/psirt"],"summary":"A deserialization vulnerability in a .NET framework class used and not properly checked by Safety Designer all versions up to and including 1.11.0 allows an attacker to craft malicious project files. Opening/importing such a malicious project file would execute arbitrary code with the privileges of the current user when opened or imported by the Safety Designer. This compromises confidentiality integrity and availability. For the attack to succeed a user must manually open a malicious project file.","vulnerable_configuration":[{"id":"cpe:2.3:a:sick:safety_designer:1.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.1:-:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.1:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.1:sp1:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.1:sp1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.6.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.6.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.7.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.7.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.10.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.10.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sick:safety_designer:1.11.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:sick:safety_designer:1.11.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:sick:safety_designer:1.0.0:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.1:-:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.1:sp1:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.2:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.3:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.4:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.5:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.6:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.6.1:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.7.0:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.8:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.10.0:*:*:*:*:*:*:*","cpe:2.3:a:sick:safety_designer:1.11.0:*:*:*:*:*:*:*"]}