{"Modified":"2022-11-30T13:44:00","Published":"2022-11-23T18:15:00","access":{},"assigner":"security-advisories@github.com","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2022-41922","impact":{},"last-modified":"2022-11-30T13:44:00","references":["https://github.com/yiisoft/yii/security/advisories/GHSA-442f-wcwq-fpcf","https://github.com/yiisoft/yii/commit/ed67b7cc57216557c5c595c6650cdd2d3aa41c52"],"summary":"`yiisoft/yii` before version 1.1.27 are vulnerable to Remote Code Execution (RCE) if the application calls `unserialize()` on arbitrary user input. This has been patched in 1.1.27.","vulnerable_configuration":[{"id":"cpe:2.3:a:yiiframework:yii:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:yiiframework:yii:*:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:yiiframework:yii:*:*:*:*:*:*:*:*"]}