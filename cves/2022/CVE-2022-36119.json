{"Modified":"2022-09-01T16:07:00","Published":"2022-08-25T23:15:00","access":{},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2022-36119","impact":{},"last-modified":"2022-09-01T16:07:00","references":["https://portal.blueprism.com/security-vulnerabilities-august-2022","https://community.blueprism.com/discussion/security-vulnerability-notification-ssc-blue-prism-enterprise","https://blueprism.com"],"summary":"An issue was discovered in Blue Prism Enterprise 6.0 through 7.01. In a misconfigured environment that exposes the Blue Prism Application server, it is possible for a domain authenticated user to send a crafted message to the Blue Prism Server and accomplish a remote code execution attack that is possible because of insecure deserialization. Exploitation of this vulnerability allows for code to be executed in the context of the Blue Prism Server service.","vulnerable_configuration":[{"id":"cpe:2.3:a:ssctech:blue_prism:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:ssctech:blue_prism:*:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:ssctech:blue_prism:*:*:*:*:*:*:*:*"]}