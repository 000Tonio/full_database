{"Modified":"2022-07-11T17:29:00","Published":"2022-06-30T18:15:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"jenkinsci-cert@googlegroups.com","capec":[{"id":"65","name":"Sniff Application Code","prerequisites":"The attacker must have the ability to place himself in the communication path between the client and server. The targeted application must receive some application code from the server; for example, dynamic updates, patches, applets or scripts. The attacker must be able to employ a sniffer on the network without being detected.","related_weakness":["311","318","319","693","719"],"solutions":"Design: Encrypt all communication between the client and server. Implementation: Use SSL, SSH, SCP. Operation: Use \"ifconfig/ipconfig\" or other tools to detect the sniffer installed in the network.","summary":"An adversary passively sniffs network communications and captures application code bound for an authorized client. Once obtained, they can use it as-is, or through reverse-engineering glean sensitive information or exploit the trust relationship between the client and server. Such code may belong to a dynamic update to the client, a patch being applied to a client component or any such interaction where the client is authorized to communicate with the server."},{"id":"37","name":"Retrieve Embedded Sensitive Data","prerequisites":"In order to feasibly execute this type of attack, some valuable data must be present in client software. Additionally, this information must be unprotected, or protected in a flawed fashion, or through a mechanism that fails to resist reverse engineering, statistical, or other attack.","related_weakness":["311","312","314","315","318","525"],"solutions":"","summary":"An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack."}],"cvss":4,"cvss-time":"2022-07-11T17:29:00","cvss-vector":"AV:N/AC:L/Au:S/C:P/I:N/A:N","cwe":"CWE-318","id":"CVE-2022-34804","impact":{"availability":"NONE","confidentiality":"PARTIAL","integrity":"NONE"},"last-modified":"2022-07-11T17:29:00","references":["https://www.jenkins.io/security/advisory/2022-06-30/#SECURITY-1877"],"summary":"Jenkins OpsGenie Plugin 1.9 and earlier transmits API keys in plain text as part of the global Jenkins configuration form and job configuration forms, potentially resulting in their exposure.","vulnerable_configuration":[{"id":"cpe:2.3:a:jenkins:opsgenie:*:*:*:*:*:jenkins:*:*","title":"cpe:2.3:a:jenkins:opsgenie:*:*:*:*:*:jenkins:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:jenkins:opsgenie:*:*:*:*:*:jenkins:*:*"]}