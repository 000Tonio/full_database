{"Modified":"2022-07-25T15:21:00","Published":"2022-07-18T17:15:00","access":{},"assigner":"security@wordfence.com","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2022-2444","impact":{},"last-modified":"2022-07-25T15:21:00","references":["https://www.wordfence.com/vulnerability-advisories/#CVE-2022-2444","https://github.com/Codeinwp/visualizer/blob/master/classes/Visualizer/Module/Chart.php#L1115","https://github.com/Codeinwp/visualizer/blob/master/classes/Visualizer/Source/Csv.php","https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=2752058%40visualizer&new=2752058%40visualizer&sfp_email=&sfph_mail=","https://github.com/Codeinwp/visualizer/compare/v3.7.9...v3.7.10"],"summary":"The Visualizer: Tables and Charts Manager for WordPress plugin for WordPress is vulnerable to deserialization of untrusted input via the 'remote_data' parameter in versions up to, and including 3.7.9. This makes it possible for authenticated attackers with contributor privileges and above to call files using a PHAR wrapper that will deserialize the data and call arbitrary PHP Objects that can be used to perform a variety of malicious actions granted a POP chain is also present. It also requires that the attacker is successful in uploading a file with the serialized payload.","vulnerable_configuration":[{"id":"cpe:2.3:a:themeisle:visualizer:*:*:*:*:*:wordpress:*:*","title":"cpe:2.3:a:themeisle:visualizer:*:*:*:*:*:wordpress:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:themeisle:visualizer:*:*:*:*:*:wordpress:*:*"]}