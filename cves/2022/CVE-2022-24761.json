{"Modified":"2022-09-23T18:57:00","Published":"2022-03-17T13:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"security-advisories@github.com","capec":[{"id":"105","name":"HTTP Request Splitting","prerequisites":"User-manipulateable HTTP Request headers are processed by the web server","related_weakness":["436","444"],"solutions":"Make sure to install the latest vendor security patches available for the web server. If possible, make use of SSL. Install a web application firewall that has been secured against HTTP Request Splitting Use web servers that employ a tight HTTP parsing process","summary":"HTTP Request Splitting (also known as HTTP Request Smuggling) is an attack pattern where an attacker attempts to insert additional HTTP requests in the body of the original (enveloping) HTTP request in such a way that the browser interprets it as one request but the web server interprets it as two. There are several ways to perform HTTP request splitting attacks. One way is to include double Content-Length headers in the request to exploit the fact that the devices parsing the request may each use a different header. Another way is to submit an HTTP request with a \"Transfer Encoding: chunked\" in the request header set with setRequestHeader to allow a payload in the HTTP Request that can be considered as another HTTP Request by a subsequent parsing entity. A third way is to use the \"Double CR in an HTTP header\" technique. There are also a few less general techniques targeting specific parsing vulnerabilities in certain web servers."},{"id":"33","name":"HTTP Request Smuggling","prerequisites":"An additional HTTP entity such as an application firewall or a web caching proxy between the attacker and the second entity such as a web server Differences in the way the two HTTP entities parse HTTP requests","related_weakness":["436","444","707"],"solutions":"HTTP Request Smuggling is usually targeted at web servers. Therefore, in such cases, careful analysis of the entities must occur during system design prior to deployment. If there are known differences in the way the entities parse HTTP requests, the choice of entities needs consideration. Employing an application firewall can help. However, there are instances of the firewalls being susceptible to HTTP Request Smuggling as well.","summary":"HTTP Request Smuggling results from the discrepancies in parsing HTTP requests between HTTP entities such as web caching proxies or application firewalls. Entities such as web servers, web caching proxies, application firewalls or simple proxies often parse HTTP requests in slightly different ways. Under specific situations where there are two or more such entities in the path of the HTTP request, a specially crafted request is seen by two attacked entities as two different sets of requests. This allows certain requests to be smuggled through to a second entity without the first one realizing it."}],"cvss":5,"cvss-time":"2022-09-23T18:57:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:P/A:N","cwe":"CWE-444","id":"CVE-2022-24761","impact":{"availability":"NONE","confidentiality":"NONE","integrity":"PARTIAL"},"last-modified":"2022-09-23T18:57:00","references":["https://github.com/Pylons/waitress/commit/9e0b8c801e4d505c2ffc91b891af4ba48af715e0","https://github.com/Pylons/waitress/security/advisories/GHSA-4f7p-27jc-3c36","https://github.com/Pylons/waitress/releases/tag/v2.1.1","https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html","https://www.debian.org/security/2022/dsa-5138"],"summary":"Waitress is a Web Server Gateway Interface server for Python 2 and 3. When using Waitress versions 2.1.0 and prior behind a proxy that does not properly validate the incoming HTTP request matches the RFC7230 standard, Waitress and the frontend proxy may disagree on where one request starts and where it ends. This would allow requests to be smuggled via the front-end proxy to waitress and later behavior. There are two classes of vulnerability that may lead to request smuggling that are addressed by this advisory: The use of Python's `int()` to parse strings into integers, leading to `+10` to be parsed as `10`, or `0x01` to be parsed as `1`, where as the standard specifies that the string should contain only digits or hex digits; and Waitress does not support chunk extensions, however it was discarding them without validating that they did not contain illegal characters. This vulnerability has been patched in Waitress 2.1.1. A workaround is available. When deploying a proxy in front of waitress, turning on any and all functionality to make sure that the request matches the RFC7230 standard. Certain proxy servers may not have this functionality though and users are encouraged to upgrade to the latest version of waitress instead.","vulnerable_configuration":[{"id":"cpe:2.3:a:agendaless:waitress:0.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.6.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.6.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.8.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.8.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:0.9.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:0.9.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.0.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.0.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.0.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.0.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.2.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.2.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.3.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.3.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.3.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.3.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.4.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.4.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.4.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.4.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.4.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.4.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:1.4.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:1.4.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:2.0.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:2.0.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:2.0.0:beta0:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:2.0.0:beta0:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:2.0.0:beta1:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:2.0.0:beta1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:2.1.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:2.1.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:agendaless:waitress:2.1.0:beta0:*:*:*:*:*:*","title":"cpe:2.3:a:agendaless:waitress:2.1.0:beta0:*:*:*:*:*:*"},{"id":"cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*","title":"cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:agendaless:waitress:0.1:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.2:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.3:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.4:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.5:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.6:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.6.1:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.7:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.1:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.2:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.3:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.4:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.5:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.6:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.7:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.8:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.9:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.10:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.8.11:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:0.9.0:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.0.0:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.0.1:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.0.2:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.1.0:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.2.0:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.2.1:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.3.0:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.3.1:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.4.0:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.4.1:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.4.2:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.4.3:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:1.4.4:*:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:2.0.0:-:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:2.0.0:beta0:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:2.0.0:beta1:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:2.1.0:-:*:*:*:*:*:*","cpe:2.3:a:agendaless:waitress:2.1.0:beta0:*:*:*:*:*:*","cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*"]}