{"Modified":"2022-12-12T17:46:00","Published":"2022-12-08T22:15:00","access":{},"assigner":"security-advisories@github.com","capec":[],"cvss":null,"cwe":"CWE-252","id":"CVE-2022-23495","impact":{},"last-modified":"2022-12-12T17:46:00","references":["https://github.com/ipfs/go-merkledag/releases/tag/v0.8.1","https://github.com/ipfs/go-merkledag/releases/tag/v0.8.0","https://github.com/ipfs/go-merkledag/pull/93","https://github.com/ipfs/go-merkledag/security/advisories/GHSA-x39j-h85h-3f46","https://github.com/ipfs/go-merkledag/pull/91","https://github.com/ipfs/kubo/issues/9297","https://github.com/ipfs/go-merkledag/pull/92","https://github.com/ipfs/go-merkledag/issues/90","https://en.wikipedia.org/wiki/Directed_acyclic_graph"],"summary":"go-merkledag implements the 'DAGService' interface and adds two ipld node types, Protobuf and Raw for the ipfs project. A `ProtoNode` may be modified in such a way as to cause various encode errors which will trigger a panic on common method calls that don't allow for error returns. A `ProtoNode` should only be able to encode to valid DAG-PB, attempting to encode invalid DAG-PB forms will result in an error from the codec. Manipulation of an existing (newly created or decoded) `ProtoNode` using the modifier methods did not account for certain states that would place the `ProtoNode` into an unencodeable form. Due to conformance with the [`github.com/ipfs/go-block-format#Block`](https://pkg.go.dev/github.com/ipfs/go-block-format#Block) and [`github.com/ipfs/go-ipld-format#Node`](https://pkg.go.dev/github.com/ipfs/go-ipld-format#Node) interfaces, certain methods, which internally require a re-encode if state has changed, will panic due to the inability to return an error. This issue has been addressed across a number of pull requests. Users are advised to upgrade to version 0.8.1 for a complete set of fixes. Users unable to upgrade may attempt to mitigate this issue by sanitising inputs when allowing user-input to set a new `CidBuilder` on a `ProtoNode` and by sanitising `Tsize` (`Link#Size`) values such that they are a reasonable byte-size for sub-DAGs where derived from user-input.","vulnerable_configuration":[{"id":"cpe:2.3:a:protocol:go-merkledag:0.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:protocol:go-merkledag:0.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:protocol:go-merkledag:0.4.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:protocol:go-merkledag:0.4.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:protocol:go-merkledag:0.5.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:protocol:go-merkledag:0.5.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:protocol:go-merkledag:0.5.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:protocol:go-merkledag:0.5.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:protocol:go-merkledag:0.6.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:protocol:go-merkledag:0.6.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:protocol:go-merkledag:0.7.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:protocol:go-merkledag:0.7.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:protocol:go-merkledag:0.8.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:protocol:go-merkledag:0.8.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:protocol:go-merkledag:0.4.0:*:*:*:*:*:*:*","cpe:2.3:a:protocol:go-merkledag:0.4.1:*:*:*:*:*:*:*","cpe:2.3:a:protocol:go-merkledag:0.5.0:*:*:*:*:*:*:*","cpe:2.3:a:protocol:go-merkledag:0.5.1:*:*:*:*:*:*:*","cpe:2.3:a:protocol:go-merkledag:0.6.0:*:*:*:*:*:*:*","cpe:2.3:a:protocol:go-merkledag:0.7.0:*:*:*:*:*:*:*","cpe:2.3:a:protocol:go-merkledag:0.8.0:*:*:*:*:*:*:*"]}