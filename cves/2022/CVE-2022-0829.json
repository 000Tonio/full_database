{"Modified":"2022-05-13T16:02:00","Published":"2022-03-02T12:15:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"security@huntr.dev","capec":[{"id":"39","name":"Manipulating Opaque Client-based Data Tokens","prerequisites":"An attacker already has some access to the system or can steal the client based data tokens from another user who has access to the system. For an Attacker to viably execute this attack, some data (later interpreted by the application) must be held client-side in a way that can be manipulated without detection. This means that the data or tokens are not CRCd as part of their value or through a separate meta-data store elsewhere.","related_weakness":["233","285","302","315","353","384","472","539","565"],"solutions":"One solution to this problem is to protect encrypted data with a CRC of some sort. If knowing who last manipulated the data is important, then using a cryptographic \"message authentication code\" (or hMAC) is prescribed. However, this guidance is not a panacea. In particular, any value created by (and therefore encrypted by) the client, which itself is a \"malicious\" value, all the protective cryptography in the world can't make the value 'correct' again. Put simply, if the client has control over the whole process of generating and encoding the value, then simply protecting its integrity doesn't help. Make sure to protect client side authentication tokens for confidentiality (encryption) and integrity (signed hash) Make sure that all session tokens use a good source of randomness Perform validation on the server side to make sure that client side data tokens are consistent with what is expected.","summary":"In circumstances where an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) that data can be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker. In this pattern an attacker undermines the assumption that client side tokens have been adequately protected from tampering through use of encryption or obfuscation."},{"id":"76","name":"Manipulating Web Input to File System Calls","prerequisites":"Program must allow for user controlled variables to be applied directly to the filesystem","related_weakness":["15","22","23","264","272","285","346","348","59","715","73","74","77"],"solutions":"Design: Enforce principle of least privilege. Design: Ensure all input is validated, and does not contain file system commands Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands. Design: For interactive user applications, consider if direct file system interface is necessary, instead consider having the application proxy communication. Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.","summary":"An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible."},{"id":"402","name":"Bypassing ATA Password Security","prerequisites":"Access to the system containing the ATA Drive so that the drive can be physically removed from the system.","related_weakness":["285"],"solutions":"","summary":"An attacker exploits a weakness in ATA security on a drive to gain access to the information the drive contains without supplying the proper credentials. ATA Security is often employed to protect hard disk information from unauthorized access. The mechanism requires the user to type in a password before the BIOS is allowed access to drive contents. Some implementations of ATA security will accept the ATA command to update the password without the user having authenticated with the BIOS. This occurs because the security mechanism assumes the user has first authenticated via the BIOS prior to sending commands to the drive. Various methods exist for exploiting this flaw, the most common being installing the ATA protected drive into a system lacking ATA security features (a.k.a. hot swapping). Once the drive is installed into the new system the BIOS can be used to reset the drive password."},{"id":"5","name":"Blue Boxing","prerequisites":"System must use weak authentication mechanisms for administrative functions.","related_weakness":["285"],"solutions":"Implementation: Upgrade phone lines. Note this may be prohibitively expensive Use strong access control such as two factor access control for administrative access to the switch","summary":"This type of attack against older telephone switches and trunks has been around for decades. A tone is sent by an adversary to impersonate a supervisor signal which has the effect of rerouting or usurping command of the line. While the US infrastructure proper may not contain widespread vulnerabilities to this type of attack, many companies are connected globally through call centers and business process outsourcing. These international systems may be operated in countries which have not upgraded Telco infrastructure and so are vulnerable to Blue boxing. Blue boxing is a result of failure on the part of the system to enforce strong authorization for administrative functions. While the infrastructure is different than standard current applications like web applications, there are historical lessons to be learned to upgrade the access control for administrative functions."},{"id":"104","name":"Cross Zone Scripting","prerequisites":"The target must be using a zone-aware browser.","related_weakness":["116","20","250","285","638"],"solutions":"Disable script execution. Ensure that sufficient input validation is performed for any potentially untrusted data before it is used in any privileged context or zone Limit the flow of untrusted data into the privileged areas of the system that run in the higher trust zone Limit the sites that are being added to the local machine zone and restrict the privileges of the code running in that zone to the bare minimum Ensure proper HTML output encoding before writing user supplied data to the page","summary":"An attacker is able to cause a victim to load content into their web-browser that bypasses security zone controls and gain access to increased privileges to execute scripting code or other web objects such as unsigned ActiveX controls or applets. This is a privilege elevation attack targeted at zone-based web-browser security. In a zone-based model, pages belong to one of a set of zones corresponding to the level of privilege assigned to that page. Pages in an untrusted zone would have a lesser level of access to the system and/or be restricted in the types of executable content it was allowed to invoke. In a cross-zone scripting attack, a page that should be assigned to a less privileged zone is granted the privileges of a more trusted zone. This can be accomplished by exploiting bugs in the browser, exploiting incorrect configuration in the zone controls, through a cross-site scripting attack that causes the attackers' content to be treated as coming from a more trusted page, or by leveraging some piece of system functionality that is accessible from both the trusted and less trusted zone. This attack differs from \"Restful Privilege Escalation\" in that the latter correlates to the inadequate securing of RESTful access methods (such as HTTP DELETE) on the server, while cross-zone scripting attacks the concept of security zones as implemented by a browser."},{"id":"51","name":"Poison Web Service Registry","prerequisites":"The attacker must be able to write to resources or redirect access to the service registry.","related_weakness":["285","693","74"],"solutions":"Design: Enforce principle of least privilege Design: Harden registry server and file access permissions Implementation: Implement communications to and from the registry using secure protocols","summary":"SOA and Web Services often use a registry to perform look up, get schema information, and metadata about services. A poisoned registry can redirect (think phishing for servers) the service requester to a malicious service provider, provide incorrect information in schema or metadata (to effect a denial of service), and delete information about service provider interfaces. WS-Addressing is used to virtualize services, provide return addresses and other routing information, however, unless the WS-Addressing headers are protected they are vulnerable to rewriting. The attacker that can rewrite WS-addressing information gains the ability to route service requesters to any service providers, and the ability to route service provider response to any service. Content in a registry is deployed by the service provider. The registry in an SOA or Web Services system can be accessed by the service requester via UDDI or other protocol. The basic flow for the attacker consists of either altering the data at rest in the registry or uploading malicious content by spoofing a service provider. The service requester is then redirected to send its requests and/or responses to services the attacker controls."},{"id":"59","name":"Session Credential Falsification through Prediction","prerequisites":"The target host uses session IDs to keep track of the users. Session IDs are used to control access to resources. The session IDs used by the target host are predictable. For example, the session IDs are generated using predictable information (e.g., time).","related_weakness":["200","285","290","330","331","346","384","488","539","6","693","719"],"solutions":"Use a strong source of randomness to generate a session ID. Use adequate length session IDs Do not use information available to the user in order to generate session ID (e.g., time). Ideas for creating random numbers are offered by Eastlake [RFC1750] Encrypt the session ID if you expose it to the user. For instance session ID can be stored in a cookie in encrypted format.","summary":"This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking."},{"id":"647","name":"Collect Data from Registries","prerequisites":"The adversary must have obtained logical access to the system by some means (e.g., via obtained credentials or planting malware on the system). The adversary must have capability to navigate the operating system to peruse the registry.","related_weakness":["285"],"solutions":"Employ a robust and layered defensive posture in order to prevent unauthorized users on your system. Employ robust identification and audit/blocking via whitelisting of applications on your system. Unnecessary applications, utilities, and configurations will have a presence in the system registry that can be leveraged by an adversary through this attack pattern.","summary":"An adversary exploits a weakness in authorization to gather system-specific data and sensitive information within a registry (e.g., Windows Registry, Mac plist). These contain information about the system configuration, software, operating system, and security. The adversary can leverage information gathered in order to carry out further attacks."},{"id":"17","name":"Using Malicious Files","prerequisites":"System's configuration must allow an attacker to directly access executable files or upload files to execute. This means that any access control system that is supposed to mediate communications between the subject and the object is set incorrectly or assumes a benign environment.","related_weakness":["264","270","272","275","282","285","59","693","732"],"solutions":"Design: Enforce principle of least privilege Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands. Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.","summary":"An attack of this type exploits a system's configuration that allows an attacker to either directly access an executable file, for example through shell access; or in a possible worst case allows an attacker to upload a file and then execute it. Web servers, ftp servers, and message oriented middleware systems which have many integration points are particularly vulnerable, because both the programmers and the administrators must be in synch regarding the interfaces and the correct privileges for each interface."},{"id":"45","name":"Buffer Overflow via Symbolic Links","prerequisites":"The attacker can create symbolic link on the target host. The target host does not perform correct boundary checking while consuming data from a resources.","related_weakness":["118","119","120","20","285","302","680","697","74"],"solutions":"Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource. Because Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories. Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources. Always check the size of the input data before copying to a buffer. Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution.","summary":"This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking."},{"id":"1","name":"Accessing Functionality Not Properly Constrained by ACLs","prerequisites":"The application must be navigable in a manner that associates elements (subsections) of the application with ACLs. The various resources, or individual URLs, must be somehow discoverable by the attacker The administrator must have forgotten to associate an ACL or has associated an inappropriately permissive ACL with a particular navigable resource.","related_weakness":["276","285","434","693","721","732"],"solutions":"In a more general setting, the administrator must mark every resource besides the ones supposed to be exposed to the user as accessible by a role impossible for the user to assume. The default security setting must be to deny access and then grant access only to those resources intended by business logic.","summary":"In applications, particularly web applications, access to functionality is mitigated by an authorization framework. This framework maps Access Control Lists (ACLs) to elements of the application's functionality; particularly URL's for web apps. In the case that the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker can access resources that must be available only to users at a higher privilege level, can access management sections of the application, or can run queries for data that they otherwise not supposed to."},{"id":"127","name":"Directory Indexing","prerequisites":"The target must be misconfigured to return a list of a directory's content when it receives a request that ends in a directory name rather than a file name. The adversary must be able to control the path that is requested of the target. The administrator must have failed to properly configure an ACL or has associated an overly permissive ACL with a particular directory. The server version or patch level must not inherently prevent known directory listing attacks from working.","related_weakness":["276","285","288","424","425","693","721","732"],"solutions":"1. Using blank index.html: putting blank index.html simply prevent directory listings from displaying to site visitors. 2. Preventing with .htaccess in Apache web server: In .htaccess, write \"Options-indexes\". 3. Suppressing error messages: using error 403 \"Forbidden\" message exactly like error 404 \"Not Found\" message.","summary":"An adversary crafts a request to a target that results in the target listing/indexing the content of a directory as output. One common method of triggering directory contents as output is to construct a request containing a path that terminates in a directory name rather than a file name since many applications are configured to provide a list of the directory's contents when such a request is received. An adversary can use this to explore the directory tree on a target as well as learn the names of files. This can often end up revealing test files, backup files, temporary files, hidden files, configuration files, user accounts, script contents, as well as naming conventions, all of which can be used by an attacker to mount additional attacks."},{"id":"13","name":"Subverting Environment Variable Values","prerequisites":"An environment variable is accessible to the user. An environment variable used by the application can be tainted with user supplied data. Input data used in an environment variable is not validated properly. The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an attacker may attempt to manipulate that variable.","related_weakness":["15","20","200","285","302","353","73","74"],"solutions":"Protect environment variables against unauthorized read and write access. Protect the configuration files which contain environment variables against illegitimate read and write access. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege.","summary":"The attacker directly or indirectly modifies environment variables used by or controlling the target software. The attacker's goal is to cause the target software to deviate from its expected operation in a manner that benefits the attacker."},{"id":"77","name":"Manipulating User-Controlled Variables","prerequisites":"A variable consumed by the application server is exposed to the client. A variable consumed by the application server can be overwritten by the user. The application server trusts user supplied data to compute business logic. The application server does not perform proper input validation.","related_weakness":["15","285","302","473","94","96"],"solutions":"If the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables. A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary. Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data. Use encapsulation when declaring your variables. This is to lower the exposure of your variables. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should be rejected by the program.","summary":"This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An attacker can override environment variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the attacker can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables."},{"id":"87","name":"Forceful Browsing","prerequisites":"The forcibly browseable pages or accessible resources must be discoverable and improperly protected.","related_weakness":["285","425","693"],"solutions":"Authenticate request to every resource. In addition, every page or resource must ensure that the request it is handling has been made in an authorized context. Forceful browsing can also be made difficult to a large extent by not hard-coding names of application pages or resources. This way, the attacker cannot figure out, from the application alone, the resources available from the present context.","summary":"An attacker employs forceful browsing to access portions of a website that are otherwise unreachable through direct URL entry. Usually, a front controller or similar design pattern is employed to protect access to portions of a web application. Forceful browsing enables an attacker to access information, perform privileged operations and otherwise reach sections of the web application that have been improperly protected."},{"id":"60","name":"Reusing Session IDs (aka Session Replay)","prerequisites":"The target host uses session IDs to keep track of the users. Session IDs are used to control access to resources. The session IDs used by the target host are not well protected from session theft.","related_weakness":["200","285","290","294","346","384","488","539","664","732"],"solutions":"Always invalidate a session ID after the user logout. Setup a session time out for the session IDs. Protect the communication between the client and server. For instance it is best practice to use SSL to mitigate man in the middle attack. Do not code send session ID with GET method, otherwise the session ID will be copied to the URL. In general avoid writing session IDs in the URLs. URLs can get logged in log files, which are vulnerable to an attacker. Encrypt the session data associated with the session ID. Use multifactor authentication.","summary":"This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay."}],"cvss":5.5,"cvss-time":"2022-05-13T16:02:00","cvss-vector":"AV:N/AC:L/Au:S/C:N/I:P/A:P","cwe":"CWE-285","id":"CVE-2022-0829","impact":{"availability":"PARTIAL","confidentiality":"NONE","integrity":"PARTIAL"},"last-modified":"2022-05-13T16:02:00","references":["https://huntr.dev/bounties/f2d0389f-d7d1-4f34-9f9d-268b0a0da05e","https://github.com/webmin/webmin/commit/eeeea3c097f5cc473770119f7ac61f1dcfa671b9","https://notes.netbytesec.com/2022/03/webmin-broken-access-control-to-post-auth-rce.html"],"summary":"Improper Authorization in GitHub repository webmin/webmin prior to 1.990.","vulnerable_configuration":[{"id":"cpe:2.3:a:webmin:webmin:0.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.21:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.21:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.22:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.22:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.31:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.31:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.41:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.41:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.42:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.42:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.51:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.51:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.52:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.52:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.53:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.53:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.54:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.54:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.60:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.60:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.61:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.61:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.62:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.62:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.63:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.63:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.64:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.64:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.65:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.65:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.70:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.70:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.71:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.71:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.72:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.72:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.73:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.73:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.74:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.74:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.75:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.75:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.76:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.76:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.77:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.77:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.78:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.78:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.79:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.79:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.80:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.80:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.81:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.81:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.82:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.82:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.83:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.83:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.84:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.84:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.85:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.85:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.86:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.86:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.87:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.87:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.88:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.88:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.89:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.89:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.90:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.90:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.91:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.91:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.92:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.92:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.93:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.93:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.94:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.94:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.950:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.950:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.960:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.960:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.970:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.970:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.980:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.980:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:0.990:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:0.990:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.000:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.000:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.020:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.020:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.030:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.030:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.040:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.040:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.050:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.050:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.060:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.060:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.070:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.070:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.080:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.080:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.090:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.090:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.100:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.100:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.110:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.110:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.120:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.120:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.121:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.121:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.130:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.130:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.140:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.140:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.150:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.150:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.160:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.160:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.170:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.170:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.180:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.180:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.190:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.190:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.200:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.200:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.210:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.210:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.220:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.220:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.230:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.230:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.240:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.240:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.250:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.250:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.260:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.260:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.270:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.270:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.280:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.280:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.290:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.290:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.300:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.300:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.310:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.310:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.320:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.320:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.330:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.330:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.340:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.340:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.350:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.350:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.360:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.360:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.370:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.370:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.380:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.380:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.390:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.390:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.400:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.400:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.410:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.410:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.420:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.420:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.430:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.430:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.440:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.440:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.441:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.441:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.450:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.450:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.460:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.460:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.470:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.470:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.480:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.480:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.490:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.490:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.500:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.500:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.510:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.510:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.520:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.520:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.530:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.530:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.540:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.540:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.560:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.560:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.570:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.570:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.580:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.580:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.590:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.590:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.600:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.600:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.610:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.610:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.620:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.620:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.630:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.630:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.640:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.640:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.650:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.650:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.660:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.660:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.670:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.670:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.680:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.680:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.690:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.690:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.700:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.700:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.710:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.710:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.720:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.720:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.730:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.730:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.740:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.740:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.750:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.750:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.760:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.760:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.770:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.770:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.780:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.780:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.791:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.791:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.801:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.801:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.810:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.810:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.820:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.820:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.830:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.830:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.831:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.831:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.840:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.840:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.850:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.850:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.860:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.860:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.870:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.870:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.880:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.880:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.881:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.881:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.890:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.890:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.900:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.900:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.910:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.910:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.920:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.920:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.930:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.930:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.940:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.940:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.941:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.941:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.953:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.953:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.954:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.954:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.955:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.955:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.960:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.960:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.962:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.962:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.970:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.970:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.972:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.972:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.973:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.973:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.974:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.974:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.979:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.979:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.980:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.980:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.982:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.982:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.983:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.983:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:webmin:webmin:1.984:*:*:*:*:*:*:*","title":"cpe:2.3:a:webmin:webmin:1.984:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:webmin:webmin:0.1:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.2:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.3:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.4:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.5:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.21:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.22:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.31:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.41:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.42:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.51:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.52:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.53:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.54:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.60:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.61:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.62:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.63:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.64:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.65:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.70:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.71:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.72:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.73:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.74:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.75:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.76:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.77:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.78:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.79:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.80:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.81:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.82:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.83:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.84:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.85:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.86:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.87:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.88:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.89:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.90:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.91:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.92:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.93:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.94:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.950:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.960:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.970:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.980:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:0.990:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.000:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.020:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.030:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.040:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.050:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.060:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.070:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.080:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.090:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.100:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.110:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.120:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.121:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.130:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.140:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.150:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.160:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.170:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.180:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.190:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.200:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.210:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.220:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.230:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.240:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.250:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.260:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.270:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.280:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.290:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.300:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.310:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.320:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.330:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.340:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.350:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.360:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.370:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.380:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.390:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.400:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.410:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.420:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.430:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.440:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.441:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.450:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.460:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.470:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.480:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.490:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.500:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.510:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.520:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.530:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.540:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.560:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.570:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.580:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.590:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.600:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.610:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.620:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.630:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.640:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.650:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.660:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.670:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.680:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.690:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.700:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.710:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.720:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.730:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.740:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.750:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.760:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.770:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.780:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.791:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.801:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.810:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.820:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.830:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.831:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.840:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.850:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.860:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.870:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.880:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.881:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.890:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.900:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.910:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.920:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.930:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.940:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.941:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.953:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.954:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.955:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.960:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.962:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.970:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.972:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.973:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.974:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.979:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.980:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.982:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.983:*:*:*:*:*:*:*","cpe:2.3:a:webmin:webmin:1.984:*:*:*:*:*:*:*"]}