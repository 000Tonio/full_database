{"Modified":"2022-09-07T18:48:00","Published":"2022-08-29T15:15:00","access":{},"assigner":"security-advisories@github.com","capec":[{"id":"7","name":"Blind SQL Injection","prerequisites":"SQL queries used by the application to store, retrieve or modify data. User-controllable input that is not properly validated by the application as part of SQL queries.","related_weakness":["20","209","697","707","713","74","89"],"solutions":"Security by Obscurity is not a solution to preventing SQL Injection. Rather than suppress error messages and exceptions, the application must handle them gracefully, returning either a custom error page or redirecting the user to a default page, without revealing any information about the database or the application internals. Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear.","summary":"Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection."},{"id":"46","name":"Overflow Variables and Tags","prerequisites":"The target program consumes user-controllable data in the form of tags or variables. The target program does not perform sufficient boundary checking.","related_weakness":["118","119","120","20","680","697","733","74"],"solutions":"Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution. Do not trust input data from user. Validate all user input.","summary":"This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow."},{"id":"53","name":"Postfix, Null Terminate, and Backslash","prerequisites":"Null terminators are not properly handled by the filter.","related_weakness":["158","171","172","173","20","697","707","74"],"solutions":"Properly handle Null characters. Make sure canonicalization is properly applied. Do not pass Null characters to the underlying APIs. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.","summary":"If a string is passed through a filter of some kind, then a terminal NULL may not be valid. Using alternate representation of NULL allows an attacker to embed the NULL mid-string while postfixing the proper data so that the filter is avoided. One example is a filter that looks for a trailing slash character. If a string insertion is possible, but the slash must exist, an alternate encoding of NULL in mid-string may be used."},{"id":"71","name":"Using Unicode Encoding to Bypass Validation Logic","prerequisites":"Filtering is performed on data that has not be properly canonicalized.","related_weakness":["171","172","173","176","179","180","183","184","20","692","697","74"],"solutions":"Ensure that the system is Unicode aware and can properly process Unicode data. Do not make an assumption that data will be in ASCII. Ensure that filtering or input validation is applied to canonical data. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.","summary":"An attacker may provide a Unicode string to a system component that is not Unicode aware and use that to circumvent the filter or cause the classifying mechanism to fail to properly understanding the request. That may allow the attacker to slip malicious data past the content filter and/or possibly cause the application to route the request incorrectly."},{"id":"88","name":"OS Command Injection","prerequisites":"User controllable input used as part of commands to the underlying operating system.","related_weakness":["20","697","713","78","88"],"solutions":"Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable. Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands All application processes should be run with the minimal privileges required. Also, processes must shed privileges as soon as they no longer require them.","summary":"In this type of an attack, an adversary injects operating system commands into existing application functions. An application that uses untrusted input to build command strings is vulnerable. An adversary can leverage OS command injection in an application to elevate privileges, execute arbitrary commands and compromise the underlying operating system."},{"id":"8","name":"Buffer Overflow in an API Call","prerequisites":"The target host exposes an API to the user. One or more API functions exposed by the target host has a buffer overflow vulnerability.","related_weakness":["118","119","120","20","680","697","733","74"],"solutions":"Use a language or compiler that performs automatic bounds checking. Use secure functions not vulnerable to buffer overflow. If you have to use dangerous functions, make sure that you do boundary checking. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution.","summary":"This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An attacker who has access to an API may try to embed malicious code in the API function call and exploit a buffer overflow vulnerability in the function's implementation. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process."},{"id":"34","name":"HTTP Response Splitting","prerequisites":"User-controlled input used as part of HTTP header Ability of adversary to inject custom strings in HTTP header Insufficient input validation in application to check for input sanity before using it as part of response header","related_weakness":["113","697","707","713","74"],"solutions":"To avoid HTTP Response Splitting, the application must not rely on user-controllable input to form part of its output response stream. Specifically, response splitting occurs due to injection of CR-LF sequences and additional headers. All data arriving from the user and being used as part of HTTP response headers must be subjected to strict validation that performs simple character-based as well as semantic filtering to strip it of malicious character sequences and headers.","summary":"This attack uses a maliciously-crafted HTTP request in order to cause a vulnerable web server to respond with an HTTP response stream that will be interpreted by the client as two separate responses instead of one. This is possible when user-controlled input is used unvalidated as part of the response headers. The target software, the client, will interpret the injected header as being a response to a second request, thereby causing the maliciously-crafted contents be displayed and possibly cached."},{"id":"64","name":"Using Slashes and URL Encoding Combined to Bypass Validation Logic","prerequisites":"The application accepts and decodes URL string request. The application performs insufficient filtering/canonicalization on the URLs.","related_weakness":["171","172","173","177","20","21","22","697","707","73","74"],"solutions":"Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input. Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible. Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL. Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive. There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx).","summary":"This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc."},{"id":"52","name":"Embedding NULL Bytes","prerequisites":"The program does not properly handle postfix NULL terminators","related_weakness":["158","171","172","173","20","697","707","74"],"solutions":"Properly handle the NULL characters supplied as part of user input prior to doing anything with the data.","summary":"An attacker embeds one or more null bytes in input to the target software. This attack relies on the usage of a null-valued byte as a string terminator in many environments. The goal is for certain components of the target software to stop processing the input when it encounters the null byte(s)."},{"id":"67","name":"String Format Overflow in syslog()","prerequisites":"The format string argument of the Syslog function can be tainted with user supplied data.","related_weakness":["120","134","20","680","697","74"],"solutions":"The following code shows a vulnerable usage of Syslog():\n               syslog(LOG_ERR, cmdBuf);\n                     // the buffer cmdBuff is taking user supplied data.","summary":"This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted."},{"id":"78","name":"Using Escaped Slashes in Alternate Encoding","prerequisites":"The application accepts the backlash character as escape character. The application server does incomplete input data decoding, filtering and validation.","related_weakness":["171","172","173","180","181","20","21","22","697","707","73","74"],"solutions":"Verify that the user-supplied data does not use backslash character to escape malicious characters. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Be aware of the threat of alternative method of data encoding. Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data. In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access. Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.","summary":"This attack targets the use of the backslash in alternate encoding. An attacker can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the attacker tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack."},{"id":"10","name":"Buffer Overflow via Environment Variables","prerequisites":"The application uses environment variables. An environment variable exposed to the user is vulnerable to a buffer overflow. The vulnerable environment variable uses untrusted data. Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer.","related_weakness":["118","119","120","20","302","680","697","733","74","99"],"solutions":"Do not expose environment variable to the user. Do not use untrusted data in your environment variables. Use a language or compiler that performs automatic bounds checking There are tools such as Sharefuzz [R.10.3] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow.","summary":"This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables."},{"id":"24","name":"Filter Failure through Buffer Overflow","prerequisites":"Ability to control the length of data passed to an active filter.","related_weakness":["118","119","120","20","680","697","733","74"],"solutions":"Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs. Pre-design: Use a language or compiler that performs automatic bounds checking. Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Operational: Use OS-level preventative functionality. Not a complete solution. Design: Use an abstraction library to abstract away risky APIs. Not a complete solution.","summary":"In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered)."},{"id":"47","name":"Buffer Overflow via Parameter Expansion","prerequisites":"The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter. The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is).","related_weakness":["118","119","120","130","131","20","680","697","74"],"solutions":"Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system","summary":"In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow."},{"id":"6","name":"Argument Injection","prerequisites":"Target software fails to strip all user-supplied input of any content that could cause the shell to perform unexpected actions. Software must allow for unvalidated or unfiltered input to be executed on operating system shell, and, optionally, the system configuration must allow for output to be sent back to client.","related_weakness":["146","184","185","697","713","74","78"],"solutions":"Design: Do not program input values directly on command shell, instead treat user input as guilty until proven innocent. Build a function that takes user input and converts it to applications specific types and values, stripping or filtering out all unauthorized commands and characters in the process. Design: Limit program privileges, so if metacharacters or other methods circumvent program input validation routines and shell access is attained then it is not running under a privileged account. chroot jails create a sandbox for the application to execute in, making it more difficult for an attacker to elevate privilege even in the case that a compromise has occurred. Implementation: Implement an audit log that is written to a separate host, in the event of a compromise the audit log may be able to provide evidence and details of the compromise.","summary":"An attacker changes the behavior or state of a targeted application through injecting data or command syntax through the targets use of non-validated and non-filtered arguments of exposed services or methods."},{"id":"80","name":"Using UTF-8 Encoding to Bypass Validation Logic","prerequisites":"The application's UTF-8 decoder accepts and interprets illegal UTF-8 characters or non-shortest format of UTF-8 encoding. Input filtering and validating is not done properly leaving the door open to harmful characters for the target host.","related_weakness":["171","172","173","180","181","20","21","692","697","73","74"],"solutions":"The Unicode Consortium recognized multiple representations to be a problem and has revised the Unicode Standard to make multiple representations of the same code point with UTF-8 illegal. The UTF-8 Corrigendum lists the newly restricted UTF-8 range (See references). Many current applications may not have been revised to follow this rule. Verify that your application conform to the latest UTF-8 encoding specification. Pay extra attention to the filtering of illegal characters. Another consideration is error recovery. To guarantee correct recovery after corrupt or lost bytes, decoders must be able to recognize the difference between lead and trail bytes, rather than just assuming that bytes will be of the type allowed in their position. For security reasons, a UTF-8 decoder must not accept UTF-8 sequences that are longer than necessary to encode a character. If you use a parser to decode the UTF-8 encoding, make sure that parser filter the invalid UTF-8 characters (invalid forms or overlong forms). Look for overlong UTF-8 sequences starting with malicious pattern. You can also use a UTF-8 decoder stress test to test your UTF-8 parser (See Markus Kuhn's UTF-8 and Unicode FAQ in reference section) Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input.","summary":"This attack is a specific variation on leveraging alternate encodings to bypass validation logic. This attack leverages the possibility to encode potentially harmful input in UTF-8 and submit it to applications not expecting or effective at validating this encoding standard making input filtering difficult. UTF-8 (8-bit UCS/Unicode Transformation Format) is a variable-length character encoding for Unicode. Legal UTF-8 characters are one to four bytes long. However, early version of the UTF-8 specification got some entries wrong (in some cases it permitted overlong characters). UTF-8 encoders are supposed to use the \"shortest possible\" encoding, but naive decoders may accept encodings that are longer than necessary. According to the RFC 3629, a particularly subtle form of this attack can be carried out against a parser which performs security-critical validity checks against the UTF-8 encoded form of its input, but interprets certain illegal octet sequences as characters."},{"id":"9","name":"Buffer Overflow in Local Command-Line Utilities","prerequisites":"The target host exposes a command-line utility to the user. The command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited.","related_weakness":["118","119","120","20","680","697","733","74"],"solutions":"Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow. Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Operational: Use OS-level preventative functionality. Not a complete solution. Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack. Do not unnecessarily expose services.","summary":"This attack targets command-line utilities available in a number of shells. An attacker can leverage a vulnerability found in a command-line utility to escalate privilege to root."},{"id":"66","name":"SQL Injection","prerequisites":"SQL queries used by the application to store, retrieve or modify data. User-controllable input that is not properly validated by the application as part of SQL queries.","related_weakness":["20","697","707","713","74","89"],"solutions":"Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear. Use of parameterized queries or stored procedures - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails. Note that SQL Injection is possible even in the presence of stored procedures if the eventual query is constructed dynamically. Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.","summary":"This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended. SQL Injection results from failure of the application to appropriately validate input. When specially crafted user-controlled input consisting of SQL syntax is used without proper validation as part of SQL queries, it is possible to glean information from the database in ways not envisaged during application design. Depending upon the database and the design of the application, it may also be possible to leverage injection to have the database execute system-related commands of the attackers' choice. SQL Injection enables an attacker to talk directly to the database, thus bypassing the application completely. Successful injection can cause information disclosure as well as ability to add or modify data in the database. In order to successfully inject SQL and retrieve information from a database, an attacker:"},{"id":"79","name":"Using Slashes in Alternate Encoding","prerequisites":"The application server accepts paths to locate resources. The application server does insufficient input data validation on the resource path requested by the user. The access right to resources are not set properly.","related_weakness":["171","173","180","181","185","20","200","21","22","697","707","73","74"],"solutions":"Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL. When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible. There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx) Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section) Test your path decoding process against malicious input. In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access. Assume all input is malicious. Create a white list that defines all valid input to the application based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.","summary":"This attack targets the encoding of the Slash characters. An attacker would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the attacker many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other."},{"id":"14","name":"Client-side Injection-induced Buffer Overflow","prerequisites":"The targeted client software communicates with an external server. The targeted client software has a buffer overflow vulnerability.","related_weakness":["118","119","120","20","353","680","697","713","74"],"solutions":"The client software should not install untrusted code from a non-authenticated server. The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers. Perform input validation for length of buffer inputs. Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Ensure all buffer uses are consistently bounds-checked. Use OS-level preventative functionality. Not a complete solution.","summary":"This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service."},{"id":"15","name":"Command Delimiters","prerequisites":"Software's input validation or filtering must not detect and block presence of additional malicious command.","related_weakness":["138","140","146","154","157","184","185","697","713","77","78","93"],"solutions":"Design: Perform whitelist validation against a positive specification for command length, type, and parameters. Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account Implementation: Perform input validation for all remote content. Implementation: Use type conversions such as JDBC prepared statements.","summary":"An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or a blacklist input validation, as opposed to whitelist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or blacklist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on."},{"id":"41","name":"Using Meta-characters in E-mail Headers to Inject Malicious Payloads","prerequisites":"This attack targets most widely deployed feature rich email applications, including web based email programs.","related_weakness":["150","697","713","88"],"solutions":"Design: Perform validation on email header data Implementation: Implement email filtering solutions on mail server or on MTA, relay server. Implementation: Mail servers that perform strict validation may catch these attacks, because metacharacters are not allowed in many header variables such as dns names","summary":"This type of attack involves an attacker leveraging meta-characters in email headers to inject improper behavior into email programs. Email software has become increasingly sophisticated and feature-rich. In addition, email applications are ubiquitous and connected directly to the Web making them ideal targets to launch and propagate attacks. As the user demand for new functionality in email applications grows, they become more like browsers with complex rendering and plug in routines. As more email functionality is included and abstracted from the user, this creates opportunities for attackers. Virtually all email applications do not list email header information by default, however the email header contains valuable attacker vectors for the attacker to exploit particularly if the behavior of the email client application is known. Meta-characters are hidden from the user, but can contain scripts, enumerations, probes, and other attacks against the user's system."},{"id":"44","name":"Overflow Binary Resource File","prerequisites":"Target software processes binary resource files. Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file.","related_weakness":["119","120","697","713"],"solutions":"Perform appropriate bounds checking on all buffers. Design: Enforce principle of least privilege Design: Static code analysis Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes Implementation: Keep software patched to ensure that known vulnerabilities are not available for attackers to target on host.","summary":"An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow."},{"id":"45","name":"Buffer Overflow via Symbolic Links","prerequisites":"The attacker can create symbolic link on the target host. The target host does not perform correct boundary checking while consuming data from a resources.","related_weakness":["118","119","120","20","285","302","680","697","74"],"solutions":"Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource. Because Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories. Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources. Always check the size of the input data before copying to a buffer. Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution.","summary":"This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking."},{"id":"120","name":"Double Encoding","prerequisites":"The target's filters must fail to detect that a character has been doubly encoded but its interpreting engine must still be able to convert a doubly encoded character to an un-encoded character. The application accepts and decodes URL string request. The application performs insufficient filtering/canonicalization on the URLs.","related_weakness":["171","172","173","177","181","183","184","20","21","692","697","74"],"solutions":"Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input. Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible. Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL. Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive. There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx).","summary":"The adversary utilizes a repeating of the encoding process for a set of characters (that is, character encoding a character encoding of a character) to obfuscate the payload of a particular request. This may allow the adversary to bypass filters that attempt to detect illegal characters or strings, such as those that might be used in traversal or injection attacks. Filters may be able to catch illegal encoded strings, but may not catch doubly encoded strings. For example, a dot (.), often used in path traversal attacks and therefore often blocked by filters, could be URL encoded as %2E. However, many filters recognize this encoding and would still block the request. In a double encoding, the % in the above URL encoding would be encoded again as %25, resulting in %252E which some filters might not catch, but which could still be interpreted as a dot (.) by interpreters on the target."},{"id":"182","name":"Flash Injection","prerequisites":"The target must be capable of running Flash applications. In some cases, the victim must follow an attacker-supplied link.","related_weakness":["184","20","697"],"solutions":"Implementation: remove sensitive information such as user name and password in the SWF file. Implementation: use validation on both client and server side. Implementation: remove debug information. Implementation: use SSL when loading external data Implementation: use crossdomain.xml file to allow the application domain to load stuff or the SWF file called by other domain.","summary":"An attacker tricks a victim to execute malicious flash content that executes commands or makes flash calls specified by the attacker. One example of this attack is cross-site flashing, an attacker controlled parameter to a reference call loads from content specified by the attacker."},{"id":"267","name":"Leverage Alternate Encoding","prerequisites":"The application's decoder accepts and interprets encoded characters. Data canonicalization, input filtering and validating is not done properly leaving the door open to harmful characters for the target host.","related_weakness":["171","172","173","180","181","20","21","692","697","73","74"],"solutions":"Assume all input might use an improper representation. Use canonicalized data inside the application; all data must be converted into the representation used inside the application (UTF-8, UTF-16, etc.) Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input.","summary":"An adversary leverages the possibility to encode potentially harmful input or content used by applications such that the applications are ineffective at validating this encoding standard."},{"id":"3","name":"Using Leading 'Ghost' Character Sequences to Bypass Input Filters","prerequisites":"The targeted API must ignore the leading ghost characters that are used to get past the filters for the semantics to be the same.","related_weakness":["171","172","173","179","180","181","183","184","20","41","697","707","74"],"solutions":"Perform white list rather than black list input validation. Canonicalize all data prior to validation. Take an iterative approach to input validation (defense in depth).","summary":"Some APIs will strip certain leading characters from a string of parameters. An adversary can intentionally introduce leading \"ghost\" characters (extra characters that don't affect the validity of the request at the API layer) that enable the input to pass the filters and therefore process the adversary's input. This occurs when the targeted API will accept input data in several syntactic forms and interpret it in the equivalent semantic way, while the filter does not take into account the full spectrum of the syntactic forms acceptable to the targeted API."},{"id":"43","name":"Exploiting Multiple Input Interpretation Layers","prerequisites":"User input is used to construct a command to be executed on the target system or as part of the file name. Multiple parser passes are performed on the data supplied by the user.","related_weakness":["171","179","181","183","184","20","697","707","74","77","78"],"solutions":"An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it. Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.","summary":"An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop."},{"id":"73","name":"User-Controlled Filename","prerequisites":"The victim must trust the name and locale of user controlled filenames.","related_weakness":["116","184","20","348","350","697","86","96"],"solutions":"Design: Use browser technologies that do not allow client side scripting. Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification. Implementation: Perform input validation for all remote content. Implementation: Perform output validation for all remote content. Implementation: Disable scripting languages such as JavaScript in browser Implementation: Scan dynamically generated content against validation specification","summary":"An attack of this type involves an adversary inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to pass and exploit these vulnerabilities."},{"id":"92","name":"Forced Integer Overflow","prerequisites":"The attacker can manipulate the value of an integer variable utilized by the target host. The target host does not do proper range checking on the variable before utilizing it. When the integer variable is incremented or decremented to an out of range value, it gets a very different value (e.g. very small or negative number)","related_weakness":["120","122","128","190","196","680","697"],"solutions":"Use a language or compiler that performs automatic bounds checking. Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as integer overflow. Use an abstraction library to abstract away risky APIs. Not a complete solution. Always do bound checking before consuming user input data.","summary":"This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code."}],"cvss":null,"cwe":"CWE-697","id":"CVE-2022-35962","impact":{},"last-modified":"2022-09-07T18:48:00","references":["https://github.com/zulip/zulip-mobile/security/advisories/GHSA-4gj2-j32x-4wg5","https://github.com/zulip/zulip-mobile/releases/tag/v27.190","https://blog.zulip.com/2022/08/24/zulip-server-5-6-security-release/"],"summary":"Zulip is an open source team chat and Zulip Mobile is an app for iOS and Andriod users. In Zulip Mobile through version 27.189, a crafted link in a message sent by an authenticated user could lead to credential disclosure if a user follows the link. A patch was released in version 27.190.","vulnerable_configuration":[{"id":"cpe:2.3:a:zulip:zulip:-:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:-:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:0.7.1:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:0.7.1:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.11:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.11:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.12:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.12:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.13:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.13:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.14:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.14:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.15:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.15:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.16:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.16:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.17:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.17:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.18:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.18:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.19:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.19:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.20:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.20:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.21:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.21:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.22:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.22:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.24:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.24:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.25:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.25:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.26:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.26:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.27:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.27:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.29:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.29:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:2.1.33:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:2.1.33:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:2.3.35:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:2.3.35:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:2.7.39:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:2.7.39:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:3.0.40:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:3.0.40:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:3.1.41:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:3.1.41:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:3.2.42:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:3.2.42:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:3.3.43:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:3.3.43:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:5.0.46:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:5.0.46:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:6.6.53:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:6.6.53:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:7.0.54:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:7.0.54:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:7.1.55:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:7.1.55:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:7.3.57:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:7.3.57:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:8.1.62:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:8.1.62:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:8.2.63:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:8.2.63:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:8.3.64:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:8.3.64:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:9.1.67:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:9.1.67:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:10.1.70:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:10.1.70:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.1.73:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:11.1.73:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.3.74:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:11.3.74:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.4.75:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:11.4.75:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.5.76:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:11.5.76:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.6.77:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:11.6.77:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.0.80:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:12.0.80:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.1.81:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:12.1.81:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.2.82:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:12.2.82:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.3.83:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:12.3.83:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.4.84:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:12.4.84:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.1.85:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:13.1.85:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.2.86:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:13.2.86:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.3.87:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:13.3.87:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.4.88:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:13.4.88:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.5.89:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:13.5.89:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:14.0.90:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:14.0.90:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:14.1.91:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:14.1.91:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:15.0.92:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:15.0.92:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:15.1.95:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:15.1.95:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:16.0.93:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:16.0.93:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:16.1.94:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:16.1.94:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:16.2.96:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:16.2.96:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:17.0.97:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:17.0.97:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:17.1.98:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:17.1.98:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:18.0.99:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:18.0.99:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:19.0.100:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:19.0.100:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:19.1.101:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:19.1.101:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:19.2.102:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:19.2.102:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:20.0.103:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:20.0.103:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:21.0.104:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:21.0.104:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:21.1.105:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:21.1.105:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:21.2.106:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:21.2.106:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:22.0.107:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:22.0.107:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:22.1.108:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:22.1.108:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:23.0.109:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:23.0.109:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:23.1.110:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:23.1.110:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:23.2.111:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:23.2.111:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:23.3.112:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:23.3.112:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:24.0.113:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:24.0.113:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.0.114:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.0.114:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.1.115:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.1.115:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.2.116:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.2.116:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.3.117:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.3.117:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.4.118:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.4.118:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.5.119:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.5.119:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.6.120:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.6.120:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.7.121:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.7.121:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.8.122:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:25.8.122:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.0.123:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.0.123:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.1.124:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.1.124:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.2.125:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.2.125:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.3.126:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.3.126:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.4.127:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.4.127:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.5.128:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.5.128:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.6.129:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.6.129:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.7.130:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.7.130:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.8.131:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.8.131:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.9.132:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.9.132:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.10.133:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.10.133:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.11.134:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.11.134:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.12.135:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.12.135:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.13.136:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.13.136:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.14.137:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.14.137:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.15.138:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.15.138:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.16.139:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.16.139:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.17.140:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.17.140:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.18.141:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.18.141:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.19.142:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.19.142:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.20.143:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.20.143:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.21.144:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.21.144:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.22.145:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.22.145:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.23.146:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.23.146:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.24.147:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.24.147:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.25.148:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.25.148:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.26.149:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.26.149:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.27.150:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.27.150:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.28.151:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.28.151:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.29.152:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.29.152:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.30.153:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:26.30.153:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.154:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.154:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.155:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.155:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.156:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.156:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.157:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.157:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.158:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.158:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.159:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.159:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.160:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.160:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.161:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.161:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.162:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.162:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.163:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.163:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.164:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.164:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.165:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.165:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.166:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.166:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.167:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.167:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.168:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.168:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.169:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.169:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.170:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.170:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.171:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.171:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.172:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.172:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.173:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.173:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.174:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.174:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.175:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.175:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.176:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.176:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.177:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.177:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.178:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.178:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.179:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.179:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.180:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.180:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.181:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.181:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.182:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.182:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.183:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.183:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.184:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.184:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.185:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.185:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.186:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.186:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.187:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.187:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.188:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.188:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.189:*:*:*:*:iphone_os:*:*","title":"cpe:2.3:a:zulip:zulip:27.189:*:*:*:*:iphone_os:*:*"},{"id":"cpe:2.3:a:zulip:zulip:-:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:-:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:0.7.1:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:0.7.1:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.11:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.11:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.12:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.12:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.13:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.13:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.14:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.14:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.15:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.15:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.16:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.16:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.17:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.17:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.18:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.18:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.19:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.19:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.20:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.20:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.21:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.21:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.22:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.22:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.24:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.24:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.25:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.25:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.26:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.26:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.27:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.27:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:1.0.29:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:1.0.29:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:2.1.33:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:2.1.33:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:2.3.35:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:2.3.35:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:2.7.39:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:2.7.39:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:3.0.40:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:3.0.40:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:3.1.41:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:3.1.41:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:3.2.42:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:3.2.42:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:3.3.43:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:3.3.43:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:5.0.46:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:5.0.46:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:6.6.53:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:6.6.53:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:7.0.54:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:7.0.54:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:7.1.55:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:7.1.55:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:7.3.57:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:7.3.57:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:8.1.62:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:8.1.62:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:8.2.63:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:8.2.63:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:8.3.64:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:8.3.64:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:9.1.67:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:9.1.67:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:10.1.70:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:10.1.70:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.1.73:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:11.1.73:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.3.74:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:11.3.74:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.4.75:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:11.4.75:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.5.76:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:11.5.76:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:11.6.77:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:11.6.77:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.0.80:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:12.0.80:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.1.81:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:12.1.81:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.2.82:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:12.2.82:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.3.83:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:12.3.83:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:12.4.84:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:12.4.84:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.1.85:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:13.1.85:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.2.86:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:13.2.86:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.3.87:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:13.3.87:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.4.88:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:13.4.88:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:13.5.89:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:13.5.89:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:14.0.90:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:14.0.90:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:14.1.91:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:14.1.91:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:15.0.92:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:15.0.92:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:15.1.95:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:15.1.95:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:16.0.93:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:16.0.93:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:16.1.94:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:16.1.94:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:16.2.96:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:16.2.96:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:17.0.97:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:17.0.97:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:17.1.98:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:17.1.98:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:18.0.99:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:18.0.99:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:19.0.100:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:19.0.100:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:19.1.101:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:19.1.101:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:19.2.102:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:19.2.102:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:20.0.103:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:20.0.103:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:21.0.104:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:21.0.104:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:21.1.105:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:21.1.105:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:21.2.106:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:21.2.106:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:22.0.107:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:22.0.107:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:22.1.108:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:22.1.108:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:23.0.109:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:23.0.109:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:23.1.110:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:23.1.110:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:23.2.111:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:23.2.111:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:23.3.112:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:23.3.112:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:24.0.113:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:24.0.113:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.0.114:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.0.114:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.1.115:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.1.115:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.2.116:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.2.116:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.3.117:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.3.117:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.4.118:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.4.118:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.5.119:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.5.119:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.6.120:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.6.120:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.7.121:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.7.121:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:25.8.122:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:25.8.122:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.0.123:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.0.123:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.1.124:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.1.124:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.2.125:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.2.125:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.3.126:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.3.126:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.4.127:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.4.127:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.5.128:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.5.128:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.6.129:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.6.129:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.7.130:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.7.130:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.8.131:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.8.131:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.9.132:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.9.132:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.10.133:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.10.133:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.11.134:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.11.134:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.12.135:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.12.135:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.13.136:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.13.136:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.14.137:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.14.137:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.15.138:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.15.138:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.16.139:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.16.139:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.17.140:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.17.140:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.18.141:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.18.141:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.19.142:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.19.142:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.20.143:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.20.143:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.21.144:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.21.144:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.22.145:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.22.145:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.23.146:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.23.146:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.24.147:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.24.147:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.25.148:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.25.148:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.26.149:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.26.149:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.27.150:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.27.150:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.28.151:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.28.151:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.29.152:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.29.152:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:26.30.153:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:26.30.153:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.154:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.154:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.155:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.155:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.156:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.156:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.157:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.157:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.158:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.158:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.159:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.159:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.160:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.160:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.161:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.161:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.162:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.162:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.163:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.163:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.164:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.164:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.165:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.165:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.166:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.166:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.167:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.167:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.168:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.168:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.169:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.169:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.170:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.170:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.171:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.171:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.172:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.172:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.173:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.173:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.174:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.174:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.175:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.175:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.176:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.176:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.177:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.177:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.178:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.178:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.179:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.179:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.180:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.180:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.181:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.181:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.182:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.182:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.183:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.183:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.184:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.184:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.185:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.185:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.186:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.186:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.187:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.187:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.188:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.188:*:*:*:*:android:*:*"},{"id":"cpe:2.3:a:zulip:zulip:27.189:*:*:*:*:android:*:*","title":"cpe:2.3:a:zulip:zulip:27.189:*:*:*:*:android:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:zulip:zulip:-:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:0.7.1:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.11:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.12:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.13:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.14:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.15:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.16:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.17:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.18:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.19:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.20:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.21:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.22:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.24:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.25:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.26:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.27:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:1.0.29:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:2.1.33:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:2.3.35:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:2.7.39:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:3.0.40:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:3.1.41:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:3.2.42:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:3.3.43:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:5.0.46:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:6.6.53:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:7.0.54:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:7.1.55:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:7.3.57:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:8.1.62:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:8.2.63:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:8.3.64:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:9.1.67:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:10.1.70:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:11.1.73:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:11.3.74:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:11.4.75:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:11.5.76:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:11.6.77:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:12.0.80:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:12.1.81:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:12.2.82:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:12.3.83:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:12.4.84:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:13.1.85:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:13.2.86:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:13.3.87:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:13.4.88:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:13.5.89:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:14.0.90:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:14.1.91:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:15.0.92:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:15.1.95:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:16.0.93:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:16.1.94:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:16.2.96:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:17.0.97:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:17.1.98:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:18.0.99:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:19.0.100:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:19.1.101:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:19.2.102:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:20.0.103:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:21.0.104:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:21.1.105:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:21.2.106:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:22.0.107:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:22.1.108:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:23.0.109:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:23.1.110:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:23.2.111:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:23.3.112:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:24.0.113:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.0.114:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.1.115:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.2.116:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.3.117:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.4.118:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.5.119:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.6.120:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.7.121:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:25.8.122:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.0.123:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.1.124:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.2.125:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.3.126:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.4.127:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.5.128:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.6.129:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.7.130:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.8.131:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.9.132:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.10.133:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.11.134:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.12.135:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.13.136:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.14.137:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.15.138:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.16.139:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.17.140:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.18.141:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.19.142:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.20.143:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.21.144:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.22.145:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.23.146:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.24.147:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.25.148:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.26.149:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.27.150:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.28.151:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.29.152:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:26.30.153:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.154:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.155:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.156:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.157:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.158:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.159:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.160:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.161:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.162:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.163:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.164:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.165:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.166:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.167:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.168:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.169:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.170:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.171:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.172:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.173:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.174:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.175:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.176:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.177:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.178:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.179:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.180:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.181:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.182:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.183:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.184:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.185:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.186:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.187:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.188:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:27.189:*:*:*:*:iphone_os:*:*","cpe:2.3:a:zulip:zulip:-:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:0.7.1:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.11:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.12:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.13:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.14:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.15:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.16:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.17:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.18:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.19:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.20:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.21:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.22:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.24:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.25:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.26:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.27:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:1.0.29:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:2.1.33:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:2.3.35:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:2.7.39:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:3.0.40:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:3.1.41:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:3.2.42:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:3.3.43:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:5.0.46:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:6.6.53:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:7.0.54:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:7.1.55:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:7.3.57:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:8.1.62:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:8.2.63:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:8.3.64:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:9.1.67:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:10.1.70:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:11.1.73:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:11.3.74:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:11.4.75:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:11.5.76:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:11.6.77:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:12.0.80:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:12.1.81:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:12.2.82:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:12.3.83:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:12.4.84:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:13.1.85:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:13.2.86:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:13.3.87:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:13.4.88:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:13.5.89:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:14.0.90:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:14.1.91:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:15.0.92:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:15.1.95:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:16.0.93:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:16.1.94:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:16.2.96:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:17.0.97:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:17.1.98:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:18.0.99:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:19.0.100:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:19.1.101:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:19.2.102:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:20.0.103:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:21.0.104:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:21.1.105:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:21.2.106:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:22.0.107:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:22.1.108:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:23.0.109:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:23.1.110:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:23.2.111:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:23.3.112:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:24.0.113:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.0.114:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.1.115:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.2.116:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.3.117:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.4.118:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.5.119:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.6.120:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.7.121:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:25.8.122:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.0.123:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.1.124:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.2.125:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.3.126:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.4.127:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.5.128:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.6.129:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.7.130:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.8.131:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.9.132:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.10.133:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.11.134:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.12.135:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.13.136:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.14.137:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.15.138:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.16.139:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.17.140:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.18.141:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.19.142:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.20.143:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.21.144:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.22.145:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.23.146:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.24.147:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.25.148:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.26.149:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.27.150:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.28.151:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.29.152:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:26.30.153:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.154:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.155:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.156:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.157:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.158:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.159:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.160:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.161:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.162:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.163:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.164:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.165:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.166:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.167:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.168:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.169:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.170:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.171:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.172:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.173:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.174:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.175:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.176:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.177:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.178:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.179:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.180:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.181:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.182:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.183:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.184:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.185:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.186:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.187:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.188:*:*:*:*:android:*:*","cpe:2.3:a:zulip:zulip:27.189:*:*:*:*:android:*:*"]}