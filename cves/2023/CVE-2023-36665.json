{"Modified":"2023-07-05T16:25:00","Published":"2023-07-05T14:15:00","access":{},"assigner":"cve@mitre.org","cvss":null,"cwe":"Unknown","id":"CVE-2023-36665","impact":{},"last-modified":"2023-07-05T16:25:00","references":["https://github.com/protobufjs/protobuf.js/commit/e66379f451b0393c27d87b37fa7d271619e16b0d","https://github.com/protobufjs/protobuf.js/compare/protobufjs-v7.2.3...protobufjs-v7.2.4","https://github.com/protobufjs/protobuf.js/pull/1899","https://www.code-intelligence.com/blog/cve-protobufjs-prototype-pollution-cve-2023-36665","https://github.com/protobufjs/protobuf.js/releases/tag/protobufjs-v7.2.4"],"summary":"protobuf.js (aka protobufjs) 6.10.0 through 7.x before 7.2.4 allows Prototype Pollution, a different vulnerability than CVE-2022-25878. A user-controlled protobuf message can be used by an attacker to pollute the prototype of Object.prototype by adding and overwriting its data and functions. Exploitation can involve: (1) using the function parse to parse protobuf messages on the fly, (2) loading .proto files by using load/loadSync functions, or (3) providing untrusted input to the functions ReflectionObject.setParsedOption and util.setProperty. NOTE: this CVE Record is about \"Object.constructor.prototype.<new-property> = ...;\" whereas CVE-2022-25878 was about \"Object.__proto__.<new-property> = ...;\" instead.","vulnerable_configuration":[],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":[]}