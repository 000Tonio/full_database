{"Modified":"2023-02-06T18:38:00","Published":"2023-01-26T21:18:00","access":{},"assigner":"ics-cert@hq.dhs.gov","capec":[{"id":"55","name":"Rainbow Table Password Cracking","prerequisites":"Hash of the original password is available to the attacker. For a better chance of success, an attacker should have more than one hash of the original password, and ideally the whole table. Salt was not used to create the hash of the original password. Otherwise the rainbow tables have to be re-computed, which is very expensive and will make the attack effectively infeasible (especially if salt was added in iterations). The system uses one factor password based authentication.","related_weakness":["261","262","263","521","693","719","916"],"solutions":"Use salt when computing password hashes. That is, concatenate the salt (random bits) with the original password prior to hashing it.","summary":"An attacker gets access to the database table where hashes of passwords are stored. He then uses a rainbow table of pre-computed hash chains to attempt to look up the original password. Once the original password corresponding to the hash is obtained, the attacker uses the original password to gain access to the system. A password rainbow table stores hash chains for various passwords. A password chain is computed, starting from the original password, P, via a reduce(compression) function R and a hash function H. A recurrence relation exists where Xi+1 = R(H(Xi)), X0 = P. Then the hash chain of length n for the original password P can be formed: X1, X2, X3, ... , Xn-2, Xn-1, Xn, H(Xn). P and H(Xn) are then stored together in the rainbow table. Constructing the rainbow tables takes a very long time and is computationally expensive. A separate table needs to be constructed for the various hash algorithms (e.g. SHA1, MD5, etc.). However, once a rainbow table is computed, it can be very effective in cracking the passwords that have been hashed without the use of salt."}],"cvss":null,"cwe":"CWE-261","id":"CVE-2023-0356","impact":{},"last-modified":"2023-02-06T18:38:00","references":["https://www.cisa.gov/uscert/ics/advisories/icsa-23-024-02"],"summary":"SOCOMEC MODULYS GP Netvision versions 7.20 and prior lack strong encryption for credentials on HTTP connections, which could result in threat actors obtaining sensitive information.","vulnerable_configuration":[{"id":"cpe:2.3:a:socomec:net_vision:-:*:*:*:*:*:*:*","title":"cpe:2.3:a:socomec:net_vision:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:socomec:net_vision:7.20:*:*:*:*:*:*:*","title":"cpe:2.3:a:socomec:net_vision:7.20:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:socomec:modulys_gp:-:*:*:*:*:*:*:*","title":"cpe:2.3:h:socomec:modulys_gp:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:socomec:net_vision:-:*:*:*:*:*:*:*","cpe:2.3:a:socomec:net_vision:7.20:*:*:*:*:*:*:*"]}