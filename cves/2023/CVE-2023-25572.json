{"Modified":"2023-02-14T02:29:00","Published":"2023-02-13T21:15:00","access":{},"assigner":"security-advisories@github.com","cvss":null,"cwe":"Unknown","id":"CVE-2023-25572","impact":{},"last-modified":"2023-02-14T02:29:00","references":["https://github.com/marmelab/react-admin/releases/tag/v4.7.6","https://github.com/marmelab/react-admin/pull/8645","https://github.com/marmelab/react-admin/pull/8644","https://github.com/marmelab/react-admin/releases/tag/v3.19.12","https://github.com/marmelab/react-admin/security/advisories/GHSA-5jcr-82fh-339v"],"summary":"react-admin is a frontend framework for building browser applications on top of REST/GraphQL APIs. react-admin prior to versions 3.19.12 and 4.7.6, along with ra-ui-materialui prior to 3.19.12 and 4.7.6, are vulnerable to cross-site scripting. All React applications built with react-admin and using the `<RichTextField>` are affected. `<RichTextField>` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible cross-site scripting (XSS) attack. Versions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`. Users who already sanitize HTML data server-side do not need to upgrade. As a workaround, users may replace the `<RichTextField>` by a custom field doing sanitization by hand.","vulnerable_configuration":[],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":[]}