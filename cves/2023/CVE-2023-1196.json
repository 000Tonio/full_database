{"Modified":"2023-05-02T12:56:00","Published":"2023-05-02T09:15:00","access":{},"assigner":"contact@wpscan.com","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2023-1196","impact":{},"last-modified":"2023-05-02T12:56:00","references":["https://wpscan.com/vulnerability/8e5ec88e-0e66-44e4-bbf2-74155d849ede","https://wpscan.com/vulnerability/cf376ca2-92f6-44ff-929a-ace809460a33"],"summary":"The Advanced Custom Fields (ACF) Free and Pro WordPress plugins 6.x before 6.1.0 and 5.x before 5.12.5 unserialize user controllable data, which could allow users with a role of Contributor and above to perform PHP Object Injection when a suitable gadget is present.","vulnerable_configuration":[],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":[]}