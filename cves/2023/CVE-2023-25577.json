{"Modified":"2023-02-14T23:37:00","Published":"2023-02-14T20:15:00","access":{},"assigner":"security-advisories@github.com","cvss":null,"cwe":"Unknown","id":"CVE-2023-25577","impact":{},"last-modified":"2023-02-14T23:37:00","references":["https://github.com/pallets/werkzeug/commit/517cac5a804e8c4dc4ed038bb20dacd038e7a9f1","https://github.com/pallets/werkzeug/releases/tag/2.2.3","https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323"],"summary":"Werkzeug is a comprehensive WSGI web application library. Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers. Version 2.2.3 contains a patch for this issue.","vulnerable_configuration":[],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":[]}