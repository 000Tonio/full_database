{"Modified":"2023-02-14T23:37:00","Published":"2023-02-14T21:15:00","access":{},"assigner":"security-advisories@github.com","cvss":null,"cwe":"Unknown","id":"CVE-2023-22743","impact":{},"last-modified":"2023-02-14T23:37:00","references":["https://learn.microsoft.com/en-us/windows/win32/sbscs/about-side-by-side-assemblies-","https://attack.mitre.org/techniques/T1574/002/","https://learn.microsoft.com/en-us/windows/win32/controls/cookbook-overview?redirectedfrom=MSDN#using-comctl32dll-version-6-in-an-application-that-uses-only-standard-extensions","https://github.com/git-for-windows/git/security/advisories/GHSA-gf48-x3vr-j5c3","https://github.com/git-for-windows/git/security/advisories/GHSA-p2x9-prp4-8gvq","https://github.com/git-for-windows/git/releases/tag/v2.39.2.windows.1"],"summary":"Git for Windows is the Windows port of the revision control system Git. Prior to Git for Windows version 2.39.2, by carefully crafting DLL and putting into a subdirectory of a specific name living next to the Git for Windows installer, Windows can be tricked into side-loading said DLL. This potentially allows users with local write access to place malicious payloads in a location where automated upgrades might run the Git for Windows installer with elevation. Version 2.39.2 contains a patch for this issue. Some workarounds are available. Never leave untrusted files in the Downloads folder or its sub-folders before executing the Git for Windows installer, or move the installer into a different directory before executing it.","vulnerable_configuration":[],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":[]}