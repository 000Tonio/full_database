{"Modified":"2023-05-08T21:15:00","Published":"2023-05-08T21:15:00","access":{},"assigner":"security-advisories@github.com","capec":[{"id":"74","name":"Manipulating User State","prerequisites":"User state is maintained at least in some way in user-controllable locations, such as cookies or URL parameters.","related_weakness":["315","353","371","372","693"],"solutions":"Do not rely solely on user-controllable locations, such as cookies or URL parameters, to maintain user state. Avoid sensitive information, such as usernames or authentication and authorization information, in user-controllable locations. Sensitive information that is part of the user state must be appropriately protected to ensure confidentiality and integrity at each request.","summary":"The adversary modifies state information maintained by the target software in user-accessible locations. If successful, the target software will use this tainted state information and execute in an unintended manner. State management is an important function within an application. User state maintained by the application can include usernames, payment information, browsing history as well as application-specific contents such as items in a shopping cart. Manipulating user state can be employed by an adversary to elevate privilege, conduct fraudulent transactions or otherwise modify the flow of the application to derive certain benefits."},{"id":"140","name":"Bypassing of Intermediate Forms in Multiple-Form Sets","prerequisites":"The target must collect information from the user in a series of forms where each form has its own URL that the attacker can anticipate and the application must fail to detect attempts to access intermediate forms without first filling out the previous forms.","related_weakness":["372"],"solutions":"","summary":"Some web applications require users to submit information through an ordered sequence of web forms. This is often done if there is a very large amount of information being collected or if information on earlier forms is used to pre-populate fields or determine which additional information the application needs to collect. An attacker who knows the names of the various forms in the sequence may be able to explicitly type in the name of a later form and navigate to it without first going through the previous forms. This can result in incomplete collection of information, incorrect assumptions about the information submitted by the attacker, or other problems that can impair the functioning of the application."}],"cvss":null,"cwe":"CWE-372","id":"CVE-2023-31127","impact":{},"last-modified":"2023-05-08T21:15:00","references":["https://github.com/DMTF/libspdm/security/advisories/GHSA-qw76-4v8p-xq9f","https://github.com/DMTF/libspdm/pull/2007","https://github.com/DMTF/libspdm/pull/2006"],"summary":"libspdm is a sample implementation that follows the DMTF SPDM specifications. A vulnerability has been identified in SPDM session establishment in libspdm prior to version 2.3.1. If a device supports both DHE session and PSK session with mutual\nauthentication, the attacker may be able to establish the session with `KEY_EXCHANGE` and `PSK_FINISH` to bypass the mutual authentication. This is most likely to happen when the Requester begins a session using one method (DHE, for example) and then uses the other method's finish (PSK_FINISH in this example) to establish the session. The session hashes would be expected to fail in this case, but the condition was not detected.\n\nThis issue only impacts the SPDM responder, which supports `KEY_EX_CAP=1 and `PSK_CAP=10b` at same time with mutual authentication requirement. The SPDM requester is not impacted. The SPDM responder is not impacted if `KEY_EX_CAP=0` or `PSK_CAP=0` or `PSK_CAP=01b`. The SPDM responder is not impacted if mutual authentication is not required.\n\nlibspdm 1.0, 2.0, 2.1, 2.2, 2.3 are all impacted. Older branches are not maintained, but users of the 2.3 branch may receive a patch in version 2.3.2. The SPDM specification (DSP0274) does not contain this vulnerability.","vulnerable_configuration":[],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":[]}