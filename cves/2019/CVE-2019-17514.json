{"Modified":"2020-07-27T18:15:00","Published":"2019-10-12T13:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"128","name":"Integer Attacks","prerequisites":"The target application must have an integer variable for which only some of the possible integer values are expected by the application and where there are no checks on the value of the variable before use. The attacker must be able to manipulate the targeted integer variable such that normal operations result in non-standard values due to the storage structure of integers.","related_weakness":["682"],"solutions":"","summary":"An attacker takes advantage of the structure of integer variables to cause these variables to assume values that are not expected by an application. For example, adding one to the largest positive integer in a signed integer variable results in a negative number. Negative numbers may be illegal in an application and the application may prevent an attacker from providing them directly, but the application may not consider that adding two positive numbers can create a negative number do to the structure of integer storage formats."},{"id":"129","name":"Pointer Manipulation","prerequisites":"The target application must have a pointer variable that the attacker can influence to hold an arbitrary value.","related_weakness":["682","822","823"],"solutions":"","summary":"This attack pattern involves an adversary manipulating a pointer within a target application resulting in the application accessing an unintended memory location. This can result in the crashing of the application or, for certain pointer values, access to data that would not normally be possible or the execution of arbitrary code. Since pointers are simply integer variables, Integer Attacks may often be used in Pointer Attacks."}],"cvss":5,"cvss-time":"2020-07-27T18:15:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:P/A:N","cwe":"CWE-682","id":"CVE-2019-17514","impact":{"availability":"NONE","confidentiality":"NONE","integrity":"PARTIAL"},"last-modified":"2020-07-27T18:15:00","references":["https://bugs.python.org/issue33275","https://github.com/bminor/bash/blob/ac50fbac377e32b98d2de396f016ea81e8ee9961/pathexp.c#L380","https://github.com/bminor/bash/blob/ac50fbac377e32b98d2de396f016ea81e8ee9961/pathexp.c#L405","https://pubs.acs.org/doi/full/10.1021/acs.orglett.9b03216","https://pubs.acs.org/doi/suppl/10.1021/acs.orglett.9b03216/suppl_file/ol9b03216_si_002.zip","https://security.netapp.com/advisory/ntap-20191107-0005/","https://twitter.com/chris_bloke/status/1181997278136958976","https://twitter.com/LucasCMoore/status/1181615421922824192","https://usn.ubuntu.com/4428-1/","https://web.archive.org/web/20150822013622/https://docs.python.org/3/library/glob.html","https://web.archive.org/web/20150906020027/https://docs.python.org/2.7/library/glob.html","https://web.archive.org/web/20160309211341/https://docs.python.org/3/library/glob.html","https://web.archive.org/web/20160526201356/https://docs.python.org/2.7/library/glob.html","https://www.vice.com/en_us/article/zmjwda/a-code-glitch-may-have-caused-errors-in-more-than-100-published-studies"],"refmap":{"confirm":["https://security.netapp.com/advisory/ntap-20191107-0005/"],"misc":["https://bugs.python.org/issue33275","https://github.com/bminor/bash/blob/ac50fbac377e32b98d2de396f016ea81e8ee9961/pathexp.c#L380","https://github.com/bminor/bash/blob/ac50fbac377e32b98d2de396f016ea81e8ee9961/pathexp.c#L405","https://pubs.acs.org/doi/full/10.1021/acs.orglett.9b03216","https://pubs.acs.org/doi/suppl/10.1021/acs.orglett.9b03216/suppl_file/ol9b03216_si_002.zip","https://twitter.com/LucasCMoore/status/1181615421922824192","https://twitter.com/chris_bloke/status/1181997278136958976","https://web.archive.org/web/20150822013622/https://docs.python.org/3/library/glob.html","https://web.archive.org/web/20150906020027/https://docs.python.org/2.7/library/glob.html","https://web.archive.org/web/20160309211341/https://docs.python.org/3/library/glob.html","https://web.archive.org/web/20160526201356/https://docs.python.org/2.7/library/glob.html","https://www.vice.com/en_us/article/zmjwda/a-code-glitch-may-have-caused-errors-in-more-than-100-published-studies"],"ubuntu":["USN-4428-1"]},"summary":"library/glob.html in the Python 2 and 3 documentation before 2016 has potentially misleading information about whether sorting occurs, as demonstrated by irreproducible cancer-research results. NOTE: the effects of this documentation cross application domains, and thus it is likely that security-relevant code elsewhere is affected. This issue is not a Python implementation bug, and there are no reports that NMR researchers were specifically relying on library/glob.html. In other words, because the older documentation stated \"finds all the pathnames matching a specified pattern according to the rules used by the Unix shell,\" one might have incorrectly inferred that the sorting that occurs in a Unix shell also occurred for glob.glob. There is a workaround in newer versions of Willoughby nmr-data_compilation-p2.py and nmr-data_compilation-p3.py, which call sort() directly.","vulnerable_configuration":[{"id":"cpe:2.3:a:python:python:3.6.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:python:python:3.6.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:python:python:3.7.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:python:python:3.7.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:python:python:3.8.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:python:python:3.8.0:-:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:python:python:3.6.0:-:*:*:*:*:*:*","cpe:2.3:a:python:python:3.7.0:-:*:*:*:*:*:*","cpe:2.3:a:python:python:3.8.0:-:*:*:*:*:*:*"]}