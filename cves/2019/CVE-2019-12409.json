{"Modified":"2020-07-23T19:33:00","Published":"2019-11-18T21:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"1","name":"Accessing Functionality Not Properly Constrained by ACLs","prerequisites":"The application must be navigable in a manner that associates elements (subsections) of the application with ACLs. The various resources, or individual URLs, must be somehow discoverable by the attacker The administrator must have forgotten to associate an ACL or has associated an inappropriately permissive ACL with a particular navigable resource.","related_weakness":["276","285","434","693","721","732"],"solutions":"In a more general setting, the administrator must mark every resource besides the ones supposed to be exposed to the user as accessible by a role impossible for the user to assume. The default security setting must be to deny access and then grant access only to those resources intended by business logic.","summary":"In applications, particularly web applications, access to functionality is mitigated by an authorization framework. This framework maps Access Control Lists (ACLs) to elements of the application's functionality; particularly URL's for web apps. In the case that the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker can access resources that must be available only to users at a higher privilege level, can access management sections of the application, or can run queries for data that they otherwise not supposed to."}],"cvss":7.5,"cvss-time":"2020-07-23T19:33:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-434","id":"CVE-2019-12409","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-07-23T19:33:00","references":["https://github.com/DrunkenShells/Disclosures/tree/master/CVE-2019-12409-RCE%20Vulnerability%20Due%20to%20Bad%20Defalut%20Config-Apache%20Solr","https://lists.apache.org/thread.html/47e112035b4aa67ece3b75dbcd1b9c9212895b9dfe2a71f6f7c174e2@%3Cannounce.apache.org%3E","https://lists.apache.org/thread.html/6640c7e370fce2b74e466a605a46244ccc40666ad9e3064a4e04a85d@%3Csolr-user.lucene.apache.org%3E","https://lists.apache.org/thread.html/925cdb49ceae78baddb45da7beb9b4d2b1ddc4a8e318c65e91fb4e87@%3Cissues.lucene.apache.org%3E","https://lists.apache.org/thread.html/a044eae4f6f5b0160ece5bf9cc4c0dad90ce7dd9bb210a9dc50b54be@%3Cgeneral.lucene.apache.org%3E","https://lists.apache.org/thread.html/ce7c0b456b15f6c7518adefa54ec948fed6de8e951a2584500c1e541@%3Cissues.lucene.apache.org%3E","https://support.f5.com/csp/article/K23720587?utm_source=f5support&amp;utm_medium=RSS"],"refmap":{"confirm":["https://support.f5.com/csp/article/K23720587?utm_source=f5support&amp;utm_medium=RSS"],"misc":["https://github.com/DrunkenShells/Disclosures/tree/master/CVE-2019-12409-RCE%20Vulnerability%20Due%20to%20Bad%20Defalut%20Config-Apache%20Solr"],"mlist":["[announce] 20191118 [CVE-2019-12409] Apache Solr RCE vulnerability due to bad config default","[lucene-general] 20191118 CVE-2019-12409: Apache Solr RCE vulnerability due to bad config default","[lucene-issues] 20191118 [jira] [Commented] (SOLR-13647) CVE-2019-12409: Apache Solr RCE vulnerability due to bad config default","[lucene-issues] 20191118 [jira] [Updated] (SOLR-13647) CVE-2019-12409: Apache Solr RCE vulnerability due to bad config default","[lucene-solr-user] 20191118 CVE-2019-12409: Apache Solr RCE vulnerability due to bad config default"]},"summary":"The 8.1.1 and 8.2.0 releases of Apache Solr contain an insecure setting for the ENABLE_REMOTE_JMX_OPTS configuration option in the default solr.in.sh configuration file shipping with Solr. If you use the default solr.in.sh file from the affected releases, then JMX monitoring will be enabled and exposed on RMI_PORT (default=18983), without any authentication. If this port is opened for inbound traffic in your firewall, then anyone with network access to your Solr nodes will be able to access JMX, which may in turn allow them to upload malicious code for execution on the Solr server.","vulnerable_configuration":[{"id":"cpe:2.3:a:apache:solr:8.1.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:solr:8.1.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:solr:8.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:solr:8.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:linux:linux_kernel:-:*:*:*:*:*:*:*","title":"cpe:2.3:o:linux:linux_kernel:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:apache:solr:8.1.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:solr:8.2.0:*:*:*:*:*:*:*"]}