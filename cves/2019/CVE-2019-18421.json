{"Modified":"2019-11-14T16:15:00","Published":"2019-10-31T14:15:00","access":{"authentication":"SINGLE","complexity":"HIGH","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"26","name":"Leveraging Race Conditions","prerequisites":"A resource is accessed/modified concurrently by multiple processes such that a race condition exists. The adversary has the ability to modify the resource.","related_weakness":["362","363","366","368","370","662","665","667","689"],"solutions":"Use safe libraries to access resources such as files. Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition. Use synchronization to control the flow of execution. Use static analysis tools to find race conditions. Pay attention to concurrency problems related to the access of resources.","summary":"The adversary targets a race condition occurring when multiple processes access and manipulate the same resource concurrently, and the outcome of the execution depends on the particular order in which the access takes place. The adversary can leverage a race condition by \"running the race\", modifying the resource and modifying the normal execution flow. For instance, a race condition can occur while accessing a file: the adversary can trick the system by replacing the original file with his version and cause the system to read the malicious file."},{"id":"29","name":"Leveraging Time-of-Check and Time-of-Use (TOCTOU) Race Conditions","prerequisites":"A resource is access/modified concurrently by multiple processes. The adversary is able to modify resource. A race condition exists while accessing a resource.","related_weakness":["362","366","367","368","370","662","663","665","691"],"solutions":"Use safe libraries to access resources such as files. Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition. Use synchronization to control the flow of execution. Use static analysis tools to find race conditions. Pay attention to concurrency problems related to the access of resources.","summary":"This attack targets a race condition occurring between the time of check (state) for a resource and the time of use of a resource. A typical example is file access. The adversary can leverage a file access race condition by \"running the race\", meaning that they would modify the resource between the first time the target program accesses the file and the time the target program uses the file. During that period of time, the adversary could replace or modify the file, causing the application to behave unexpectedly."}],"cvss":7.1,"cvss-time":"2019-11-14T16:15:00","cvss-vector":"AV:N/AC:H/Au:S/C:C/I:C/A:C","cwe":"CWE-362","id":"CVE-2019-18421","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2019-11-14T16:15:00","references":["http://lists.opensuse.org/opensuse-security-announce/2019-11/msg00037.html","http://www.openwall.com/lists/oss-security/2019/10/31/3","http://xenbits.xen.org/xsa/advisory-299.html","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2BQKX7M2RHCWDBKNPX4KEBI3MJIH6AYZ/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I5WWPW4BSZDDW7VHU427XTVXV7ROOFFW/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IZYATWNUGHRBG6I3TC24YHP5Y3J7I6KH/","https://seclists.org/bugtraq/2020/Jan/21","https://security.gentoo.org/glsa/202003-56","https://www.debian.org/security/2020/dsa-4602"],"refmap":{"bugtraq":["20200114 [SECURITY] [DSA 4602-1] xen security update"],"debian":["DSA-4602"],"fedora":["FEDORA-2019-376ec5c107","FEDORA-2019-865bb16900","FEDORA-2019-cbb732f760"],"gentoo":["GLSA-202003-56"],"misc":["http://xenbits.xen.org/xsa/advisory-299.html"],"mlist":["[oss-security] 20191031 Xen Security Advisory 299 v4 (CVE-2019-18421) - Issues with restartable PV type change operations"],"suse":["openSUSE-SU-2019:2506"]},"summary":"An issue was discovered in Xen through 4.12.x allowing x86 PV guest OS users to gain host OS privileges by leveraging race conditions in pagetable promotion and demotion operations. There are issues with restartable PV type change operations. To avoid using shadow pagetables for PV guests, Xen exposes the actual hardware pagetables to the guest. In order to prevent the guest from modifying these page tables directly, Xen keeps track of how pages are used using a type system; pages must be \"promoted\" before being used as a pagetable, and \"demoted\" before being used for any other type. Xen also allows for \"recursive\" promotions: i.e., an operating system promoting a page to an L4 pagetable may end up causing pages to be promoted to L3s, which may in turn cause pages to be promoted to L2s, and so on. These operations may take an arbitrarily large amount of time, and so must be re-startable. Unfortunately, making recursive pagetable promotion and demotion operations restartable is incredibly complicated, and the code contains several races which, if triggered, can cause Xen to drop or retain extra type counts, potentially allowing guests to get write access to in-use pagetables. A malicious PV guest administrator may be able to escalate their privilege to that of the host. All x86 systems with untrusted PV guests are vulnerable. HVM and PVH guests cannot exercise this vulnerability.","vulnerable_configuration":[{"id":"cpe:2.3:o:xen:xen:4.8.0:*:*:*:*:*:x86:*","title":"cpe:2.3:o:xen:xen:4.8.0:*:*:*:*:*:x86:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:xen:xen:4.8.0:*:*:*:*:*:x86:*"]}