{"Modified":"2019-10-08T18:15:00","Published":"2019-09-30T22:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"184","name":"Software Integrity Attack","prerequisites":"","related_weakness":["494"],"solutions":"","summary":"An attacker initiates a series of events designed to cause a user, program, server, or device to perform actions which undermine the integrity of software code, device data structures, or device firmware, achieving the modification of the target's integrity to achieve an insecure state."},{"id":"185","name":"Malicious Software Download","prerequisites":"","related_weakness":["494"],"solutions":"","summary":"An attacker uses deceptive methods to cause a user or an automated process to download and install dangerous code that originates from an attacker controlled source. There are several variations to this strategy of attack."},{"id":"533","name":"Malicious Manual Software Update","prerequisites":"Advanced knowledge about the download and update installation processes. Advanced knowledge about the deployed system and its various software subcomponents and processes.","related_weakness":["494"],"solutions":"","summary":"An attacker introduces malicious code to the victim's system by altering the payload of a software update, allowing for additional compromise or site disruption at the victim location. These manual, or user-assisted attacks, vary from requiring the user to download and run an executable, to as streamlined as tricking the user to click a URL. Attacks which aim at penetrating a specific network infrastructure often rely upon secondary attack methods to achieve the desired impact. Spamming, for example, is a common method employed as an secondary attack vector. Thus the attacker has in his or her arsenal a choice of initial attack vectors ranging from traditional SMTP/POP/IMAP spamming and its varieties, to web-application mechanisms which commonly implement both chat and rich HTML messaging within the user interface."},{"id":"187","name":"Malicious Automated Software Update","prerequisites":"","related_weakness":["494"],"solutions":"","summary":"An attacker exploits a weakness in a server or client's process of delivering and verifying the integrity of code supplied by an update-providing server or mechanism to cause code of the attackers' choosing to be downloaded and installed as a software update. Attacks against automated update mechanisms involve attack vectors which are specific to the type of update mechanism, but typically involve two different attack strategies: redirection or spoofing. Redirection-based attacks exploit two layers of weaknesses in server or client software to undermine the integrity of the target code-base. The first weakness involves a failure to properly authenticate a server as a source of update or patch content. This type of weakness typically results from authentication mechanisms which can be defeated, allowing a hostile server to satisfy the criteria that establish a trust relationship. The second weakness is a systemic failure to validate the identity and integrity of code downloaded from a remote location, hence the inability to distinguish malicious code from a legitimate update. One predominate type of redirection attack requires DNS spoofing or hijacking of a domain name corresponding to an update server. The target software initiates an update request and the DNS request resolves the domain name of the update server to the IP address of the attacker, at which point the software accepts updates either transmitted by or pulled from the attackers' server. Attacks against DNS mechanisms comprise an initial phase of a chain of attacks that facilitate automated update hijacking attack, and such attacks have a precedent in targeted activities that have been as complex as DNS/BIND attacks of corporate infrastructures, to untargeted attacks aimed at compromising home broadband routers, as well as attacks involving the compromise of wireless access points, as well as 'evil twin' attacks coupled with DNS redirection. Due to the plethora of options open to the attacker in forcing name resolution to arbitrary servers the Automated Update Hijacking attack strategies are the tip of the spear for many multi-stage attack chains. The second weakness that is exploited by the attacker is the lack of integrity checking by the software in validating the update. Software which relies only upon domain name resolution to establish the identity of update code is particularly vulnerable, because this signals an absence of other security countermeasures that could be applied to invalidate the attackers' payload on basis of code identity, hashing, signing, encryption, and other integrity checking mechanisms. Redirection-based attack patterns work equally well against client-side software as well as local servers or daemons that provide software update functionality. One precedent of redirection-based attacks involves the active exploitation of Firefox extensions, such as the Google Toolbar, Yahoo Toolbar, Facebook Toolbar, and others. The second strategy employed in Automated Hijacking Attacks are spoofing strategies, including content or identity spoofing, as well as protocol spoofing. Content or identity spoofing attacks can trigger updates in software by embedding scripted mechanisms within a malicious web page, which masquerades as a legitimate update source. Scripting mechanisms communicate with software components and trigger updates from locations specified by the attackers' server. Such attacks have numerous precedents, one in particular being eTrust Antivirus Webscan Automated Update Remote Code Execution vulnerability (CVE-2006-3976) and (CVE-2006-3977) whereby an ActiveX control could be remotely manipulated by an attacker controlled web page to download and execute the attackers' code without integrity checking."},{"id":"186","name":"Malicious Software Update","prerequisites":"","related_weakness":["494"],"solutions":"Validate software updates before installing.","summary":"An attacker uses deceptive methods to cause a user or an automated process to download and install dangerous code believed to be a valid update that originates from an attacker controlled source. Although there are several variations to this strategy of attack, the attack methods are united in that all rely on the ability of an attacker to position and disguise malicious content such that it masquerades as a legitimate software update which is then processed by a program, undermining application integrity. As such the attack employs 'spoofing' techniques augmented by psychological or technological mechanisms to disguise the update and/or its source. Virtually all software requires frequent updates or patches, giving the attacker immense latitude when structuring the attack, as well as many targets of opportunity. Attacks involving malicious software updates can be targeted or untargeted in reference to a population of users, and can also involve manual and automatic means of payload installation. Untargeted attacks rely upon a mass delivery system such as spamming, phishing, or trojans/botnets to distribute emails or other messages to vast populations of users. Targeted attacks aim at a particular demographic or user population. Corporate Facebook or Myspace pages make it easy to target users of a specific company or affiliation without relying on email address harvesting or spamming. One phishing-assisted variation on this attack involves hosting what appears to be a software update, then harvesting actual email addresses for an organization, or generating commonly used email addresses, and then sending spam, phishing, or spear-phishing emails to the organization's users requesting that they manually download and install the malicious software update. This type of attack has also been conducted using an Instant Messaging virus payload, which harvests the names from a user's contact list and sends instant messages to those users to download and apply the update. While both methods involve a high degree of automated mechanisms to support the attack, the primary vector for achieving the installation of the update remains a manual user-directed process, although clicking a link within an IM client or web application may initiate the update. Other class of attacks focus on firmware, where malicious updates are made to the core system firmware or BIOS. Since this occurs outside the controls of the operating system, the OS detection and prevention mechanisms do not aid, thus allowing an adversary to evade defenses as well as gain persistence on the target's system. Automated attacks involving malicious software updates require little to no user-directed activity and are therefore advantageous because they avoid the complex preliminary setup stages of manual attacks, which must effectively 'hook' users while avoiding countermeasures such as spam filters or web security filters."}],"cvss":5,"cvss-time":"2019-10-08T18:15:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:P/A:N","cwe":"CWE-494","id":"CVE-2019-16760","impact":{"availability":"NONE","confidentiality":"NONE","integrity":"PARTIAL"},"last-modified":"2019-10-08T18:15:00","references":["http://www.openwall.com/lists/oss-security/2019/10/08/3","https://gist.github.com/pietroalbini/0d293b24a44babbeb6187e06eebd4992","https://github.com/rust-lang/rust/security/advisories/GHSA-phjm-8x66-qw4r","https://groups.google.com/forum/#!topic/rustlang-security-announcements/rVQ5e3TDnpQ"],"refmap":{"confirm":["https://github.com/rust-lang/rust/security/advisories/GHSA-phjm-8x66-qw4r"],"misc":["https://gist.github.com/pietroalbini/0d293b24a44babbeb6187e06eebd4992","https://groups.google.com/forum/#!topic/rustlang-security-announcements/rVQ5e3TDnpQ"],"mlist":["[oss-security] 20191008 CVE-2019-16760: Cargo prior to Rust 1.26.0 may download the wrong dependency"]},"summary":"Cargo prior to Rust 1.26.0 may download the wrong dependency if your package.toml file uses the `package` configuration key. Usage of the `package` key to rename dependencies in `Cargo.toml` is ignored in Rust 1.25.0 and prior. When Rust 1.25.0 and prior is used Cargo may download the wrong dependency, which could be squatted on crates.io to be a malicious package. This not only affects manifests that you write locally yourself, but also manifests published to crates.io. Rust 1.0.0 through Rust 1.25.0 is affected by this advisory because Cargo will ignore the `package` key in manifests. Rust 1.26.0 through Rust 1.30.0 are not affected and typically will emit an error because the `package` key is unstable. Rust 1.31.0 and after are not affected because Cargo understands the `package` key. Users of the affected versions are strongly encouraged to update their compiler to the latest available one. Preventing this issue from happening requires updating your compiler to be either Rust 1.26.0 or newer. There will be no point release for Rust versions prior to 1.26.0. Users of Rust 1.19.0 to Rust 1.25.0 can instead apply linked patches to mitigate the issue.","vulnerable_configuration":[{"id":"cpe:2.3:a:rust-lang:rust:0.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.3.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.3.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.11.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.11.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:0.12.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:0.12.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.0.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.0.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.0.0:alpha:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.0.0:alpha:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.0.0:alpha_2:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.0.0:alpha_2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.0.0:beta:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.0.0:beta:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.3.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.3.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.5.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.5.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.6.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.6.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.7.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.7.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.8.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.8.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.9.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.9.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.10.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.10.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.11.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.11.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.12.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.12.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.12.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.12.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.13.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.13.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.14.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.14.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.15.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.15.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.15.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.15.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.16.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.16.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.17.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.17.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.18.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.18.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.19.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.19.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.20.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.20.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.21.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.21.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.22.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.22.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.22.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.22.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.23.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.23.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.24.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.24.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.24.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.24.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:rust-lang:rust:1.25.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:rust-lang:rust:1.25.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:rust-lang:rust:0.1:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.2:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.3:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.3.1:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.4:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.5:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.6:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.7:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.8:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.9:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.10:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.11.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:0.12.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.0.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.0.0:-:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.0.0:alpha:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.0.0:alpha_2:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.0.0:beta:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.1.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.2.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.3.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.4.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.5.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.6.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.7.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.8.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.9.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.10.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.11.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.12.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.12.1:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.13.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.14.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.15.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.15.1:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.16.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.17.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.18.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.19.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.20.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.21.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.22.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.22.1:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.23.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.24.0:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.24.1:*:*:*:*:*:*:*","cpe:2.3:a:rust-lang:rust:1.25.0:*:*:*:*:*:*:*"]}