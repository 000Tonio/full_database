{"Modified":"2020-08-24T17:37:00","Published":"2019-10-31T14:15:00","access":{"authentication":"SINGLE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"67","name":"String Format Overflow in syslog()","prerequisites":"The format string argument of the Syslog function can be tainted with user supplied data.","related_weakness":["120","134","20","680","697","74"],"solutions":"The following code shows a vulnerable usage of Syslog():\n               syslog(LOG_ERR, cmdBuf);\n                     // the buffer cmdBuff is taking user supplied data.","summary":"This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted."},{"id":"135","name":"Format String Injection","prerequisites":"The target application must accept a strings as user input, fail to sanitize string formatting characters in the user input, and process this string using functions that interpret string formatting characters.","related_weakness":["133","134","20","74"],"solutions":"Limit the usage of formatting string functions. Strong input validation - All user-controllable input must be validated and filtered for illegal formatting characters.","summary":"An adversary includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An adversary can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the adversary can write to the program stack."}],"cvss":6.3,"cvss-time":"2020-08-24T17:37:00","cvss-vector":"AV:N/AC:M/Au:S/C:N/I:N/A:C","cwe":"CWE-134","id":"CVE-2019-18420","impact":{"availability":"COMPLETE","confidentiality":"NONE","integrity":"NONE"},"last-modified":"2020-08-24T17:37:00","references":["http://lists.opensuse.org/opensuse-security-announce/2019-11/msg00037.html","http://www.openwall.com/lists/oss-security/2019/10/31/1","http://xenbits.xen.org/xsa/advisory-296.html","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2BQKX7M2RHCWDBKNPX4KEBI3MJIH6AYZ/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I5WWPW4BSZDDW7VHU427XTVXV7ROOFFW/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IZYATWNUGHRBG6I3TC24YHP5Y3J7I6KH/","https://seclists.org/bugtraq/2020/Jan/21","https://security.gentoo.org/glsa/202003-56","https://www.debian.org/security/2020/dsa-4602"],"refmap":{"bugtraq":["20200114 [SECURITY] [DSA 4602-1] xen security update"],"debian":["DSA-4602"],"fedora":["FEDORA-2019-376ec5c107","FEDORA-2019-865bb16900","FEDORA-2019-cbb732f760"],"gentoo":["GLSA-202003-56"],"misc":["http://xenbits.xen.org/xsa/advisory-296.html"],"mlist":["[oss-security] 20191031 Xen Security Advisory 296 v4 (CVE-2019-18420) - VCPUOP_initialise DoS"],"suse":["openSUSE-SU-2019:2506"]},"summary":"An issue was discovered in Xen through 4.12.x allowing x86 PV guest OS users to cause a denial of service via a VCPUOP_initialise hypercall. hypercall_create_continuation() is a variadic function which uses a printf-like format string to interpret its parameters. Error handling for a bad format character was done using BUG(), which crashes Xen. One path, via the VCPUOP_initialise hypercall, has a bad format character. The BUG() can be hit if VCPUOP_initialise executes for a sufficiently long period of time for a continuation to be created. Malicious guests may cause a hypervisor crash, resulting in a Denial of Service (DoS). Xen versions 4.6 and newer are vulnerable. Xen versions 4.5 and earlier are not vulnerable. Only x86 PV guests can exploit the vulnerability. HVM and PVH guests, and guests on ARM systems, cannot exploit the vulnerability.","vulnerable_configuration":[{"id":"cpe:2.3:o:xen:xen:4.8.0:*:*:*:*:*:x86:*","title":"cpe:2.3:o:xen:xen:4.8.0:*:*:*:*:*:x86:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:xen:xen:4.8.0:*:*:*:*:*:x86:*"]}