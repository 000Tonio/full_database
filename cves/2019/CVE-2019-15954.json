{"Modified":"2022-01-01T20:18:00","Published":"2019-09-05T19:16:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":9,"cvss-time":"2022-01-01T20:18:00","cvss-vector":"AV:N/AC:L/Au:S/C:C/I:C/A:C","cwe":"CWE-862","id":"CVE-2019-15954","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2022-01-01T20:18:00","references":["https://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf","https://seclists.org/fulldisclosure/2019/Sep/5","http://packetstormsecurity.com/files/154924/Total.js-CMS-12-Widget-JavaScript-Code-Injection.html"],"refmap":{"misc":["http://packetstormsecurity.com/files/154924/Total.js-CMS-12-Widget-JavaScript-Code-Injection.html","https://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf","https://seclists.org/fulldisclosure/2019/Sep/5"]},"summary":"An issue was discovered in Total.js CMS 12.0.0. An authenticated user with the widgets privilege can gain achieve Remote Command Execution (RCE) on the remote server by creating a malicious widget with a special tag containing JavaScript code that will be evaluated server side. In the process of evaluating the tag by the back-end, it is possible to escape the sandbox object by using the following payload: <script total>global.process.mainModule.require(child_process).exec(RCE);</script>","vulnerable_configuration":[{"id":"cpe:2.3:a:totaljs:total.js_cms:12.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:totaljs:total.js_cms:12.0.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:totaljs:total.js_cms:12.0.0:*:*:*:*:*:*:*"]}