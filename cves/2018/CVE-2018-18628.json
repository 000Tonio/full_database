{"Modified":"2019-01-28T21:13:00","Published":"2018-10-23T20:29:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":10,"cvss-time":"2019-01-28T21:13:00","cvss-vector":"AV:N/AC:L/Au:N/C:C/I:C/A:C","cwe":"CWE-502","id":"CVE-2018-18628","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2019-01-28T21:13:00","references":["https://github.com/pippo-java/pippo/issues/458"],"refmap":{"misc":["https://github.com/pippo-java/pippo/issues/458"]},"summary":"An issue was discovered in Pippo 1.11.0. The function SerializationSessionDataTranscoder.decode() calls ObjectInputStream.readObject() to deserialize a SessionData object without checking the object types. An attacker can create a malicious object, base64 encode it, and place it in the PIPPO_SESSION field of a cookie. Sending this cookie may lead to remote code execution.","vulnerable_configuration":[{"id":"cpe:2.3:a:pippo:pippo:1.11.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:pippo:pippo:1.11.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:pippo:pippo:1.11.0:*:*:*:*:*:*:*"]}