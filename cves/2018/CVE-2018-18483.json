{"Modified":"2019-10-31T01:15:00","Published":"2018-10-18T21:29:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"92","name":"Forced Integer Overflow","prerequisites":"The attacker can manipulate the value of an integer variable utilized by the target host. The target host does not do proper range checking on the variable before utilizing it. When the integer variable is incremented or decremented to an out of range value, it gets a very different value (e.g. very small or negative number)","related_weakness":["120","122","128","190","196","680","697"],"solutions":"Use a language or compiler that performs automatic bounds checking. Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as integer overflow. Use an abstraction library to abstract away risky APIs. Not a complete solution. Always do bound checking before consuming user input data.","summary":"This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code."}],"cvss":6.8,"cvss-time":"2019-10-31T01:15:00","cvss-vector":"AV:N/AC:M/Au:N/C:P/I:P/A:P","cwe":"CWE-190","id":"CVE-2018-18483","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2019-10-31T01:15:00","references":["http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00072.html","http://lists.opensuse.org/opensuse-security-announce/2019-11/msg00008.html","http://www.securityfocus.com/bid/105689","https://gcc.gnu.org/bugzilla/show_bug.cgi?id=87602","https://sourceware.org/bugzilla/show_bug.cgi?id=23767","https://usn.ubuntu.com/4326-1/","https://usn.ubuntu.com/4336-1/"],"refmap":{"bid":["105689"],"misc":["https://gcc.gnu.org/bugzilla/show_bug.cgi?id=87602","https://sourceware.org/bugzilla/show_bug.cgi?id=23767"],"suse":["openSUSE-SU-2019:2415","openSUSE-SU-2019:2432"],"ubuntu":["USN-4326-1","USN-4336-1"]},"summary":"The get_count function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31, allows remote attackers to cause a denial of service (malloc called with the result of an integer-overflowing calculation) or possibly have unspecified other impact via a crafted string, as demonstrated by c++filt.","vulnerable_configuration":[{"id":"cpe:2.3:a:gnu:binutils:2.31:*:*:*:*:*:*:*","title":"cpe:2.3:a:gnu:binutils:2.31:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:gnu:binutils:2.31:*:*:*:*:*:*:*"]}