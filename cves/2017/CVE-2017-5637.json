{"Modified":"2021-07-20T23:15:00","Published":"2017-10-10T01:30:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"security@apache.org","capec":[{"id":"62","name":"Cross Site Request Forgery","prerequisites":"","related_weakness":["306","352","664","716","732"],"solutions":"Use cryptographic tokens to associate a request with a specific action. The token can be regenerated at every request so that if a request with an invalid token is encountered, it can be reliably discarded. The token is considered invalid if it arrived with a request other than the action it was supposed to be associated with. Although less reliable, the use of the optional HTTP Referrer header can also be used to determine whether an incoming request was actually one that the user is authorized for, in the current context. Additionally, the user can also be prompted to confirm an action every time an action concerning potentially sensitive data is invoked. This way, even if the attacker manages to get the user to click on a malicious link and request the desired action, the user has a chance to recover by denying confirmation. This solution is also implicitly tied to using a second factor of authentication before performing such actions. In general, every request must be checked for the appropriate authentication token as well as authorization in the current session context.","summary":"An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level. This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply \"riding\" the existing session cookie."},{"id":"12","name":"Choosing Message Identifier","prerequisites":"Information and client-sensitive (and client-specific) data must be present through a distribution channel available to all users. Distribution means must code (through channel, message identifiers, or convention) message destination in a manner visible within the distribution means itself (such as a control channel) or in the messages themselves.","related_weakness":["201","306"],"solutions":"The purpose is to architect the system in a way that associates proper authentication/authorization with each channel/message. Re-architect system input/output channels as appropriate to distribute self-protecting data. That is, encrypt (or otherwise protect) channels/messages so that only authorized readers can see them.","summary":"This pattern of attack is defined by the selection of messages distributed over via multicast or public information channels that are intended for another client by determining the parameter value assigned to that client. This attack allows the adversary to gain access to potentially privileged information, and to possibly perpetrate other attacks through the distribution means by impersonation. If the channel/message being manipulated is an input rather than output mechanism for the system, (such as a command bus), this style of attack could be used to change the adversary's identifier to more a privileged one."},{"id":"36","name":"Using Unpublished APIs","prerequisites":"The architecture under attack must publish or otherwise make available services that clients can attach to, either in an unauthenticated fashion, or having obtained an authentication token elsewhere. The service need not be 'discoverable', but in the event it isn't it must have some way of being discovered by an attacker. This might include listening on a well-known port. Ultimately, the likelihood of exploit depends on discoverability of the vulnerable service.","related_weakness":["306","693","695"],"solutions":"Authenticating both services and their discovery, and protecting that authentication mechanism simply fixes the bulk of this problem. Protecting the authentication involves the standard means, including: 1) protecting the channel over which authentication occurs, 2) preventing the theft, forgery, or prediction of authentication credentials or the resultant tokens, or 3) subversion of password reset and the like.","summary":"An adversary searches for and invokes APIs that the target system designers did not intend to be publicly available. If these APIs fail to authenticate requests the attacker may be able to invoke functionality they are not authorized for."},{"id":"166","name":"Force the System to Reset Values","prerequisites":"The targeted application must have a reset function that returns the configuration of the application to an earlier state. The reset functionality must be inadequately protected against use.","related_weakness":["306"],"solutions":"","summary":"An attacker forces the target into a previous state in order to leverage potential weaknesses in the target dependent upon a prior configuration or state-dependent factors. Even in cases where an attacker may not be able to directly control the configuration of the targeted application, they may be able to reset the configuration to a prior state since many applications implement reset functions. Since these functions are usually intended as emergency features to return an application to a stable configuration if the current configuration degrades functionality, they may not be as strongly secured as other configuration options. The resetting of values is dangerous as it may enable undesired functionality, disable services, or modify access controls. At the very least this is a nuisance attack since the administrator will need to re-apply their configuration. At worst, this attack can open avenues for powerful attacks against the application, and, if it isn't obvious that the configuration has been reset, these vulnerabilities may be present a long time before they are notices."}],"cvss":5,"cvss-time":"2021-07-20T23:15:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:N/A:P","cwe":"CWE-306","id":"CVE-2017-5637","impact":{"availability":"PARTIAL","confidentiality":"NONE","integrity":"NONE"},"last-modified":"2021-07-20T23:15:00","redhat":{"advisories":[{"rhsa":{"id":"RHSA-2017:2477"}},{"rhsa":{"id":"RHSA-2017:3354"}},{"rhsa":{"id":"RHSA-2017:3355"}}]},"references":["https://lists.apache.org/thread.html/58170aeb7a681d462b7fa31cae81110cbb749d2dc83c5736a0bb8370@%3Cdev.zookeeper.apache.org%3E","https://issues.apache.org/jira/browse/ZOOKEEPER-2693","http://www.securityfocus.com/bid/98814","http://www.debian.org/security/2017/dsa-3871","https://access.redhat.com/errata/RHSA-2017:3355","https://access.redhat.com/errata/RHSA-2017:3354","https://access.redhat.com/errata/RHSA-2017:2477","https://lists.apache.org/thread.html/053d9ce4d579b02203db18545fee5e33f35f2932885459b74d1e4272@%3Cissues.activemq.apache.org%3E","https://lists.apache.org/thread.html/bcce5a9c532b386c68dab2f6b3ce8b0cc9b950ec551766e76391caa3@%3Ccommits.nifi.apache.org%3E","https://lists.apache.org/thread.html/rca37935d661f4689cb4119f1b3b224413b22be161b678e6e6ce0c69b@%3Ccommits.nifi.apache.org%3E","https://www.oracle.com/security-alerts/cpujul2020.html"],"refmap":{"bid":["98814"],"confirm":["https://issues.apache.org/jira/browse/ZOOKEEPER-2693"],"debian":["DSA-3871"],"misc":["https://www.oracle.com/security-alerts/cpujul2020.html"],"mlist":["[activemq-issues] 20190820 [jira] [Created] (AMQ-7279) Security Vulnerabilities in Libraries - jackson-databind-2.9.8.jar, tomcat-servlet-api-8.0.53.jar, tomcat-websocket-api-8.0.53.jar, zookeeper-3.4.6.jar, guava-18.0.jar, jetty-all-9.2.26.v20180806.jar, scala-library-2.11.0.jar","[dev] 20171009 [SECURITY] CVE-2017-5637: DOS attack on wchp/wchc four letter words (4lw)","[nifi-commits] 20191113 svn commit: r1869773 - /nifi/site/trunk/security.html","[nifi-commits] 20200123 svn commit: r1873083 - /nifi/site/trunk/security.html"]},"summary":"Two four letter word commands \"wchp/wchc\" are CPU intensive and could cause spike of CPU utilization on Apache ZooKeeper server if abused, which leads to the server unable to serve legitimate client requests. Apache ZooKeeper thru version 3.4.9 and 3.5.2 suffer from this issue, fixed in 3.4.10, 3.5.3, and later.","vulnerable_configuration":[{"id":"cpe:2.3:a:apache:zookeeper:3.4.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.5.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.5.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.5.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.5.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.5.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.5.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:zookeeper:3.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:zookeeper:3.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*","title":"cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:apache:zookeeper:3.4.8:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.7:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.5.2:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.5.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.4:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.3:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.2:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.6:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.5:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.5.0:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.9:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:zookeeper:3.4.0:*:*:*:*:*:*:*","cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*"]}