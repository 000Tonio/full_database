{"Modified":"2022-04-18T17:54:00","Published":"2017-11-27T10:29:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"secure@dell.com","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":6.8,"cvss-time":"2022-04-18T17:54:00","cvss-vector":"AV:N/AC:M/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2017-4995","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2022-04-18T17:54:00","references":["https://pivotal.io/security/cve-2017-4995","http://www.securityfocus.com/bid/99080","https://lists.apache.org/thread.html/4641ed8616ccc2c1fbddac2c3dc9900c96387bc226eaf0232d61909b@%3Ccommits.cassandra.apache.org%3E","https://lists.apache.org/thread.html/rf7f87810c38dc9abf9f93989f76008f504cbf7c1a355214640b2d04c@%3Ccommits.cassandra.apache.org%3E","https://lists.apache.org/thread.html/r42ac3e39e6265db12d9fc6ae1cd4b5fea7aed9830dc6f6d58228fed7@%3Ccommits.cassandra.apache.org%3E"],"refmap":{"bid":["99080"],"confirm":["https://pivotal.io/security/cve-2017-4995"],"mlist":["[cassandra-commits] 20191113 [jira] [Created] (CASSANDRA-15416) CVE-2017-7525 ( jackson-databind is vulnerable to Remote Code Execution) on version 3.11.4"]},"summary":"An issue was discovered in Pivotal Spring Security 4.2.0.RELEASE through 4.2.2.RELEASE, and Spring Security 5.0.0.M1. When configured to enable default typing, Jackson contained a deserialization vulnerability that could lead to arbitrary code execution. Jackson fixed this vulnerability by blacklisting known \"deserialization gadgets.\" Spring Security configures Jackson with global default typing enabled, which means that (through the previous exploit) arbitrary code could be executed if all of the following is true: (1) Spring Security's Jackson support is being leveraged by invoking SecurityJackson2Modules.getModules(ClassLoader) or SecurityJackson2Modules.enableDefaultTyping(ObjectMapper); (2) Jackson is used to deserialize data that is not trusted (Spring Security does not perform deserialization using Jackson, so this is an explicit choice of the user); and (3) there is an unknown (Jackson is not blacklisting it already) \"deserialization gadget\" that allows code execution present on the classpath. Jackson provides a blacklisting approach to protecting against this type of attack, but Spring Security should be proactive against blocking unknown \"deserialization gadgets\" when Spring Security enables default typing.","vulnerable_configuration":[{"id":"cpe:2.3:a:vmware:spring_security:4.2.2:release:*:*:*:*:*:*","title":"cpe:2.3:a:vmware:spring_security:4.2.2:release:*:*:*:*:*:*"},{"id":"cpe:2.3:a:vmware:spring_security:4.2.0:release:*:*:*:*:*:*","title":"cpe:2.3:a:vmware:spring_security:4.2.0:release:*:*:*:*:*:*"},{"id":"cpe:2.3:a:vmware:spring_security:4.2.1:release:*:*:*:*:*:*","title":"cpe:2.3:a:vmware:spring_security:4.2.1:release:*:*:*:*:*:*"},{"id":"cpe:2.3:a:vmware:spring_security:5.0.0:m1:*:*:*:*:*:*","title":"cpe:2.3:a:vmware:spring_security:5.0.0:m1:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:vmware:spring_security:4.2.2:release:*:*:*:*:*:*","cpe:2.3:a:vmware:spring_security:4.2.0:release:*:*:*:*:*:*","cpe:2.3:a:vmware:spring_security:4.2.1:release:*:*:*:*:*:*","cpe:2.3:a:vmware:spring_security:5.0.0:m1:*:*:*:*:*:*"]}