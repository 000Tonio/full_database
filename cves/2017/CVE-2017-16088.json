{"Modified":"2019-10-09T23:24:00","Published":"2018-06-07T02:29:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":10,"cvss-time":"2019-10-09T23:24:00","cvss-vector":"AV:N/AC:L/Au:N/C:C/I:C/A:C","cwe":"NVD-CWE-noinfo","id":"CVE-2017-16088","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2019-10-09T23:24:00","references":["https://github.com/hacksparrow/safe-eval/issues/5","https://github.com/patriksimek/vm2/issues/59","https://nodesecurity.io/advisories/337"],"refmap":{"misc":["https://github.com/hacksparrow/safe-eval/issues/5","https://github.com/patriksimek/vm2/issues/59","https://nodesecurity.io/advisories/337"]},"summary":"The safe-eval module describes itself as a safer version of eval. By accessing the object constructors, un-sanitized user input can access the entire standard library and effectively break out of the sandbox.","vulnerable_configuration":[{"id":"cpe:2.3:a:safe-eval_project:safe-eval:0.0.0:*:*:*:*:node.js:*:*","title":"cpe:2.3:a:safe-eval_project:safe-eval:0.0.0:*:*:*:*:node.js:*:*"},{"id":"cpe:2.3:a:safe-eval_project:safe-eval:0.1.0:*:*:*:*:node.js:*:*","title":"cpe:2.3:a:safe-eval_project:safe-eval:0.1.0:*:*:*:*:node.js:*:*"},{"id":"cpe:2.3:a:safe-eval_project:safe-eval:0.2.0:*:*:*:*:node.js:*:*","title":"cpe:2.3:a:safe-eval_project:safe-eval:0.2.0:*:*:*:*:node.js:*:*"},{"id":"cpe:2.3:a:safe-eval_project:safe-eval:0.3.0:*:*:*:*:node.js:*:*","title":"cpe:2.3:a:safe-eval_project:safe-eval:0.3.0:*:*:*:*:node.js:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:safe-eval_project:safe-eval:0.0.0:*:*:*:*:node.js:*:*","cpe:2.3:a:safe-eval_project:safe-eval:0.1.0:*:*:*:*:node.js:*:*","cpe:2.3:a:safe-eval_project:safe-eval:0.2.0:*:*:*:*:node.js:*:*","cpe:2.3:a:safe-eval_project:safe-eval:0.3.0:*:*:*:*:node.js:*:*"]}