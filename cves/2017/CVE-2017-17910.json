{"Modified":"2019-10-03T00:03:00","Published":"2017-12-29T19:29:00","access":{"authentication":"NONE","complexity":"LOW","vector":"ADJACENT_NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"112","name":"Brute Force","prerequisites":"The attacker must be able to determine when they have successfully guessed the secret. As such, one-time pads are immune to this type of attack since there is no way to determine when a guess is correct.","related_weakness":["326","330","521"],"solutions":"Select a provably large secret space for selection of the secret. Provably large means that the procedure by which the secret is selected does not have artifacts that significantly reduce the size of the total secret space. Do not provide the means for an attacker to determine success independently. This forces the attacker to check their guesses against an external authority, which can slow the attack and warn the defender. This mitigation may not be possible if testing material must appear externally, such as with a transmitted cryptotext.","summary":"In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions. The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space. Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since elimination of patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers. Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks."},{"id":"59","name":"Session Credential Falsification through Prediction","prerequisites":"The target host uses session IDs to keep track of the users. Session IDs are used to control access to resources. The session IDs used by the target host are predictable. For example, the session IDs are generated using predictable information (e.g., time).","related_weakness":["200","285","290","330","331","346","384","488","539","6","693","719"],"solutions":"Use a strong source of randomness to generate a session ID. Use adequate length session IDs Do not use information available to the user in order to generate session ID (e.g., time). Ideas for creating random numbers are offered by Eastlake [RFC1750] Encrypt the session ID if you expose it to the user. For instance session ID can be stored in a cookie in encrypted format.","summary":"This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking."},{"id":"485","name":"Signature Spoofing by Key Recreation","prerequisites":"An authoritative signer is using a weak method of random number generation or weak signing software that causes key leakage or permits key inference. An authoritative signer is using a signature algorithm with a direct weakness or with poorly chosen parameters that enable the key to be recovered using signatures from that signer.","related_weakness":["310","330"],"solutions":"Ensure cryptographic elements have been sufficiently tested for weaknesses.","summary":"An attacker obtains an authoritative or reputable signer's private signature key by exploiting a cryptographic weakness in the signature algorithm or pseudorandom number generation and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker."}],"cvss":3.3,"cvss-time":"2019-10-03T00:03:00","cvss-vector":"AV:A/AC:L/Au:N/C:N/I:N/A:P","cwe":"CWE-330","id":"CVE-2017-17910","impact":{"availability":"PARTIAL","confidentiality":"NONE","integrity":"NONE"},"last-modified":"2019-10-03T00:03:00","references":["https://docs.wixstatic.com/ugd/28ba71_6ecc3158975a484d827e935edda4fa17.pdf","https://www.trustworks.at/publications"],"refmap":{"misc":["https://docs.wixstatic.com/ugd/28ba71_6ecc3158975a484d827e935edda4fa17.pdf","https://www.trustworks.at/publications"]},"summary":"On Hoermann BiSecur devices before 2018, a vulnerability can be exploited by recording a single radio transmission. An attacker can intercept an arbitrary radio frame exchanged between a BiSecur transmitter and a receiver to obtain the encrypted packet and the 32-bit serial number. The interception of the one-time pairing process is specifically not required. Due to use of AES-128 with an initial static random value and static data vector (all of this static information is the same across different customers' installations), the attacker can easily derive the utilized encryption key and decrypt the intercepted packet. The key can be verified by decrypting the intercepted packet and checking for known plaintext. Subsequently, an attacker can create arbitrary radio frames with the correct encryption key to control BiSecur garage and entrance gate operators and possibly other BiSecur systems as well (\"wireless cloning\"). To conduct the attack, a low cost Software Defined Radio (SDR) is sufficient. This affects Hoermann Hand Transmitter HS5-868-BS, HSE1-868-BS, and HSE2-868-BS devices.","vulnerable_configuration":[{"id":"cpe:2.3:o:hoermann:hs5-868-bs_firmware:-:*:*:*:*:*:*:*","title":"cpe:2.3:o:hoermann:hs5-868-bs_firmware:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:hoermann:hs5-868-bs:-:*:*:*:*:*:*:*","title":"cpe:2.3:h:hoermann:hs5-868-bs:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:hoermann:hse2-868-bs_firmware:-:*:*:*:*:*:*:*","title":"cpe:2.3:o:hoermann:hse2-868-bs_firmware:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:hoermann:hse2-868-bs:-:*:*:*:*:*:*:*","title":"cpe:2.3:h:hoermann:hse2-868-bs:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:hoermann:hse1-868-bs_firmware:-:*:*:*:*:*:*:*","title":"cpe:2.3:o:hoermann:hse1-868-bs_firmware:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:hoermann:hse1-868-bs:-:*:*:*:*:*:*:*","title":"cpe:2.3:h:hoermann:hse1-868-bs:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:hoermann:hs5-868-bs_firmware:-:*:*:*:*:*:*:*","cpe:2.3:o:hoermann:hse2-868-bs_firmware:-:*:*:*:*:*:*:*","cpe:2.3:o:hoermann:hse1-868-bs_firmware:-:*:*:*:*:*:*:*"]}