{"Modified":"2020-11-09T14:17:00","Published":"2017-05-12T20:29:00","access":{"authentication":"NONE","complexity":"LOW","vector":"LOCAL"},"assigner":"cve@mitre.org","capec":[],"cvss":4.6,"cvss-time":"2020-11-09T14:17:00","cvss-vector":"AV:L/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-416","id":"CVE-2017-8246","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-11-09T14:17:00","references":["https://source.android.com/security/bulletin/2017-07-01","https://www.codeaurora.org/use-after-free-alsa-pcm-playback-kernel-module-cve-2017-8246"],"refmap":{"confirm":["https://source.android.com/security/bulletin/2017-07-01","https://www.codeaurora.org/use-after-free-alsa-pcm-playback-kernel-module-cve-2017-8246"]},"summary":"In function msm_pcm_playback_close() in all Android releases from CAF using the Linux kernel, prtd is assigned substream->runtime->private_data. Later, prtd is freed. However, prtd is not sanitized and set to NULL, resulting in a dangling pointer. There are other functions that access the same memory (substream->runtime->private_data) with a NULL check, such as msm_pcm_volume_ctl_put(), which means this freed memory could be used.","vulnerable_configuration":[{"id":"cpe:2.3:o:google:android:-:*:*:*:*:*:*:*","title":"cpe:2.3:o:google:android:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:google:android:-:*:*:*:*:*:*:*"]}