{"Modified":"2020-12-23T18:29:00","Published":"2017-08-30T19:29:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"589","name":"DNS Blocking","prerequisites":"This attack requires the ability to conduct deep packet inspection with an In-Path device that can drop the targeted traffic and/or connection.","related_weakness":["300"],"solutions":"Use a .onion domain with Tor support","summary":"An adversary intercepts traffic and intentionally drops DNS requests based on content in the request. In this way, the adversary can deny the availability of specific services or content to the user even if the IP address is changed."},{"id":"94","name":"Man in the Middle Attack","prerequisites":"There are two components communicating with each other. An attacker is able to identify the nature and mechanism of communication between the two target components. An attacker can eavesdrop on the communication between the target components. Strong mutual authentication is not used between the two target components yielding opportunity for attacker interposition. The communication occurs in clear (not encrypted) or with insufficient and spoofable encryption.","related_weakness":["287","290","294","300","593","724"],"solutions":"Get your Public Key signed by a Certificate Authority Encrypt your communication using cryptography (SSL,...) Use Strong mutual authentication to always fully authenticate both ends of any communications channel. Exchange public keys using a secure channel","summary":"This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed on to the other component as if it was never observed. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identify between two components. MITM attacks differ from sniffing attacks since they often modify the communications prior to delivering it to the intended recipient. These attacks also differ from interception attacks since they may forward the sender's original unmodified data, after copying it, instead of keeping it for themselves."},{"id":"57","name":"Utilizing REST's Trust in the System Resource to Obtain Sensitive Data","prerequisites":"Opportunity to intercept must exist beyond the point where SSL is terminated. The attacker must be able to insert a listener actively (proxying the communication) or passively (sniffing the communication) in the client-server communication path.","related_weakness":["287","300","693","724"],"solutions":"Implementation: Implement message level security such as HMAC in the HTTP communication Design: Utilize defense in depth, do not rely on a single security mechanism like SSL Design: Enforce principle of least privilege","summary":"This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated. Rest applications premise is that they leverage existing infrastructure to deliver web services functionality. An example of this is a Rest application that uses HTTP Get methods and receives a HTTP response with an XML document. These Rest style web services are deployed on existing infrastructure such as Apache and IIS web servers with no SOAP stack required. Unfortunately from a security standpoint, there frequently is no interoperable identity security mechanism deployed, so Rest developers often fall back to SSL to deliver security. In large data centers, SSL is typically terminated at the edge of the network - at the firewall, load balancer, or router. Once the SSL is terminated the HTTP request is in the clear (unless developers have hashed or encrypted the values, but this is rare). The attacker can utilize a sniffer such as Wireshark to snapshot the credentials, such as username and password that are passed in the clear once SSL is terminated. Once the attacker gathers these credentials, they can submit requests to the web service provider just as authorized user do. There is not typically an authentication on the client side, beyond what is passed in the request itself so once this is compromised, then this is generally sufficient to compromise the service's authentication scheme."},{"id":"615","name":"Evil Twin Wi-Fi Attack","prerequisites":"None","related_weakness":["300"],"solutions":"Commercial defensive technology that monitors for rogue Wi-Fi access points, man-in-the-middle attacks, and anomalous activity with the mobile device baseband radios.","summary":"Adversaries install Wi-Fi equipment that acts as a legitimate Wi-Fi network access point. When a device connects to this access point, Wi-Fi data traffic is intercepted, captured, and analyzed. This also allows the adversary to act as a \"man-in-the-middle\" for all communications."},{"id":"612","name":"WiFi MAC Address Tracking","prerequisites":"None","related_weakness":["201","300"],"solutions":"Automatic randomization of WiFi MAC addresses Frequent changing of handset and retransmission device","summary":"In this attack scenario, the attacker passively listens for WiFi messages and logs the associated Media Access Control (MAC) addresses. These addresses are intended to be unique to each wireless device (although they can be configured and changed by software). Once the attacker is able to associate a MAC address with a particular user or set of users (for example, when attending a public event), the attacker can then scan for that MAC address to track that user in the future."},{"id":"466","name":"Leveraging Active Man in the Middle Attacks to Bypass Same Origin Policy","prerequisites":"The victim and the attacker are both in an environment where an active man in the middle attack is possible (e.g., public WIFI hot spot)The victim visits at least one website that does not use TLS / SSL","related_weakness":["300"],"solutions":"Design: Trust level separation for privileged / non privileged interactions (e.g., two different browsers, two different users, two different operating systems, two different virtual machines)","summary":"An attacker leverages a man in the middle attack in order to bypass the same origin policy protection in the victim's browser. This active man in the middle attack could be launched, for instance, when the victim is connected to a public WIFI hot spot. An attacker is able to intercept requests and responses between the victim's browser and some non-sensitive website that does not use TLS. For instance, the victim may be checking flight or weather information. When an attacker intercepts a response bound to the victim, an attacker adds an iFrame (which is possibly invisible) to the response referencing some domain with sensitive functionality and forwards the response to the victim. The victim's browser than automatically initiates an unauthorized request to the site with sensitive functionality. The same origin policy would prevent making these requests to a site other than the one from which the Java Script came, but the attacker once again uses active man in the middle to intercept these automatic requests and redirect them to the domain / service with sensitive functionality. Any persistent cookies that the victim has in his or her browser would be used for these unauthorized requests. The attacker thus actively directs the victim to a site with sensitive functionality. When the site with sensitive functionality responds back to the victim's request, an active man in the middle attacker intercepts these responses, injects his or her own malicious Java Script into these responses, and forwards to the victim's browser. In the victim's browser, that Java Script executes under the restrictions of the site with sensitive functionality and can essentially be used to continue to interact with the sensitive site. So an attacker can execute scripts within the victim's browser on any domains the attacker desires. The attacker is able to use this technique to steal cookies from the victim's browser for whatever site the attacker wants. This applies to both persistent cookies and HTTP only cookies (unlike traditional XSS attacks). An attacker is also able to use this technique to steal authentication credentials for sites that only encrypt the login form, but do not require a secure channel for the initial request to get to the page with the login form. Further the attacker is also able to steal any autocompletion information. This attack pattern can also be used to enable session fixation and cache poisoning attacks. Additional attacks can be enabled as well."},{"id":"590","name":"IP Address Blocking","prerequisites":"This attack requires the ability to conduct deep packet inspection with an In-Path device that can drop the targeted traffic and/or connection.","related_weakness":["300"],"solutions":"Have a large pool of backup IPs built into the application and support proxy capability in the application.","summary":"An adversary performing this type of attack drops packets destined for a target IP address. The aim is to prevent access to the service hosted at the target IP address."},{"id":"613","name":"WiFi SSID Tracking","prerequisites":"None","related_weakness":["201","300"],"solutions":"Do not enable the feature of \"Hidden SSIDs\" (also known as \"Network Cloaking\") â€“ this option disables the usual broadcasting of the SSID by the access point, but forces the mobile handset to send requests on all supported radio channels which contains the SSID. The result is that tracking of the mobile device becomes easier since it is transmitting the SSID more frequently. Frequently change the SSID to new and unrelated values","summary":"In this attack scenario, the attacker passively listens for WiFi management frame messages containing the Service Set Identifier (SSID) for the WiFi network. These messages are frequently transmitted by WiFi access points (e.g., the retransmission device) as well as by clients that are accessing the network (e.g., the handset/mobile device). Once the attacker is able to associate an SSID with a particular user or set of users (for example, when attending a public event), the attacker can then scan for this SSID to track that user in the future."}],"cvss":5.8,"cvss-time":"2020-12-23T18:29:00","cvss-vector":"AV:N/AC:M/Au:N/C:P/I:P/A:N","cwe":"CWE-300","id":"CVE-2017-12735","impact":{"availability":"NONE","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-12-23T18:29:00","references":["http://www.securityfocus.com/bid/100561","https://cert-portal.siemens.com/productcert/pdf/ssa-087240.pdf"],"refmap":{"bid":["100561"],"misc":["https://cert-portal.siemens.com/productcert/pdf/ssa-087240.pdf"]},"summary":"A vulnerability has been identified in LOGO! 8 BM (incl. SIPLUS variants) (All versions < V8.3). An attacker who performs a Man-in-the-Middle attack between the LOGO! BM and other devices could potentially decrypt and modify network traffic.","vulnerable_configuration":[{"id":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:-:*:*:*:*:*:*:*","title":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.01:*:*:*:*:*:*:*","title":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.01:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.03:*:*:*:*:*:*:*","title":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.03:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.04:*:*:*:*:*:*:*","title":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.04:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.01:*:*:*:*:*:*:*","title":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.01:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.02:*:*:*:*:*:*:*","title":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.02:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.03:*:*:*:*:*:*:*","title":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.03:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.04:*:*:*:*:*:*:*","title":"cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.04:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:siemens:logo\\!:12\\/24rce:*:*:*:*:*:*:*","title":"cpe:2.3:h:siemens:logo\\!:12\\/24rce:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:siemens:logo\\!:24ce:*:*:*:*:*:*:*","title":"cpe:2.3:h:siemens:logo\\!:24ce:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:siemens:logo\\!:24rce:*:*:*:*:*:*:*","title":"cpe:2.3:h:siemens:logo\\!:24rce:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:siemens:logo\\!:230rce:*:*:*:*:*:*:*","title":"cpe:2.3:h:siemens:logo\\!:230rce:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:siemens:logo\\!_8_bm_firmware:-:*:*:*:*:*:*:*","cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.01:*:*:*:*:*:*:*","cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.03:*:*:*:*:*:*:*","cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.81.04:*:*:*:*:*:*:*","cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.01:*:*:*:*:*:*:*","cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.02:*:*:*:*:*:*:*","cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.03:*:*:*:*:*:*:*","cpe:2.3:o:siemens:logo\\!_8_bm_firmware:1.82.04:*:*:*:*:*:*:*"]}