{"Modified":"2019-10-03T00:03:00","Published":"2017-04-17T16:59:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"495","name":"UDP Fragmentation","prerequisites":"This type of an attack requires the attacker to be able to generate fragmented IP traffic containing crafted data.","related_weakness":["404","770"],"solutions":"This attack may be mitigated by changing default cache sizes to be larger at the OS level. Additionally rules can be enforced to prune the cache with shorter timeouts for packet reassembly as the cache nears capacity.","summary":"An attacker may execute a UDP Fragmentation attack against a target server in an attempt to consume resources such as bandwidth and CPU. IP fragmentation occurs when an IP datagram is larger than the MTU of the route the datagram has to traverse. Typically the attacker will use large UDP packets over 1500 bytes of data which forces fragmentation as ethernet MTU is 1500 bytes. This attack is a variation on a typical UDP flood but it enables more network bandwidth to be consumed with fewer packets. Additionally it has the potential to consume server CPU resources and fill memory buffers associated with the processing and reassembling of fragmented packets."},{"id":"130","name":"Excessive Allocation","prerequisites":"The target must accept service requests from the attacker and the adversary must be able to control the resource allocation associated with this request to be in excess of the normal allocation. The latter is usually accomplished through the presence of a bug on the target that allows the adversary to manipulate variables used in the allocation.","related_weakness":["404","770"],"solutions":"Limit the amount of resources that are accessible to unprivileged users. Assume all input is malicious. Consider all potentially relevant properties when validating input. Consider uniformly throttling all requests in order to make it more difficult to consume resources more quickly than they can again be freed. Use resource-limiting settings, if possible.","summary":"An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources. This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request."},{"id":"494","name":"TCP Fragmentation","prerequisites":"This type of an attack requires the target system to be running a vulnerable implementation of IP, and the attacker needs to ability to send TCP packets of arbitrary size with crafted data.","related_weakness":["404","770"],"solutions":"This attack may be mitigated by enforcing rules at the router following the guidance of RFC1858. The essential part of the guidance is creating the following rule \"IF FO=1 and PROTOCOL=TCP then DROP PACKET\" as this mitigated both tiny fragment and overlapping fragment attacks in IPv4. In IPv6 overlapping(RFC5722) additional steps may be required such as deep packet inspection. The delayed fragments may be mitigated by enforcing a timeout on the transmission to receive all packets by a certain time since the first packet is received. According to RFC2460 IPv6 implementations should enforce a rule to discard all fragments if the fragments are not ALL received within 60 seconds of the FIRST arriving fragment.","summary":"An attacker may execute a TCP Fragmentation attack against a target with the intention of avoiding filtering rules. IP fragmentation occurs when an IP datagram is larger than the MTU of the route the datagram has to traverse. The attacker attempts to fragment the TCP packet such that the headers flag field is pushed into the second fragment which typically is not filtered. This behavior defeats some IPS and firewall filters who typically check the FLAGS in the header of the first packet since dropping this packet prevents the following fragments from being processed and assembled. Another variation is overlapping fragments thus that an innocuous first segment passes the filter and the second segment overwrites the TCP header data with the true payload which is malicious in nature. The malicious payload manipulated properly may lead to a DoS due to resource consumption or kernel crash. Additionally the fragmentation could be used in conjunction with sending fragments at a rate slightly slower than the timeout to cause a DoS condition by forcing resources that assemble the packet to wait an inordinate amount of time to complete the task. The fragmentation identification numbers could also be duplicated very easily as there are only 16 bits in IPv4 so only 65536 packets are needed."},{"id":"131","name":"Resource Leak Exposure","prerequisites":"The target must have a resource leak that the adversary can repeatedly trigger.","related_weakness":["404"],"solutions":"If possible, leverage coding language(s) that do not allow this weakness to occur (e.g., Java, Ruby, and Python all perform automatic garbage collection that releases memory for objects that have been deallocated). Memory should always be allocated/freed using matching functions (e.g., malloc/free, new/delete, etc.) Implement best practices with respect to memory management, including the freeing of all allocated resources at all exit points and ensuring consistency with how and where memory is freed in a function.","summary":"An adversary utilizes a resource leak on the target to deplete the quantity of the resource available to service legitimate requests. Resource leaks most often come in the form of memory leaks where memory is allocated but never released after it has served its purpose, however, theoretically, any other resource that can be reserved can be targeted if the target fails to release the reservation when the reserved resource block is no longer needed. In this attack, the adversary determines what activity results in leaked resources and then triggers that activity on the target. Since some leaks may be small, this may require a large number of requests by the adversary. However, this attack differs from a flooding attack in that the rate of requests is generally not significant. This is because the lost resources due to the leak accumulate until the target is reset, usually by restarting it. Thus, a resource-poor adversary who would be unable to flood the target can still utilize this attack. Resource depletion through leak differs from resource depletion through allocation in that, in the former, the adversary may not be able to control the size of each leaked allocation, but instead allows the leak to accumulate until it is large enough to affect the target's performance. When depleting resources through allocation, the allocated resource may eventually be released by the target so the attack relies on making sure that the allocation size itself is prohibitive of normal operations by the target."},{"id":"125","name":"Flooding","prerequisites":"Any target that services requests is vulnerable to this attack on some level of scale.","related_weakness":["404","770"],"solutions":"Ensure that protocols have specific limits of scale configured. Specify expectations for capabilities and dictate which behaviors are acceptable when resource allocation reaches limits. Uniformly throttle all requests in order to make it more difficult to consume resources more quickly than they can again be freed.","summary":"An adversary consumes the resources of a target by rapidly engaging in a large number of interactions with the target. This type of attack generally exposes a weakness in rate limiting or flow. When successful this attack prevents legitimate users from accessing the service and can cause the target to crash. This attack differs from resource depletion through leaks or allocations in that the latter attacks do not rely on the volume of requests made to the target but instead focus on manipulation of the target's operations. The key factor in a flooding attack is the number of requests the adversary can make in a given period of time. The greater this number, the more likely an attack is to succeed against a given target."},{"id":"496","name":"ICMP Fragmentation","prerequisites":"This type of an attack requires the target system to be running a vulnerable implementation of IP, and the attacker needs to ability to send arbitrary sized ICMP packets to the target.","related_weakness":["404","770"],"solutions":"This attack may be mitigated through egress filtering based on ICMP payload so a network is a \"good neighbor\" to other networks. Bad IP implementations become patched, so using the proper version of a browser or OS is recommended.","summary":"An attacker may execute a ICMP Fragmentation attack against a target with the intention of consuming resources or causing a crash. The attacker crafts a large number of identical fragmented IP packets containing a portion of a fragmented ICMP message. The attacker these sends these messages to a target host which causes the host to become non-responsive. Another vector may be sending a fragmented ICMP message to a target host with incorrect sizes in the header which causes the host to hang."}],"cvss":5,"cvss-time":"2019-10-03T00:03:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:N/A:P","cwe":"CWE-404","id":"CVE-2017-5650","impact":{"availability":"PARTIAL","confidentiality":"NONE","integrity":"NONE"},"last-modified":"2019-10-03T00:03:00","references":["http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html","http://www.securityfocus.com/bid/97531","http://www.securitytracker.com/id/1038217","https://lists.apache.org/thread.html/343558d982879bf88ec20dbf707f8c11255f8e219e81d45c4f8d0551@%3Cdev.tomcat.apache.org%3E","https://lists.apache.org/thread.html/6af47120905aa7d8fe12f42e8ff2284fb338ba141d3b77b8c7cb61b3@%3Cdev.tomcat.apache.org%3E","https://lists.apache.org/thread.html/88855876c33f2f9c532ffb75bfee570ccf0b17ffa77493745af9a17a@%3Cdev.tomcat.apache.org%3E","https://lists.apache.org/thread.html/b5e3f51d28cd5d9b1809f56594f2cf63dcd6a90429e16ea9f83bbedc@%3Cdev.tomcat.apache.org%3E","https://lists.apache.org/thread.html/d24303fb095db072740d8154b0f0db3f2b8f67bc91a0562dbe89c738@%3Cannounce.tomcat.apache.org%3E","https://lists.apache.org/thread.html/eb6efa8d59c45a7a9eff94c4b925467d3b3fec8ba7697f3daa314b04@%3Cdev.tomcat.apache.org%3E","https://lists.apache.org/thread.html/r3bbb800a816d0a51eccc5a228c58736960a9fffafa581a225834d97d@%3Cdev.tomcat.apache.org%3E","https://lists.apache.org/thread.html/r48c1444845fe15a823e1374674bfc297d5008a5453788099ea14caf0@%3Cdev.tomcat.apache.org%3E","https://security.gentoo.org/glsa/201705-09","https://security.netapp.com/advisory/ntap-20180614-0001/"],"refmap":{"bid":["97531"],"confirm":["http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html","https://security.netapp.com/advisory/ntap-20180614-0001/"],"gentoo":["GLSA-201705-09"],"mlist":["[tomcat-dev] 20190319 svn commit: r1855831 [24/30] - in /tomcat/site/trunk: ./ docs/ xdocs/","[tomcat-dev] 20190319 svn commit: r1855831 [25/30] - in /tomcat/site/trunk: ./ docs/ xdocs/","[tomcat-dev] 20190325 svn commit: r1856174 [24/29] - in /tomcat/site/trunk: docs/ xdocs/ xdocs/stylesheets/","[tomcat-dev] 20190413 svn commit: r1857494 [17/20] - in /tomcat/site/trunk: ./ docs/ xdocs/","[tomcat-dev] 20190415 svn commit: r1857582 [19/22] - in /tomcat/site/trunk: docs/ xdocs/stylesheets/","[tomcat-dev] 20200203 svn commit: r1873527 [25/30] - /tomcat/site/trunk/docs/","[tomcat-dev] 20200213 svn commit: r1873980 [29/34] - /tomcat/site/trunk/docs/","[users] 20170410 [SECURITY] CVE-2017-5650 Apache Tomcat Denial of Service"],"sectrack":["1038217"]},"summary":"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.","vulnerable_configuration":[{"id":"cpe:2.3:a:apache:tomcat:8.5.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:8.5.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:8.5.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m1:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m10:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m10:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m11:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m11:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m12:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m12:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m13:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m13:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m14:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m14:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m15:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m15:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m16:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m16:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m17:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m17:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m18:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m18:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m2:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m3:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m3:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m4:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m4:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m5:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m5:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m6:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m6:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m7:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m7:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m8:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m8:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:tomcat:9.0.0:m9:*:*:*:*:*:*","title":"cpe:2.3:a:apache:tomcat:9.0.0:m9:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:apache:tomcat:8.5.0:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.2:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.3:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.4:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.5:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.6:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.7:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.8:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.9:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.10:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.11:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:8.5.12:*:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m1:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m10:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m11:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m12:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m13:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m14:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m15:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m16:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m17:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m18:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m2:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m3:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m4:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m5:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m6:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m7:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m8:*:*:*:*:*:*","cpe:2.3:a:apache:tomcat:9.0.0:m9:*:*:*:*:*:*"]}