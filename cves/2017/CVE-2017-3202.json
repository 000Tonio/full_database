{"Modified":"2019-10-09T23:27:00","Published":"2018-06-11T17:29:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":7.5,"cvss-time":"2019-10-09T23:27:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2017-3202","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2019-10-09T23:27:00","references":["http://www.securityfocus.com/bid/97380","http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution","https://codewhitesec.blogspot.com/2017/04/amf.html","https://www.kb.cert.org/vuls/id/307983"],"refmap":{"bid":["97380"],"cert-vn":["VU#307983"],"misc":["http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution","https://codewhitesec.blogspot.com/2017/04/amf.html"]},"summary":"The Java implementation of AMF3 deserializers used in Flamingo amf-serializer by Exadel, version 2.2.0, may allow instantiation of arbitrary classes via their public parameter-less constructor and subsequently call arbitrary Java Beans setter methods. The ability to exploit this vulnerability depends on the availability of classes in the class path that make use of deserialization. A remote attacker with the ability to spoof or control information may be able to send serialized Java objects with pre-set properties that result in arbitrary code execution when deserialized.","vulnerable_configuration":[{"id":"cpe:2.3:a:exadel:flamingo:2.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:exadel:flamingo:2.2.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:exadel:flamingo:2.2.0:*:*:*:*:*:*:*"]}