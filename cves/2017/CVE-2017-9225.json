{"Modified":"2017-06-02T14:14:00","Published":"2017-05-24T15:29:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":7.5,"cvss-time":"2017-06-02T14:14:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-787","id":"CVE-2017-9225","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2017-06-02T14:14:00","references":["https://github.com/kkos/oniguruma/commit/166a6c3999bf06b4de0ab4ce6b088a468cc4029f","https://github.com/kkos/oniguruma/issues/56"],"refmap":{"confirm":["https://github.com/kkos/oniguruma/commit/166a6c3999bf06b4de0ab4ce6b088a468cc4029f","https://github.com/kkos/oniguruma/issues/56"]},"summary":"An issue was discovered in Oniguruma 6.2.0, as used in Oniguruma-mod in Ruby through 2.4.1 and mbstring in PHP through 7.1.5. A stack out-of-bounds write in onigenc_unicode_get_case_fold_codes_by_str() occurs during regular expression compilation. Code point 0xFFFFFFFF is not properly handled in unicode_unfold_key(). A malformed regular expression could result in 4 bytes being written off the end of a stack buffer of expand_case_fold_string() during the call to onigenc_unicode_get_case_fold_codes_by_str(), a typical stack buffer overflow.","vulnerable_configuration":[{"id":"cpe:2.3:a:oniguruma_project:oniguruma:6.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oniguruma_project:oniguruma:6.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:php:php:*:*:*:*:*:oniguruma-mod:*:*","title":"cpe:2.3:a:php:php:*:*:*:*:*:oniguruma-mod:*:*"},{"id":"cpe:2.3:a:ruby-lang:ruby:*:*:*:*:*:oniguruma-mod:*:*","title":"cpe:2.3:a:ruby-lang:ruby:*:*:*:*:*:oniguruma-mod:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:oniguruma_project:oniguruma:6.2.0:*:*:*:*:*:*:*","cpe:2.3:a:php:php:*:*:*:*:*:oniguruma-mod:*:*","cpe:2.3:a:ruby-lang:ruby:*:*:*:*:*:oniguruma-mod:*:*"]}