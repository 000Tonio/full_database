{"Modified":"2022-07-25T19:58:00","Published":"2022-07-18T00:15:00","access":{},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2021-41419","impact":{},"last-modified":"2022-07-25T19:58:00","references":["https://github.com/projectdiscovery/nuclei-templates/blob/master/iot/qvisdvr-deserialization-rce.yaml","https://gist.github.com/Meeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee/712ac36c8a08e2698e875169442a23a4","https://twitter.com/Me9187/status/1414904314368348163"],"summary":"QVIS NVR DVR before 2021-12-13 is vulnerable to Remote Code Execution via Java deserialization.","vulnerable_configuration":[{"id":"cpe:2.3:o:qvis:dvr_firmware:*:*:*:*:*:*:*:*","title":"cpe:2.3:o:qvis:dvr_firmware:*:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:qvis:dvr:-:*:*:*:*:*:*:*","title":"cpe:2.3:h:qvis:dvr:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:qvis:nvr_firmware:*:*:*:*:*:*:*:*","title":"cpe:2.3:o:qvis:nvr_firmware:*:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:qvis:nvr:-:*:*:*:*:*:*:*","title":"cpe:2.3:h:qvis:nvr:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:qvis:dvr_firmware:*:*:*:*:*:*:*:*","cpe:2.3:o:qvis:nvr_firmware:*:*:*:*:*:*:*:*"]}