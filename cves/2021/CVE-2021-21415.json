{"Modified":"2022-10-21T22:43:00","Published":"2021-04-29T17:15:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"security-advisories@github.com","capec":[],"cvss":6.8,"cvss-time":"2022-10-21T22:43:00","cvss-vector":"AV:N/AC:M/Au:N/C:P/I:P/A:P","cwe":"NVD-CWE-Other","id":"CVE-2021-21415","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2022-10-21T22:43:00","references":["https://marketplace.visualstudio.com/items?itemName=Prisma.prisma-insider","https://github.com/prisma/language-tools/pull/750","https://github.com/prisma/language-tools/security/advisories/GHSA-4rf9-43m7-x828","https://marketplace.visualstudio.com/items?itemName=Prisma.prisma"],"summary":"Prisma VS Code a VSCode extension for Prisma schema files. This is a Remote Code Execution Vulnerability that affects all versions of the Prisma VS Code extension older than 2.20.0. If a custom binary path for the Prisma format binary is set in VS Code Settings, for example by downloading a project that has a .vscode/settings.json file that sets a value for \"prismaFmtBinPath\". That custom binary is executed when auto-formatting is triggered by VS Code or when validation checks are triggered after each keypress on a *.prisma file. Fixed in versions 2.20.0 and 20.0.27. As a workaround users can either edit or delete the `.vscode/settings.json` file or check if the binary is malicious and delete it.","vulnerable_configuration":[{"id":"cpe:2.3:a:prisma:language-tools:*:*:*:*:*:visual_studio_code:*:*","title":"cpe:2.3:a:prisma:language-tools:*:*:*:*:*:visual_studio_code:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:prisma:language-tools:*:*:*:*:*:visual_studio_code:*:*"]}