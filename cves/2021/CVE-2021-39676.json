{"Modified":"2022-02-17T20:45:00","Published":"2022-02-11T18:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"LOCAL"},"assigner":"security@android.com","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":7.2,"cvss-time":"2022-02-17T20:45:00","cvss-vector":"AV:L/AC:L/Au:N/C:C/I:C/A:C","cwe":"CWE-502","id":"CVE-2021-39676","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2022-02-17T20:45:00","references":["https://source.android.com/security/bulletin/2022-02-01"],"summary":"In writeThrowable of AndroidFuture.java, there is a possible parcel serialization/deserialization mismatch due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-11Android ID: A-197228210","vulnerable_configuration":[{"id":"cpe:2.3:o:google:android:11.0:*:*:*:*:*:*:*","title":"cpe:2.3:o:google:android:11.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:google:android:11.0:*:*:*:*:*:*:*"]}