{"Modified":"2022-07-25T18:17:00","Published":"2021-11-04T20:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":5,"cvss-time":"2022-07-25T18:17:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:P/A:N","cwe":"NVD-CWE-noinfo","id":"CVE-2021-43396","impact":{"availability":"NONE","confidentiality":"NONE","integrity":"PARTIAL"},"last-modified":"2022-07-25T18:17:00","references":["https://sourceware.org/bugzilla/show_bug.cgi?id=28524","https://sourceware.org/git/?p=glibc.git;a=commit;h=ff012870b2c02a62598c04daa1e54632e020fd7d","https://blog.tuxcare.com/vulnerability/vulnerability-in-iconv-identified-by-tuxcare-team-cve-2021-43396","https://www.oracle.com/security-alerts/cpujul2022.html"],"summary":"** DISPUTED ** In iconvdata/iso-2022-jp-3.c in the GNU C Library (aka glibc) 2.34, remote attackers can force iconv() to emit a spurious '\\0' character via crafted ISO-2022-JP-3 data that is accompanied by an internal state reset. This may affect data integrity in certain iconv() use cases. NOTE: the vendor states \"the bug cannot be invoked through user input and requires iconv to be invoked with a NULL inbuf, which ought to require a separate application bug to do so unintentionally. Hence there's no security impact to the bug.\"","vulnerable_configuration":[{"id":"cpe:2.3:a:gnu:glibc:2.34:*:*:*:*:*:*:*","title":"cpe:2.3:a:gnu:glibc:2.34:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:gnu:glibc:2.34:*:*:*:*:*:*:*"]}