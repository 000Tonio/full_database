{"Modified":"2022-11-23T16:10:00","Published":"2022-02-14T19:15:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":4,"cvss-time":"2022-11-23T16:10:00","cvss-vector":"AV:N/AC:L/Au:S/C:P/I:N/A:N","cwe":"CWE-401","id":"CVE-2021-45346","impact":{"availability":"NONE","confidentiality":"PARTIAL","integrity":"NONE"},"last-modified":"2022-11-23T16:10:00","references":["https://github.com/guyinatuxedo/sqlite3_record_leaking","https://security.netapp.com/advisory/ntap-20220303-0001/","https://sqlite.org/forum/forumpost/53de8864ba114bf6","https://www.sqlite.org/cves.html#status_of_recent_sqlite_cves","https://sqlite.org/forum/forumpost/056d557c2f8c452ed5"],"summary":"** DISPUTED ** A Memory Leak vulnerability exists in SQLite Project SQLite3 3.35.1 and 3.37.0 via maliciously crafted SQL Queries (made via editing the Database File), it is possible to query a record, and leak subsequent bytes of memory that extend beyond the record, which could let a malicious user obtain sensitive information. NOTE: The developer disputes this as a vulnerability stating that If you give SQLite a corrupted database file and submit a query against the database, it might read parts of the database that you did not intend or expect.","vulnerable_configuration":[{"id":"cpe:2.3:a:sqlite:sqlite:3.35.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:sqlite:sqlite:3.35.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:sqlite:sqlite:3.37.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:sqlite:sqlite:3.37.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:netapp:ontap_select_deploy_administration_utility:-:*:*:*:*:*:*:*","title":"cpe:2.3:a:netapp:ontap_select_deploy_administration_utility:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:sqlite:sqlite:3.35.1:*:*:*:*:*:*:*","cpe:2.3:a:sqlite:sqlite:3.37.0:*:*:*:*:*:*:*","cpe:2.3:a:netapp:ontap_select_deploy_administration_utility:-:*:*:*:*:*:*:*"]}