{"Modified":"2022-07-25T18:15:00","Published":"2021-07-13T08:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"security@apache.org","capec":[{"id":"229","name":"XML Attribute Blowup","prerequisites":"The server accepts XML input and is using a parser with a runtime longer than O(n) for the insertion of a new attribute in the data container.(examples are .NET framework 1.0 and 1.1)","related_weakness":["770"],"solutions":"This attack may be mitigated completely by using a parser that is not using a vulnerable container. Mitigation may also limit the number of attributes per XML element.","summary":"This attack exploits certain XML parsers which manage data in an inefficient manner. The attacker crafts an XML document with many attributes in the same XML node. In a vulnerable parser, this results in a denial of service condition owhere CPU resources are exhausted because of the parsing algorithm."},{"id":"469","name":"HTTP DoS","prerequisites":"HTTP protocol is usedWeb server used is vulnerable to denial of service via HTTP flooding","related_weakness":["770","772"],"solutions":"Design: Use load balancing mechanisms","summary":"An attacker performs flooding at the HTTP level to bring down only a particular web application rather than anything listening on a TCP/IP connection. This denial of service attack requires substantially fewer packets to be sent which makes DoS harder to detect. This is an equivalent of SYN flood in HTTP. The idea is to keep the HTTP session alive indefinitely and then repeat that hundreds of times. This attack targets resource depletion weaknesses in web server software. The web server will wait to attacker's responses on the initiated HTTP sessions while the connection threads are being exhausted."},{"id":"488","name":"HTTP Flood","prerequisites":"This type of an attack requires the ability to generate a large amount of HTTP traffic to send to a target server.","related_weakness":["770"],"solutions":"To mitigate this type of an attack, an organization can monitor the typical traffic flow. When spikes in usage occur, filters could examine traffic for indicators of bad behavior with respect to the web servers, and then create firewall rules to deny the malicious IP addresses. These patterns in the filter could be a combination of trained behavior, knowledge of standards as they apply to the web server, known patterns, or anomaly detection. Firewalling source IPs works since the HTTP is sent using TCP so the source IP can't be spoofed; if the source IP is spoofed is, then it's not legitimate traffic. Special care should be taken care with rule sets to ensure low false positive rates along with a method at the application layer to allow a valid user to begin using the service again. Another possible solution is using 3rd party providers as they have experts, knowledge, experience, and resources to deal with the attack and mitigate it before hand or while it occurs. The best mitigation is preparation before an attack, but there is no bulletproof solution as with ample resources a brute force attack may succeed.","summary":"An adversary may execute a flooding attack using the HTTP protocol with the intent to deny legitimate users access to a service by consuming resources at the application layer such as web services and their infrastructure. These attacks use legitimate session-based HTTP GET requests designed to consume large amounts of a server's resources. Since these are legitimate sessions this attack is very difficult to detect."},{"id":"487","name":"ICMP Flood","prerequisites":"This type of an attack requires the ability to generate a large amount of ICMP traffic to send to the target server.","related_weakness":["770"],"solutions":"To mitigate this type of an attack, an organization can enable ingress filtering. Additionally modifications to BGP like black hole routing and sinkhole routing(RFC3882) help mitigate the spoofed source IP nature of these attacks.","summary":"An adversary may execute a flooding attack using the ICMP protocol with the intent to deny legitimate users access to a service by consuming the available network bandwidth. A typical attack involves a victim server receiving ICMP packets at a high rate from a wide range of source addresses. Additionally, due to the session-less nature of the ICMP protocol, the source of a packet is easily spoofed making it difficult to find the source of the attack."},{"id":"493","name":"SOAP Array Blowup","prerequisites":"This type of an attack requires the attacker to know the endpoint of the web service, and be able to reach the endpoint with a malicious SOAP message.","related_weakness":["770"],"solutions":"Enforce strict schema validation. The schema should enforce a maximum number of array elements. If the number of maximum array elements can't be limited another validation method should be used. One such method could be comparing the declared number of items in the array with the existing number of elements of the array. If these numbers don't match drop the SOAP packet at the web service layer.","summary":"An adversary may execute an attack on a web service that uses SOAP messages in communication. By sending a very large SOAP array declaration to the web service, the attacker forces the web service to allocate space for the array elements before they are parsed by the XML parser. The attacker message is typically small in size containing a large array declaration of say 1,000,000 elements and a couple of array elements. This attack targets exhaustion of the memory resources of the web service."},{"id":"528","name":"XML Flood","prerequisites":"The target must receive and process XML transactions. An adverssary must possess the ability to generate a large amount of XML based messages to send to the target service.","related_weakness":["770"],"solutions":"Design: Build throttling mechanism into the resource allocation. Provide for a timeout mechanism for allocated resources whose transaction does not complete within a specified interval. Implementation: Provide for network flow control and traffic shaping to control access to the resources.","summary":"An adversary may execute a flooding attack using XML messages with the intent to deny legitimate users access to a web service. These attacks are accomplished by sending a large number of XML based requests and letting the service attempt to parse each one. In many cases this type of an attack will result in a XML Denial of Service (XDoS) due to an application becoming unstable, freezing, or crashing. XDoS is most closely associated with web services, SOAP, and Rest, because remote service requesters can post malicious XML payloads to the service provider designed to exhaust the service provider's memory, CPU, and/or disk space. The main weakness in XDoS is that the service provider generally must inspect, parse, and validate the XML messages to determine routing, workflow, security considerations, and so on. It is exactly these inspection, parsing, and validation routines that XDoS targets. This attack exploits the loosely coupled nature of web services, where the service provider has little to no control over the service requester and any messages the service requester sends."},{"id":"495","name":"UDP Fragmentation","prerequisites":"This type of an attack requires the attacker to be able to generate fragmented IP traffic containing crafted data.","related_weakness":["404","770"],"solutions":"This attack may be mitigated by changing default cache sizes to be larger at the OS level. Additionally rules can be enforced to prune the cache with shorter timeouts for packet reassembly as the cache nears capacity.","summary":"An attacker may execute a UDP Fragmentation attack against a target server in an attempt to consume resources such as bandwidth and CPU. IP fragmentation occurs when an IP datagram is larger than the MTU of the route the datagram has to traverse. Typically the attacker will use large UDP packets over 1500 bytes of data which forces fragmentation as ethernet MTU is 1500 bytes. This attack is a variation on a typical UDP flood but it enables more network bandwidth to be consumed with fewer packets. Additionally it has the potential to consume server CPU resources and fill memory buffers associated with the processing and reassembling of fragmented packets."},{"id":"482","name":"TCP Flood","prerequisites":"This type of an attack requires the ability to generate a large amount of TCP traffic to send to the target port of a functioning server.","related_weakness":["770"],"solutions":"To mitigate this type of an attack, an organization can monitor incoming packets and look for patterns in the TCP traffic to determine if the network is under an attack. The potential target may implement a rate limit on TCP SYN messages which would provide limited capabilities while under attack.","summary":"An adversary may execute a flooding attack using the TCP protocol with the intent to deny legitimate users access to a service. These attacks exploit the weakness within the TCP protocol where there is some state information for the connection the server needs to maintain."},{"id":"490","name":"Amplification","prerequisites":"This type of an attack requires the existence of a 3rd party service that generates a response that is significantly larger than the request that triggers it.","related_weakness":["770"],"solutions":"To mitigate this type of an attack, an organization can attempt to identify the 3rd party services being used in an active attack and blocking them until the attack ends. This can be accomplished by filtering traffic for suspicious message patterns such as a spike in traffic where each response contains the same large block of data. Care should be taken to prevent false positive rates so legitimate traffic isn't blocked.","summary":"An adversary may execute an amplification where the size of a response is far greater than that of the request that generates it. The goal of this attack is to use a relatively few resources to create a large amount of traffic against a target server. To execute this attack, an adversary send a request to a 3rd party service, spoofing the source address to be that of the target server. The larger response that is generated by the 3rd party service is then sent to the target server. By sending a large number of initial requests, the adversary can generate a tremendous amount of traffic directed at the target. The greater the discrepancy in size between the initial request and the final payload delivered to the target increased the effectiveness of this attack."},{"id":"130","name":"Excessive Allocation","prerequisites":"The target must accept service requests from the attacker and the adversary must be able to control the resource allocation associated with this request to be in excess of the normal allocation. The latter is usually accomplished through the presence of a bug on the target that allows the adversary to manipulate variables used in the allocation.","related_weakness":["404","770"],"solutions":"Limit the amount of resources that are accessible to unprivileged users. Assume all input is malicious. Consider all potentially relevant properties when validating input. Consider uniformly throttling all requests in order to make it more difficult to consume resources more quickly than they can again be freed. Use resource-limiting settings, if possible.","summary":"An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources. This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request."},{"id":"486","name":"UDP Flood","prerequisites":"This type of an attack requires the ability to generate a large amount of UDP traffic to send to the desired port of a target service using UDP.","related_weakness":["770"],"solutions":"To mitigate this type of an attack, modern firewalls drop UDP traffic destined for closed ports, and unsolicited UDP reply packets. A variety of other countermeasures such as universal reverse path forwarding and remote triggered black holing(RFC3704) along with modifications to BGP like black hole routing and sinkhole routing(RFC3882) help mitigate the spoofed source IP nature of these attacks.","summary":"An adversary may execute a flooding attack using the UDP protocol with the intent to deny legitimate users access to a service by consuming the available network bandwidth. Additionally, firewalls often open a port for each UDP connection destined for a service with an open UDP port, meaning the firewalls in essence save the connection state thus the high packet nature of a UDP flood can also overwhelm resources allocated to the firewall. UDP attacks can also target services like DNS or VoIP which utilize these protocols. Additionally, due to the session-less nature of the UDP protocol, the source of a packet is easily spoofed making it difficult to find the source of the attack."},{"id":"197","name":"XML Entity Expansion","prerequisites":"This type of attack requires that the target must receive XML input but either fail to provide an upper limit for entity expansion or provide a limit that is so large that it does not preclude significant resource consumption.","related_weakness":["400","770"],"solutions":"Design: Use libraries and templates that minimize unfiltered input. Use methods that limit entity expansion and throw exceptions on attempted entity expansion. Implementation: Disable altogether the use of inline DTD schemas in your XML parsing objects. If must use DTD, normalize, filter and white list and parse with methods and routines that will detect entity expansion from untrusted sources.","summary":"An attacker submits an XML document to a target application where the XML document uses nested entity expansion to produce an excessively large output XML. XML allows the definition of macro-like structures that can be used to simplify the creation of complex structures. However, this capability can be abused to create excessive demands on a processor's CPU and memory. A small number of nested expansions can result in an exponential growth in demands on memory."},{"id":"491","name":"XML Quadratic Expansion","prerequisites":"This type of attack requires a server that accepts XML data and parses the data.","related_weakness":["770"],"solutions":"Implementation: Disable altogether the use of inline DTD schemas in your XML parsing objects. If must use DTD, normalize, filter and white list and parse with methods and routines that will detect entity expansion from untrusted sources.","summary":"An adversary exploits a few properties of XML(substitution entities and inline DTDs) to cause a denial of service situation due to excessive memory being allocated to fully expand the XML. The result of this denial of service could cause the application to freeze or crash."},{"id":"494","name":"TCP Fragmentation","prerequisites":"This type of an attack requires the target system to be running a vulnerable implementation of IP, and the attacker needs to ability to send TCP packets of arbitrary size with crafted data.","related_weakness":["404","770"],"solutions":"This attack may be mitigated by enforcing rules at the router following the guidance of RFC1858. The essential part of the guidance is creating the following rule \"IF FO=1 and PROTOCOL=TCP then DROP PACKET\" as this mitigated both tiny fragment and overlapping fragment attacks in IPv4. In IPv6 overlapping(RFC5722) additional steps may be required such as deep packet inspection. The delayed fragments may be mitigated by enforcing a timeout on the transmission to receive all packets by a certain time since the first packet is received. According to RFC2460 IPv6 implementations should enforce a rule to discard all fragments if the fragments are not ALL received within 60 seconds of the FIRST arriving fragment.","summary":"An attacker may execute a TCP Fragmentation attack against a target with the intention of avoiding filtering rules. IP fragmentation occurs when an IP datagram is larger than the MTU of the route the datagram has to traverse. The attacker attempts to fragment the TCP packet such that the headers flag field is pushed into the second fragment which typically is not filtered. This behavior defeats some IPS and firewall filters who typically check the FLAGS in the header of the first packet since dropping this packet prevents the following fragments from being processed and assembled. Another variation is overlapping fragments thus that an innocuous first segment passes the filter and the second segment overwrites the TCP header data with the true payload which is malicious in nature. The malicious payload manipulated properly may lead to a DoS due to resource consumption or kernel crash. Additionally the fragmentation could be used in conjunction with sending fragments at a rate slightly slower than the timeout to cause a DoS condition by forcing resources that assemble the packet to wait an inordinate amount of time to complete the task. The fragmentation identification numbers could also be duplicated very easily as there are only 16 bits in IPv4 so only 65536 packets are needed."},{"id":"231","name":"XML Oversized Payloads","prerequisites":"An application uses an XML parser to perform transformation on user-controllable data. An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser.","related_weakness":["112","19","20","674","770"],"solutions":"Carefully validate and sanitize all user-controllable data prior to passing it to the XML parser routine. Ensure that the resultant data is safe to pass to the XML parser. Perform validation on canonical data. Pick a robust implementation of an XML parser. Validate XML against a valid schema or DTD prior to parsing.","summary":"Applications often need to transform data in and out of the XML format by using an XML parser. It may be possible for an adversary to inject data that may have an adverse effect on the XML parser when it is being processed. By supplying oversized payloads in input vectors that will be processed by the XML parser, an adversary can cause the XML parser to consume more resources while processing, causing excessive memory consumption and CPU utilization, and potentially cause execution of arbitrary code. An adversary's goal is to leverage parser failure to his or her advantage. In many cases this type of an attack will result in a XML Denial of Service (XDoS) due to an application becoming unstable, freezing, or crashing. However it is possible to cause a crash resulting in arbitrary code execution, leading to a jump from the data plane to the control plane [R.231.1]. XDoS is most closely associated with web services, SOAP, and Rest, because remote service requesters can post malicious XML payloads to the service provider designed to exhaust the service provider's memory, CPU, and/or disk space. The main weakness in XDoS is that the service provider generally must inspect, parse, and validate the XML messages to determine routing, workflow, security considerations, and so on. It is exactly these inspection, parsing, and validation routines that XDoS targets. This attack exploits the loosely coupled nature of web services, where the service provider has little to no control over the service requester and any messages the service requester sends."},{"id":"125","name":"Flooding","prerequisites":"Any target that services requests is vulnerable to this attack on some level of scale.","related_weakness":["404","770"],"solutions":"Ensure that protocols have specific limits of scale configured. Specify expectations for capabilities and dictate which behaviors are acceptable when resource allocation reaches limits. Uniformly throttle all requests in order to make it more difficult to consume resources more quickly than they can again be freed.","summary":"An adversary consumes the resources of a target by rapidly engaging in a large number of interactions with the target. This type of attack generally exposes a weakness in rate limiting or flow. When successful this attack prevents legitimate users from accessing the service and can cause the target to crash. This attack differs from resource depletion through leaks or allocations in that the latter attacks do not rely on the volume of requests made to the target but instead focus on manipulation of the target's operations. The key factor in a flooding attack is the number of requests the adversary can make in a given period of time. The greater this number, the more likely an attack is to succeed against a given target."},{"id":"147","name":"XML Ping of the Death","prerequisites":"The target must receive and process XML transactions.","related_weakness":["400","770"],"solutions":"Design: Build throttling mechanism into the resource allocation. Provide for a timeout mechanism for allocated resources whose transaction does not complete within a specified interval. Implementation: Provide for network flow control and traffic shaping to control access to the resources.","summary":"An attacker initiates a resource depletion attack where a large number of small XML messages are delivered at a sufficiently rapid rate to cause a denial of service or crash of the target. Transactions such as repetitive SOAP transactions can deplete resources faster than a simple flooding attack because of the additional resources used by the SOAP protocol and the resources necessary to process SOAP messages. The transactions used are immaterial as long as they cause resource utilization on the target. In other words, this is a normal flooding attack augmented by using messages that will require extra processing on the target."},{"id":"230","name":"XML Nested Payloads","prerequisites":"An application uses an XML parser to perform transformation on user-controllable data. An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser.","related_weakness":["112","19","20","674","770"],"solutions":"Carefully validate and sanitize all user-controllable data prior to passing it to the XML parser routine. Ensure that the resultant data is safe to pass to the XML parser. Perform validation on canonical data. Pick a robust implementation of an XML parser. Validate XML against a valid schema or DTD prior to parsing.","summary":"Applications often need to transform data in and out of the XML format by using an XML parser. It may be possible for an adversary to inject data that may have an adverse effect on the XML parser when it is being processed. By nesting XML data and causing this data to be continuously self-referential, an adversary can cause the XML parser to consume more resources while processing, causing excessive memory consumption and CPU utilization. An adversary's goal is to leverage parser failure to his or her advantage. In most cases this type of an attack will result in a XML Denial of Service (XDoS) due to an application becoming unstable, freezing, or crashing. However it may be possible to cause a crash resulting in arbitrary code execution, leading to a jump from the data plane to the control plane [R.230.1]. XDoS is most closely associated with web services, SOAP, and Rest, because remote service requesters can post malicious XML payloads to the service provider designed to exhaust the service provider's memory, CPU, and/or disk space. The main weakness in XDoS is that the service provider generally must inspect, parse, and validate the XML messages to determine routing, workflow, security considerations, and so on. It is exactly these inspection, parsing, and validation routines that XDoS targets. This attack exploits the loosely coupled nature of web services, where the service provider has little to no control over the service requester and any messages the service requester sends."},{"id":"489","name":"SSL Flood","prerequisites":"This type of an attack requires the ability to generate a large amount of SSL traffic to send a target server.","related_weakness":["770"],"solutions":"To mitigate this type of an attack, an organization can create rule based filters to silently drop connections if too many are attempted in a certain time period.","summary":"An adversary may execute a flooding attack using the SSL protocol with the intent to deny legitimate users access to a service by consuming all the available resources on the server side. These attacks take advantage of the asymmetric relationship between the processing power used by the client and the processing power used by the server to create a secure connection. In this manner the attacker can make a large number of HTTPS requests on a low provisioned machine to tie up a disproportionately large number of resources on the server. The clients then continue to keep renegotiating the SSL connection. When multiplied by a large number of attacking machines, this attack can result in a crash or loss of service to legitimate users."},{"id":"496","name":"ICMP Fragmentation","prerequisites":"This type of an attack requires the target system to be running a vulnerable implementation of IP, and the attacker needs to ability to send arbitrary sized ICMP packets to the target.","related_weakness":["404","770"],"solutions":"This attack may be mitigated through egress filtering based on ICMP payload so a network is a \"good neighbor\" to other networks. Bad IP implementations become patched, so using the proper version of a browser or OS is recommended.","summary":"An attacker may execute a ICMP Fragmentation attack against a target with the intention of consuming resources or causing a crash. The attacker crafts a large number of identical fragmented IP packets containing a portion of a fragmented ICMP message. The attacker these sends these messages to a target host which causes the host to become non-responsive. Another vector may be sending a fragmented ICMP message to a target host with incorrect sizes in the header which causes the host to hang."}],"cvss":5,"cvss-time":"2022-07-25T18:15:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:N/A:P","cwe":"CWE-770","id":"CVE-2021-35517","impact":{"availability":"PARTIAL","confidentiality":"NONE","integrity":"NONE"},"last-modified":"2022-07-25T18:15:00","references":["https://commons.apache.org/proper/commons-compress/security-reports.html","https://lists.apache.org/thread.html/r605d906b710b95f1bbe0036a53ac6968f667f2c249b6fbabada9a940%40%3Cuser.commons.apache.org%3E","http://www.openwall.com/lists/oss-security/2021/07/13/3","https://lists.apache.org/thread.html/ra393ffdc7c90a4a37ea023946f390285693795013a642d80fba20203@%3Cannounce.apache.org%3E","https://lists.apache.org/thread.html/r54afdab05e01de970649c2d91a993f68a6b00cd73e6e34e16c832d46@%3Cuser.ant.apache.org%3E","https://lists.apache.org/thread.html/r457b2ed564860996b20d938566fe8bd4bfb7c37be8e205448ccb5975@%3Cannounce.apache.org%3E","http://www.openwall.com/lists/oss-security/2021/07/13/5","https://lists.apache.org/thread.html/rb064d705fdfa44b5dae4c366b369ef6597951083196321773b983e71@%3Ccommits.pulsar.apache.org%3E","https://lists.apache.org/thread.html/rd4332baaf6debd03d60deb7ec93bee49e5fdbe958cb6800dff7fb00e@%3Cnotifications.skywalking.apache.org%3E","https://lists.apache.org/thread.html/rb7adf3e55359819e77230b4586521e5c6874ce5ed93384bdc14d6aee@%3Cnotifications.skywalking.apache.org%3E","https://lists.apache.org/thread.html/r9f54c0caa462267e0cc68b49f141e91432b36b23348d18c65bd0d040@%3Cnotifications.skywalking.apache.org%3E","https://lists.apache.org/thread.html/rba65ed5ddb0586f5b12598f55ec7db3633e7b7fede60466367fbf86a@%3Cnotifications.skywalking.apache.org%3E","https://lists.apache.org/thread.html/rb6e1fa80d34e5ada45f72655d84bfd90db0ca44ef19236a49198c88c@%3Cnotifications.skywalking.apache.org%3E","https://lists.apache.org/thread.html/rfba19167efc785ad3561e7ef29f340d65ac8f0d897aed00e0731e742@%3Cnotifications.skywalking.apache.org%3E","https://lists.apache.org/thread.html/racd0c0381c8404f298b226cd9db2eaae965b14c9c568224aa3f437ae@%3Cnotifications.skywalking.apache.org%3E","https://lists.apache.org/thread.html/r31f75743ac173b0a606f8ea6ea53f351f386c44e7bcf78ae04007c29@%3Cissues.flink.apache.org%3E","https://lists.apache.org/thread.html/r67ef3c07fe3b8c1b02d48012149d280ad6da8e4cec253b527520fb2b@%3Cdev.poi.apache.org%3E","https://www.oracle.com/security-alerts/cpuoct2021.html","https://security.netapp.com/advisory/ntap-20211022-0001/","https://www.oracle.com/security-alerts/cpujan2022.html","https://www.oracle.com/security-alerts/cpuapr2022.html","https://www.oracle.com/security-alerts/cpujul2022.html"],"summary":"When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.","vulnerable_configuration":[{"id":"cpe:2.3:a:apache:commons_compress:1.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.4.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.4.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.13:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.13:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.14:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.14:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.15:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.15:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.16:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.16:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.16.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.16.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.17:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.17:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.18:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.18:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:commons_compress:1.20:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:commons_compress:1.20:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:netapp:oncommand_insight:-:*:*:*:*:*:*:*","title":"cpe:2.3:a:netapp:oncommand_insight:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:vmware_vsphere:*:*","title":"cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:vmware_vsphere:*:*"},{"id":"cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:linux:*:*","title":"cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:linux:*:*"},{"id":"cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:windows:*:*","title":"cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:windows:*:*"},{"id":"cpe:2.3:a:oracle:webcenter_portal:12.2.1.3.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:webcenter_portal:12.2.1.3.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:business_process_management_suite:12.2.1.3.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:business_process_management_suite:12.2.1.3.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.57:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.57:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:18.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:18.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:17.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:17.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:17.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:17.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:17.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:17.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:17.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:17.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:17.11:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:17.11:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:17.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:17.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_digital_experience:19.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_digital_experience:19.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:flexcube_universal_banking:14.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:flexcube_universal_banking:14.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:flexcube_universal_banking:14.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:flexcube_universal_banking:14.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:flexcube_universal_banking:14.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:flexcube_universal_banking:14.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:flexcube_universal_banking:14.3.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:flexcube_universal_banking:14.3.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.58:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.58:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:19.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:19.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:webcenter_portal:12.2.1.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:webcenter_portal:12.2.1.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_digital_experience:19.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_digital_experience:19.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_digital_experience:20.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_digital_experience:20.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:primavera_unifier:20.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:primavera_unifier:20.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:business_process_management_suite:12.2.1.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:business_process_management_suite:12.2.1.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:oracle:communications_messaging_server:8.1:*:*:*:*:*:*:*","title":"cpe:2.3:o:oracle:communications_messaging_server:8.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:commerce_guided_search:11.3.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:commerce_guided_search:11.3.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.59:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.59:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:insurance_policy_administration:11.3.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:insurance_policy_administration:11.3.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:insurance_policy_administration:11.0.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:insurance_policy_administration:11.0.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:financial_services_enterprise_case_management:8.0.8.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:financial_services_enterprise_case_management:8.0.8.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:financial_services_enterprise_case_management:8.0.7.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:financial_services_enterprise_case_management:8.0.7.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:healthcare_data_repository:8.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:healthcare_data_repository:8.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.1.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.1.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.2.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.2.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_session_route_manager:8.2.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_party_management:2.7.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_party_management:2.7.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.2.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.2.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.3.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.3.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.1.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.1.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_digital_experience:21.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_digital_experience:21.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_apis:18.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_apis:18.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_apis:18.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_apis:18.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_apis:18.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_apis:18.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_apis:19.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_apis:19.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_apis:19.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_apis:19.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_apis:20.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_apis:20.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_apis:21.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_apis:21.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_cloud_native_core_unified_data_repository:1.14.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_cloud_native_core_unified_data_repository:1.14.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_cloud_native_core_service_communication_proxy:1.14.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_cloud_native_core_service_communication_proxy:1.14.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_billing_and_revenue_management:12.0.0.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_billing_and_revenue_management:12.0.0.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:insurance_policy_administration:11.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:insurance_policy_administration:11.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:insurance_policy_administration:11.3.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:insurance_policy_administration:11.3.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_enterprise_default_management:2.7.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_enterprise_default_management:2.7.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_digital_experience:18.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_digital_experience:18.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_digital_experience:18.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_digital_experience:18.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_digital_experience:18.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_digital_experience:18.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:insurance_policy_administration:11.2.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:insurance_policy_administration:11.2.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_payments:14.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_payments:14.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_trade_finance:14.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_trade_finance:14.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:banking_treasury_management:14.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:banking_treasury_management:14.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.2.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.2.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:flexcube_universal_banking:14.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:flexcube_universal_banking:14.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:oracle:flexcube_universal_banking:12.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:oracle:flexcube_universal_banking:12.4:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:apache:commons_compress:1.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.2:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.3:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.4:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.4.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.5:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.6:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.7:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.8:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.9:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.10:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.11:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.12:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.13:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.14:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.15:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.16:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.16.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.17:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.18:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*","cpe:2.3:a:apache:commons_compress:1.20:*:*:*:*:*:*:*","cpe:2.3:a:netapp:oncommand_insight:-:*:*:*:*:*:*:*","cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:vmware_vsphere:*:*","cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:linux:*:*","cpe:2.3:a:netapp:active_iq_unified_manager:-:*:*:*:*:windows:*:*","cpe:2.3:a:oracle:webcenter_portal:12.2.1.3.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:business_process_management_suite:12.2.1.3.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.57:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:18.8:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:17.7:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:17.8:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:17.9:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:17.10:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:17.11:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:17.12:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_digital_experience:19.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:flexcube_universal_banking:14.0.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:flexcube_universal_banking:14.1.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:flexcube_universal_banking:14.2.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:flexcube_universal_banking:14.3.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.58:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:19.12:*:*:*:*:*:*:*","cpe:2.3:a:oracle:webcenter_portal:12.2.1.4.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_digital_experience:19.2:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_digital_experience:20.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:primavera_unifier:20.12:*:*:*:*:*:*:*","cpe:2.3:a:oracle:business_process_management_suite:12.2.1.4.0:*:*:*:*:*:*:*","cpe:2.3:o:oracle:communications_messaging_server:8.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:commerce_guided_search:11.3.2:*:*:*:*:*:*:*","cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.59:*:*:*:*:*:*:*","cpe:2.3:a:oracle:insurance_policy_administration:11.3.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:insurance_policy_administration:11.0.2:*:*:*:*:*:*:*","cpe:2.3:a:oracle:financial_services_enterprise_case_management:8.0.8.1.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:financial_services_enterprise_case_management:8.0.7.2.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:healthcare_data_repository:8.1.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.0.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.1.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.1.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.2.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.2.0.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.2.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.2.2:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.2.2.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.2.4:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.2.4.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_session_route_manager:8.2.5:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_party_management:2.7.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.2.2:*:*:*:*:*:*:*","cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.3.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:utilities_testing_accelerator:6.0.0.1.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_digital_experience:21.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_apis:18.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_apis:18.2:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_apis:18.3:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_apis:19.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_apis:19.2:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_apis:20.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_apis:21.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_cloud_native_core_unified_data_repository:1.14.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_cloud_native_core_service_communication_proxy:1.14.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_billing_and_revenue_management:12.0.0.4:*:*:*:*:*:*:*","cpe:2.3:a:oracle:insurance_policy_administration:11.1.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:insurance_policy_administration:11.3.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_enterprise_default_management:2.7.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_digital_experience:18.1:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_digital_experience:18.2:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_digital_experience:18.3:*:*:*:*:*:*:*","cpe:2.3:a:oracle:insurance_policy_administration:11.2.8:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_payments:14.5:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_trade_finance:14.5:*:*:*:*:*:*:*","cpe:2.3:a:oracle:banking_treasury_management:14.5:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.0.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.1.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.2.0:*:*:*:*:*:*:*","cpe:2.3:a:oracle:communications_diameter_intelligence_hub:8.2.3:*:*:*:*:*:*:*","cpe:2.3:a:oracle:flexcube_universal_banking:14.5:*:*:*:*:*:*:*","cpe:2.3:a:oracle:flexcube_universal_banking:12.4:*:*:*:*:*:*:*"]}