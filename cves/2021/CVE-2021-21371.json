{"Modified":"2021-03-18T20:38:00","Published":"2021-03-10T22:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"LOCAL"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":4.6,"cvss-time":"2021-03-18T20:38:00","cvss-vector":"AV:L/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2021-21371","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2021-03-18T20:38:00","references":["https://github.com/tenable/integration-jira-cloud/commit/f8c2095fd529e664e7fa25403a0a4a85bb3907d0","https://github.com/tenable/integration-jira-cloud/security/advisories/GHSA-8278-88vv-x98r","https://pypi.org/project/tenable-jira-cloud/","https://pyyaml.docsforge.com/master/documentation/#loading-yaml"],"summary":"Tenable for Jira Cloud is an open source project designed to pull Tenable.io vulnerability data, then generate Jira Tasks and sub-tasks based on the vulnerabilities' current state. It published in pypi as \"tenable-jira-cloud\". In tenable-jira-cloud before version 1.1.21, it is possible to run arbitrary commands through the yaml.load() method. This could allow an attacker with local access to the host to run arbitrary code by running the application with a specially crafted YAML configuration file. This is fixed in version 1.1.21 by using yaml.safe_load() instead of yaml.load().","vulnerable_configuration":[{"id":"cpe:2.3:a:tenable:jira_cloud:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:tenable:jira_cloud:*:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:tenable:jira_cloud:*:*:*:*:*:*:*:*"]}