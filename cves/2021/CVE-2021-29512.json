{"Modified":"2021-05-19T21:09:00","Published":"2021-05-14T19:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"LOCAL"},"assigner":"security-advisories@github.com","capec":[],"cvss":4.6,"cvss-time":"2021-05-19T21:09:00","cvss-vector":"AV:L/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-787","id":"CVE-2021-29512","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2021-05-19T21:09:00","references":["https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4278-2v5v-65r4","https://github.com/tensorflow/tensorflow/commit/eebb96c2830d48597d055d247c0e9aebaea94cd5"],"summary":"TensorFlow is an end-to-end open source platform for machine learning. If the `splits` argument of `RaggedBincount` does not specify a valid `SparseTensor`(https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor), then an attacker can trigger a heap buffer overflow. This will cause a read from outside the bounds of the `splits` tensor buffer in the implementation of the `RaggedBincount` op(https://github.com/tensorflow/tensorflow/blob/8b677d79167799f71c42fd3fa074476e0295413a/tensorflow/core/kernels/bincount_op.cc#L430-L433). Before the `for` loop, `batch_idx` is set to 0. The user controls the `splits` array, making it contain only one element, 0. Thus, the code in the `while` loop would increment `batch_idx` and then try to read `splits(1)`, which is outside of bounds. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 and TensorFlow 2.3.3, as these are also affected.","vulnerable_configuration":[{"id":"cpe:2.3:a:google:tensorflow:2.3.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.3.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.3.0:rc0:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.3.0:rc0:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.3.0:rc1:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.3.0:rc1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.3.0:rc2:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.3.0:rc2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.3.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.3.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.3.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.3.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.4.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.4.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.4.0:rc0:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.4.0:rc0:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.4.0:rc1:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.4.0:rc1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.4.0:rc2:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.4.0:rc2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.4.0:rc3:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.4.0:rc3:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.4.0:rc4:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.4.0:rc4:*:*:*:*:*:*"},{"id":"cpe:2.3:a:google:tensorflow:2.4.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:google:tensorflow:2.4.1:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:google:tensorflow:2.3.0:-:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.3.0:rc0:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.3.0:rc1:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.3.0:rc2:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.3.1:*:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.3.2:*:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.4.0:-:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.4.0:rc0:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.4.0:rc1:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.4.0:rc2:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.4.0:rc3:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.4.0:rc4:*:*:*:*:*:*","cpe:2.3:a:google:tensorflow:2.4.1:*:*:*:*:*:*:*"]}