{"Modified":"2022-12-21T19:04:00","Published":"2022-12-16T22:15:00","access":{},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":null,"cwe":"CWE-502","id":"CVE-2021-38241","impact":{},"last-modified":"2022-12-21T19:04:00","references":["https://www.du1ge.com/archives/CVE-2021-38241"],"summary":"Deserialization issue discovered in Ruoyi before 4.6.1 allows remote attackers to run arbitrary code via weak cipher in Shiro framework.","vulnerable_configuration":[{"id":"cpe:2.3:a:ruoyi:ruoyi:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:ruoyi:ruoyi:*:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:ruoyi:ruoyi:*:*:*:*:*:*:*:*"]}