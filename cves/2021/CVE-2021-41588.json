{"Modified":"2021-10-01T13:04:00","Published":"2021-09-24T15:15:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":6.8,"cvss-time":"2021-10-01T13:04:00","cvss-vector":"AV:N/AC:M/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2021-41588","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2021-10-01T13:04:00","references":["https://security.gradle.com/advisory/2021-03"],"summary":"In Gradle Enterprise before 2021.1.3, a crafted request can trigger deserialization of arbitrary unsafe Java objects. The attacker must have the encryption and signing keys.","vulnerable_configuration":[{"id":"cpe:2.3:a:gradle:gradle:*:*:*:*:enterprise:*:*:*","title":"cpe:2.3:a:gradle:gradle:*:*:*:*:enterprise:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:gradle:gradle:*:*:*:*:enterprise:*:*:*"]}