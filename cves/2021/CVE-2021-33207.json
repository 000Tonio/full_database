{"Modified":"2022-04-13T18:43:00","Published":"2022-04-05T03:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":7.5,"cvss-time":"2022-04-13T18:43:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2021-33207","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2022-04-13T18:43:00","references":["https://github.com/blackarrowsec/advisories/tree/master/2021/CVE-2021-33207","https://www.softwareag.com/corporate/products/az/mashzone_nextgen/default"],"summary":"The HTTP client in MashZone NextGen through 10.7 GA deserializes untrusted data when it gets an HTTP response with a 570 status code.","vulnerable_configuration":[{"id":"cpe:2.3:a:softwareag:mashzone_nextgen:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:softwareag:mashzone_nextgen:*:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:softwareag:mashzone_nextgen:*:*:*:*:*:*:*:*"]}