{"Modified":"2022-05-24T17:16:00","Published":"2020-09-18T21:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"LOCAL"},"assigner":"cve-assignments@hackerone.com","capec":[{"id":"46","name":"Overflow Variables and Tags","prerequisites":"The target program consumes user-controllable data in the form of tags or variables. The target program does not perform sufficient boundary checking.","related_weakness":["118","119","120","20","680","697","733","74"],"solutions":"Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution. Do not trust input data from user. Validate all user input.","summary":"This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow."},{"id":"8","name":"Buffer Overflow in an API Call","prerequisites":"The target host exposes an API to the user. One or more API functions exposed by the target host has a buffer overflow vulnerability.","related_weakness":["118","119","120","20","680","697","733","74"],"solutions":"Use a language or compiler that performs automatic bounds checking. Use secure functions not vulnerable to buffer overflow. If you have to use dangerous functions, make sure that you do boundary checking. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution.","summary":"This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An attacker who has access to an API may try to embed malicious code in the API function call and exploit a buffer overflow vulnerability in the function's implementation. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process."},{"id":"67","name":"String Format Overflow in syslog()","prerequisites":"The format string argument of the Syslog function can be tainted with user supplied data.","related_weakness":["120","134","20","680","697","74"],"solutions":"The following code shows a vulnerable usage of Syslog():\n               syslog(LOG_ERR, cmdBuf);\n                     // the buffer cmdBuff is taking user supplied data.","summary":"This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted."},{"id":"10","name":"Buffer Overflow via Environment Variables","prerequisites":"The application uses environment variables. An environment variable exposed to the user is vulnerable to a buffer overflow. The vulnerable environment variable uses untrusted data. Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer.","related_weakness":["118","119","120","20","302","680","697","733","74","99"],"solutions":"Do not expose environment variable to the user. Do not use untrusted data in your environment variables. Use a language or compiler that performs automatic bounds checking There are tools such as Sharefuzz [R.10.3] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow.","summary":"This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables."},{"id":"24","name":"Filter Failure through Buffer Overflow","prerequisites":"Ability to control the length of data passed to an active filter.","related_weakness":["118","119","120","20","680","697","733","74"],"solutions":"Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs. Pre-design: Use a language or compiler that performs automatic bounds checking. Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Operational: Use OS-level preventative functionality. Not a complete solution. Design: Use an abstraction library to abstract away risky APIs. Not a complete solution.","summary":"In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered)."},{"id":"47","name":"Buffer Overflow via Parameter Expansion","prerequisites":"The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter. The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is).","related_weakness":["118","119","120","130","131","20","680","697","74"],"solutions":"Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system","summary":"In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow."},{"id":"9","name":"Buffer Overflow in Local Command-Line Utilities","prerequisites":"The target host exposes a command-line utility to the user. The command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited.","related_weakness":["118","119","120","20","680","697","733","74"],"solutions":"Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow. Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Operational: Use OS-level preventative functionality. Not a complete solution. Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack. Do not unnecessarily expose services.","summary":"This attack targets command-line utilities available in a number of shells. An attacker can leverage a vulnerability found in a command-line utility to escalate privilege to root."},{"id":"14","name":"Client-side Injection-induced Buffer Overflow","prerequisites":"The targeted client software communicates with an external server. The targeted client software has a buffer overflow vulnerability.","related_weakness":["118","119","120","20","353","680","697","713","74"],"solutions":"The client software should not install untrusted code from a non-authenticated server. The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers. Perform input validation for length of buffer inputs. Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Ensure all buffer uses are consistently bounds-checked. Use OS-level preventative functionality. Not a complete solution.","summary":"This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service."},{"id":"44","name":"Overflow Binary Resource File","prerequisites":"Target software processes binary resource files. Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file.","related_weakness":["119","120","697","713"],"solutions":"Perform appropriate bounds checking on all buffers. Design: Enforce principle of least privilege Design: Static code analysis Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes Implementation: Keep software patched to ensure that known vulnerabilities are not available for attackers to target on host.","summary":"An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow."},{"id":"42","name":"MIME Conversion","prerequisites":"The target system uses a mail server. Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system.","related_weakness":["119","120","20","74"],"solutions":"Stay up to date with third party vendor patches From \"Exploiting Software\", please see reference below. Use the sendmail restricted shell program (smrsh) Use mail.local","summary":"An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back."},{"id":"45","name":"Buffer Overflow via Symbolic Links","prerequisites":"The attacker can create symbolic link on the target host. The target host does not perform correct boundary checking while consuming data from a resources.","related_weakness":["118","119","120","20","285","302","680","697","74"],"solutions":"Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource. Because Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories. Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources. Always check the size of the input data before copying to a buffer. Use a language or compiler that performs automatic bounds checking. Use an abstraction library to abstract away risky APIs. Not a complete solution. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution.","summary":"This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking."},{"id":"100","name":"Overflow Buffers","prerequisites":"Targeted software performs buffer operations. Targeted software inadequately performs bounds-checking on buffer operations. Adversary has the capability to influence the input to buffer operations.","related_weakness":["119","120","129","131","19","680","805"],"solutions":"Use a language or compiler that performs automatic bounds checking. Use secure functions not vulnerable to buffer overflow. If you have to use dangerous functions, make sure that you do boundary checking. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution. Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software.","summary":"Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice."},{"id":"92","name":"Forced Integer Overflow","prerequisites":"The attacker can manipulate the value of an integer variable utilized by the target host. The target host does not do proper range checking on the variable before utilizing it. When the integer variable is incremented or decremented to an out of range value, it gets a very different value (e.g. very small or negative number)","related_weakness":["120","122","128","190","196","680","697"],"solutions":"Use a language or compiler that performs automatic bounds checking. Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as integer overflow. Use an abstraction library to abstract away risky APIs. Not a complete solution. Always do bound checking before consuming user input data.","summary":"This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code."}],"cvss":4.6,"cvss-time":"2022-05-24T17:16:00","cvss-vector":"AV:L/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-120","id":"CVE-2020-8252","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2022-05-24T17:16:00","redhat":{"advisories":[{"bugzilla":{"id":"1883966","title":"The nodejs:12/development module is not installable [rhel-8.2.0.z]"},"oval":{"OR":[{"comment":"Red Hat Enterprise Linux must be installed","oval":"oval:com.redhat.rhba:tst:20070304026"},{"AND":[{"comment":"Red Hat Enterprise Linux 8 is installed","oval":"oval:com.redhat.rhba:tst:20193384074"},{"comment":"Module nodejs:12 is enabled","oval":"oval:com.redhat.rhea:tst:20200330015"},{"OR":[{"AND":[{"comment":"nodejs is earlier than 1:12.18.4-2.module+el8.2.0+8361+192e434e","oval":"oval:com.redhat.rhsa:tst:20204272001"},{"comment":"nodejs is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhea:tst:20200330002"}]},{"AND":[{"comment":"nodejs-debugsource is earlier than 1:12.18.4-2.module+el8.2.0+8361+192e434e","oval":"oval:com.redhat.rhsa:tst:20204272003"},{"comment":"nodejs-debugsource is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhea:tst:20200330004"}]},{"AND":[{"comment":"nodejs-devel is earlier than 1:12.18.4-2.module+el8.2.0+8361+192e434e","oval":"oval:com.redhat.rhsa:tst:20204272005"},{"comment":"nodejs-devel is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhea:tst:20200330006"}]},{"AND":[{"comment":"nodejs-docs is earlier than 1:12.18.4-2.module+el8.2.0+8361+192e434e","oval":"oval:com.redhat.rhsa:tst:20204272007"},{"comment":"nodejs-docs is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhea:tst:20200330008"}]},{"AND":[{"comment":"nodejs-full-i18n is earlier than 1:12.18.4-2.module+el8.2.0+8361+192e434e","oval":"oval:com.redhat.rhsa:tst:20204272009"},{"comment":"nodejs-full-i18n is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhsa:tst:20202848010"}]},{"AND":[{"comment":"nodejs-nodemon is earlier than 0:1.18.3-1.module+el8.1.0+3369+37ae6a45","oval":"oval:com.redhat.rhea:tst:20200330009"},{"comment":"nodejs-nodemon is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhea:tst:20200330010"}]},{"AND":[{"comment":"nodejs-packaging is earlier than 0:17-3.module+el8.1.0+3369+37ae6a45","oval":"oval:com.redhat.rhea:tst:20200330011"},{"comment":"nodejs-packaging is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhea:tst:20200330012"}]},{"AND":[{"comment":"npm is earlier than 1:6.14.6-1.12.18.4.2.module+el8.2.0+8361+192e434e","oval":"oval:com.redhat.rhsa:tst:20204272015"},{"comment":"npm is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhea:tst:20200330014"}]}]}]}]},"rhsa":{"id":"RHSA-2020:4272","released":"2020-10-19","severity":"Moderate","title":"RHSA-2020:4272: nodejs:12 security and bug fix update (Moderate)"}}],"rpms":["nodejs-1:12.18.4-2.module+el8.2.0+8361+192e434e","nodejs-debuginfo-1:12.18.4-2.module+el8.2.0+8361+192e434e","nodejs-debugsource-1:12.18.4-2.module+el8.2.0+8361+192e434e","nodejs-devel-1:12.18.4-2.module+el8.2.0+8361+192e434e","nodejs-docs-1:12.18.4-2.module+el8.2.0+8361+192e434e","nodejs-full-i18n-1:12.18.4-2.module+el8.2.0+8361+192e434e","nodejs-nodemon-0:1.18.3-1.module+el8.1.0+3369+37ae6a45","nodejs-packaging-0:17-3.module+el8.1.0+3369+37ae6a45","npm-1:6.14.6-1.12.18.4.2.module+el8.2.0+8361+192e434e","nodejs-1:12.18.4-2.module+el8.1.0+8360+14141500","nodejs-debuginfo-1:12.18.4-2.module+el8.1.0+8360+14141500","nodejs-debugsource-1:12.18.4-2.module+el8.1.0+8360+14141500","nodejs-devel-1:12.18.4-2.module+el8.1.0+8360+14141500","nodejs-docs-1:12.18.4-2.module+el8.1.0+8360+14141500","nodejs-full-i18n-1:12.18.4-2.module+el8.1.0+8360+14141500","nodejs-nodemon-0:1.18.3-1.module+el8.1.0+3369+37ae6a45","nodejs-packaging-0:17-3.module+el8.1.0+3369+37ae6a45","npm-1:6.14.6-1.12.18.4.2.module+el8.1.0+8360+14141500","rh-nodejs12-nodejs-0:12.18.4-3.el7","rh-nodejs12-nodejs-debuginfo-0:12.18.4-3.el7","rh-nodejs12-nodejs-devel-0:12.18.4-3.el7","rh-nodejs12-nodejs-docs-0:12.18.4-3.el7","rh-nodejs12-npm-0:6.14.6-12.18.4.3.el7"]},"references":["https://hackerone.com/reports/965914","https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/","https://security.gentoo.org/glsa/202009-15","https://usn.ubuntu.com/4548-1/","http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00011.html","https://security.netapp.com/advisory/ntap-20201009-0004/","http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00023.html","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/"],"refmap":{"confirm":["https://security.netapp.com/advisory/ntap-20201009-0004/"],"fedora":["FEDORA-2020-43d5a372fc"],"gentoo":["GLSA-202009-15"],"misc":["https://hackerone.com/reports/965914","https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/"],"suse":["openSUSE-SU-2020:1616","openSUSE-SU-2020:1660"],"ubuntu":["USN-4548-1"]},"summary":"The implementation of realpath in libuv < 10.22.1, < 12.18.4, and < 14.9.0 used within Node.js incorrectly determined the buffer size which can result in a buffer overflow if the resolved path is longer than 256 bytes.","vulnerable_configuration":[{"id":"cpe:2.3:a:nodejs:node.js:14.0.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.0.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:14.1.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.1.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:14.2.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.2.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:14.3.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.3.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:14.4.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.4.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:14.5.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.5.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:14.6.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.6.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:14.7.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.7.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:14.8.0:*:*:*:-:*:*:*","title":"cpe:2.3:a:nodejs:node.js:14.8.0:*:*:*:-:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.0.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.0.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.1.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.1.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.2.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.2.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.3.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.3.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.3.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.3.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.4.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.4.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.5.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.5.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.6.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.6.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.7.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.7.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.8.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.8.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.8.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.8.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.9.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.9.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.9.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.9.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.10.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.10.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.11.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.11.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.11.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.11.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.12.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.12.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.13.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.13.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.13.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.13.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.14.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.14.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.14.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.14.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.15.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.15.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.16.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.16.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.16.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.16.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.16.2:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.16.2:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.16.3:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.16.3:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.17.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.17.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.18.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.18.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.18.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.18.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.18.2:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.18.2:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:12.18.3:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:12.18.3:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.0.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.0.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.1.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.1.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.2.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.2.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.2.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.2.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.3.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.3.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.4.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.4.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.4.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.4.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.5.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.5.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.6.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.6.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.7.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.7.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.8.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.8.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.9.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.9.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.10.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.10.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.11.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.11.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.12.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.12.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.13.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.13.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.14.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.14.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.14.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.14.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.14.2:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.14.2:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.15.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.15.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.15.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.15.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.15.2:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.15.2:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.15.3:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.15.3:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.16.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.16.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.16.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.16.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.16.2:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.16.2:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.16.3:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.16.3:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.17.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.17.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.18.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.18.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.18.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.18.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.19.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.19.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.20.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.20.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.20.1:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.20.1:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.21.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.21.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:a:nodejs:node.js:10.22.0:*:*:*:lts:*:*:*","title":"cpe:2.3:a:nodejs:node.js:10.22.0:*:*:*:lts:*:*:*"},{"id":"cpe:2.3:o:opensuse:leap:15.2:*:*:*:*:*:*:*","title":"cpe:2.3:o:opensuse:leap:15.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*","title":"cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:nodejs:node.js:14.0.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:14.1.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:14.2.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:14.3.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:14.4.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:14.5.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:14.6.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:14.7.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:14.8.0:*:*:*:-:*:*:*","cpe:2.3:a:nodejs:node.js:12.0.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.1.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.2.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.3.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.3.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.4.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.5.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.6.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.7.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.8.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.8.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.9.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.9.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.10.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.11.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.11.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.12.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.13.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.13.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.14.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.14.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.15.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.16.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.16.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.16.2:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.16.3:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.17.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.18.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.18.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.18.2:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:12.18.3:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.0.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.1.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.2.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.2.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.3.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.4.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.4.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.5.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.6.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.7.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.8.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.9.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.10.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.11.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.12.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.13.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.14.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.14.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.14.2:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.15.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.15.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.15.2:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.15.3:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.16.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.16.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.16.2:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.16.3:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.17.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.18.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.18.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.19.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.20.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.20.1:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.21.0:*:*:*:lts:*:*:*","cpe:2.3:a:nodejs:node.js:10.22.0:*:*:*:lts:*:*:*","cpe:2.3:o:opensuse:leap:15.2:*:*:*:*:*:*:*","cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*"]}