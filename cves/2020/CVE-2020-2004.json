{"Modified":"2020-05-15T18:40:00","Published":"2020-05-13T19:15:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"LOCAL"},"assigner":"cve@mitre.org","capec":[{"id":"215","name":"Fuzzing and observing application log data/errors for application mapping","prerequisites":"The target application must fail to sanitize incoming messages adequately before processing.","related_weakness":["209","532"],"solutions":"Design: Construct a 'code book' for error messages. When using a code book, application error messages aren't generated in string or stack trace form, but are catalogued and replaced with a unique (often integer-based) value 'coding' for the error. Such a technique will require helpdesk and hosting personnel to use a 'code book' or similar mapping to decode application errors/logs in order to respond to them normally. Design: wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above 'code book' suggestion. Implementation: Obfuscate server fields of HTTP response. Implementation: Hide inner ordering of HTTP response header. Implementation: Customizing HTTP error codes such as 404 or 500. Implementation: Hide HTTP response header software information filed. Implementation: Hide cookie's software information filed. Implementation: Obfuscate database type in Database API's error message.","summary":"An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes the application's log or error messages returned. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to observe the application's log and error messages, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. By observing logs and error messages, the attacker can learn details about the configuration of the target application and might be able to cause the target to disclose sensitive information."}],"cvss":1.7,"cvss-time":"2020-05-15T18:40:00","cvss-vector":"AV:L/AC:L/Au:S/C:P/I:N/A:N","cwe":"CWE-532","id":"CVE-2020-2004","impact":{"availability":"NONE","confidentiality":"PARTIAL","integrity":"NONE"},"last-modified":"2020-05-15T18:40:00","references":["https://security.paloaltonetworks.com/CVE-2020-2004"],"refmap":{"misc":["https://security.paloaltonetworks.com/CVE-2020-2004"]},"summary":"Under certain circumstances a user's password may be logged in cleartext in the PanGPS.log diagnostic file when logs are collected for troubleshooting on GlobalProtect app (also known as GlobalProtect Agent) for MacOS and Windows. For this issue to occur all of these conditions must be true: (1) 'Save User Credential' option should be set to 'Yes' in the GlobalProtect Portal's Agent configuration, (2) the GlobalProtect user manually selects a gateway, (3) and the logging level is set to 'Dump' while collecting troubleshooting logs. This issue does not affect GlobalProtect app on other platforms (for example iOS/Android/Linux). This issue affects GlobalProtect app 5.0 versions earlier than 5.0.9, GlobalProtect app 5.1 versions earlier than 5.1.2 on Windows or MacOS. Since becoming aware of the issue, Palo Alto Networks has safely deleted all the known GlobalProtectLogs zip files sent by customers with the credentials. We now filter and remove these credentials from all files sent to Customer Support. The GlobalProtectLogs zip files uploaded to Palo Alto Networks systems were only accessible by authorized personnel with valid Palo Alto Networks credentials. We do not have any evidence of malicious access or use of these credentials.","vulnerable_configuration":[{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.0:*:*:*:*:macos:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.0:*:*:*:*:macos:*:*"},{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.4:*:*:*:*:macos:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.4:*:*:*:*:macos:*:*"},{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.5:*:*:*:*:macos:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.5:*:*:*:*:macos:*:*"},{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.6:*:*:*:*:macos:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.6:*:*:*:*:macos:*:*"},{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.0:*:*:*:*:windows:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.0:*:*:*:*:windows:*:*"},{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.3:*:*:*:*:windows:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.3:*:*:*:*:windows:*:*"},{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.5:*:*:*:*:windows:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.0.5:*:*:*:*:windows:*:*"},{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.1.0:*:*:*:*:macos:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.1.0:*:*:*:*:macos:*:*"},{"id":"cpe:2.3:a:paloaltonetworks:globalprotect:5.1.0:*:*:*:*:windows:*:*","title":"cpe:2.3:a:paloaltonetworks:globalprotect:5.1.0:*:*:*:*:windows:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:paloaltonetworks:globalprotect:5.0.0:*:*:*:*:macos:*:*","cpe:2.3:a:paloaltonetworks:globalprotect:5.0.4:*:*:*:*:macos:*:*","cpe:2.3:a:paloaltonetworks:globalprotect:5.0.5:*:*:*:*:macos:*:*","cpe:2.3:a:paloaltonetworks:globalprotect:5.0.6:*:*:*:*:macos:*:*","cpe:2.3:a:paloaltonetworks:globalprotect:5.0.0:*:*:*:*:windows:*:*","cpe:2.3:a:paloaltonetworks:globalprotect:5.0.3:*:*:*:*:windows:*:*","cpe:2.3:a:paloaltonetworks:globalprotect:5.0.5:*:*:*:*:windows:*:*","cpe:2.3:a:paloaltonetworks:globalprotect:5.1.0:*:*:*:*:macos:*:*","cpe:2.3:a:paloaltonetworks:globalprotect:5.1.0:*:*:*:*:windows:*:*"]}