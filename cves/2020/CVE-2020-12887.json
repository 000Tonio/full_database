{"Modified":"2021-07-21T11:39:00","Published":"2020-06-18T19:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":5,"cvss-time":"2021-07-21T11:39:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:N/A:P","cwe":"CWE-401","id":"CVE-2020-12887","impact":{"availability":"PARTIAL","confidentiality":"NONE","integrity":"NONE"},"last-modified":"2021-07-21T11:39:00","references":["https://github.com/ARMmbed/mbed-os/issues/12957","https://github.com/mjurczak/mbed-coap/commit/4647a68e364401e81dbd370728127d844f221d93","https://github.com/ARMmbed/mbed-os/issues/12930","https://github.com/ARMmbed/mbed-coap/pull/116"],"refmap":{"confirm":["https://github.com/ARMmbed/mbed-coap/pull/116"],"misc":["https://github.com/ARMmbed/mbed-os/issues/12930","https://github.com/ARMmbed/mbed-os/issues/12957","https://github.com/mjurczak/mbed-coap/commit/4647a68e364401e81dbd370728127d844f221d93"]},"summary":"Memory leaks were discovered in the CoAP library in Arm Mbed OS 5.15.3 when using the Arm mbed-coap library 5.1.5. The CoAP parser is responsible for parsing received CoAP packets. The function sn_coap_parser_options_parse() parses the CoAP option number field of all options present in the input packet. Each option number is calculated as a sum of the previous option number and a delta of the current option. The delta and the previous option number are expressed as unsigned 16-bit integers. Due to lack of overflow detection, it is possible to craft a packet that wraps the option number around and results in the same option number being processed again in a single packet. Certain options allocate memory by calling a memory allocation function. In the cases of COAP_OPTION_URI_QUERY, COAP_OPTION_URI_PATH, COAP_OPTION_LOCATION_QUERY, and COAP_OPTION_ETAG, there is no check on whether memory has already been allocated, which in conjunction with the option number integer overflow may lead to multiple assignments of allocated memory to a single pointer. This has been demonstrated to lead to memory leak by buffer orphaning. As a result, the memory is never freed.","vulnerable_configuration":[{"id":"cpe:2.3:a:arm:mbed-coap:5.1.5:*:*:*:*:*:*:*","title":"cpe:2.3:a:arm:mbed-coap:5.1.5:*:*:*:*:*:*:*"},{"id":"cpe:2.3:o:arm:mbed_os:5.15.3:*:*:*:*:*:*:*","title":"cpe:2.3:o:arm:mbed_os:5.15.3:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:arm:mbed-coap:5.1.5:*:*:*:*:*:*:*"]}