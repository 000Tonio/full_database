{"Modified":"2021-03-18T19:05:00","Published":"2021-03-12T01:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":7.5,"cvss-time":"2021-03-18T19:05:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2020-36282","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2021-03-18T19:05:00","references":["https://github.com/rabbitmq/rabbitmq-jms-client/issues/135","https://github.com/rabbitmq/rabbitmq-jms-client/releases/tag/v1.15.2","https://github.com/rabbitmq/rabbitmq-jms-client/releases/tag/v2.2.0","https://medium.com/@ramon93i7/a99645d0448b"],"summary":"JMS Client for RabbitMQ 1.x before 1.15.2 and 2.x before 2.2.0 is vulnerable to unsafe deserialization that can result in code execution via crafted StreamMessage data.","vulnerable_configuration":[{"id":"cpe:2.3:a:rabbitmq:jms_client:*:*:*:*:*:rabbitmq:*:*","title":"cpe:2.3:a:rabbitmq:jms_client:*:*:*:*:*:rabbitmq:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:rabbitmq:jms_client:*:*:*:*:*:rabbitmq:*:*"]}