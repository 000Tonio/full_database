{"Modified":"2021-01-14T16:59:00","Published":"2021-01-06T01:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"LOCAL"},"assigner":"cve@mitre.org","capec":[{"id":"1","name":"Accessing Functionality Not Properly Constrained by ACLs","prerequisites":"The application must be navigable in a manner that associates elements (subsections) of the application with ACLs. The various resources, or individual URLs, must be somehow discoverable by the attacker The administrator must have forgotten to associate an ACL or has associated an inappropriately permissive ACL with a particular navigable resource.","related_weakness":["276","285","434","693","721","732"],"solutions":"In a more general setting, the administrator must mark every resource besides the ones supposed to be exposed to the user as accessible by a role impossible for the user to assume. The default security setting must be to deny access and then grant access only to those resources intended by business logic.","summary":"In applications, particularly web applications, access to functionality is mitigated by an authorization framework. This framework maps Access Control Lists (ACLs) to elements of the application's functionality; particularly URL's for web apps. In the case that the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker can access resources that must be available only to users at a higher privilege level, can access management sections of the application, or can run queries for data that they otherwise not supposed to."}],"cvss":7.2,"cvss-time":"2021-01-14T16:59:00","cvss-vector":"AV:L/AC:L/Au:N/C:C/I:C/A:C","cwe":"CWE-434","id":"CVE-2020-36167","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2021-01-14T16:59:00","references":["https://www.kb.cert.org/vuls/id/429301","https://www.veritas.com/content/support/en_US/security/VTS20-010"],"refmap":{"cert-vn":["VU#429301"],"misc":["https://www.veritas.com/content/support/en_US/security/VTS20-010"]},"summary":"An issue was discovered in the server in Veritas Backup Exec through 16.2, 20.6 before hotfix 298543, and 21.1 before hotfix 657517. On start-up, it loads the OpenSSL library from the Installation folder. This library in turn attempts to load the /usr/local/ssl/openssl.cnf configuration file, which may not exist. On Windows systems, this path could translate to <drive>:\\usr\\local\\ssl\\openssl.cnf. A low privileged user can create a :\\usr\\local\\ssl\\openssl.cnf configuration file to load a malicious OpenSSL engine, resulting in arbitrary code execution as SYSTEM when the service starts. This gives the attacker administrator access on the system, allowing the attacker (by default) to access all data, access all installed applications, etc. If the system is also an Active Directory domain controller, then this can affect the entire domain.","vulnerable_configuration":[{"id":"cpe:2.3:a:veritas:backup_exec:20.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:veritas:backup_exec:20.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:veritas:backup_exec:21.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:veritas:backup_exec:21.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:veritas:backup_exec:20.0:*:*:*:*:*:*:*","cpe:2.3:a:veritas:backup_exec:21.0:*:*:*:*:*:*:*"]}