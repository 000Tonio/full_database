{"Modified":"2021-06-06T11:15:00","Published":"2020-08-07T16:15:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"security@apache.org","capec":[{"id":"387","name":"Navigation Remapping To Propagate Malicious Content","prerequisites":"Targeted software is utilizing application framework APIs","related_weakness":["311","345","346","471","602"],"solutions":"","summary":"An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages and thereby circumvent the expected application logic. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, spam-like content, or links to the attackers' code. In general, content-spoofing within an application API can be employed to stage many different types of attacks varied based on the attackers' intent. When the goal is to spread malware, deceptive content is created such as modified links, buttons, or images, that entice users to click on those items, all of which point to a malicious URI. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system in order to change the destination of various application interface elements."},{"id":"142","name":"DNS Cache Poisoning","prerequisites":"A DNS cache must be vulnerable to some attack that allows the adversary to replace addresses in its lookup table.Client applications must trust the corrupted cashed values and utilize them for their domain name resolutions.","related_weakness":["345","346","348","349","350","441"],"solutions":"Configuration: Make sure your DNS servers have been updated to the latest versions Configuration: UNIX services like rlogin, rsh/rcp, xhost, and nfs are all susceptible to wrong information being held in a cache. Care should be taken with these services so they do not rely upon DNS caches that have been exposed to the Internet. Configuration: Disable client side DNS caching.","summary":"A domain name server translates a domain name (such as www.example.com) into an IP address that Internet hosts use to contact Internet resources. An adversary modifies a public DNS cache to cause certain names to resolve to incorrect addresses that the adversary specifies. The result is that client applications that rely upon the targeted cache for domain name resolution will be directed not to the actual address of the specified domain name but to some other address. Adversaries can use this to herd clients to sites that install malware on the victim's computer or to masquerade as part of a Pharming attack."},{"id":"218","name":"Spoofing of UDDI/ebXML Messages","prerequisites":"The targeted business's UDDI or ebXML information must be served from a location that the attacker can spoof or compromise or the attacker must be able to intercept and modify unsecured UDDI/ebXML messages in transit.","related_weakness":["345"],"solutions":"Implementation: Clients should only trust UDDI, ebXML, or similar messages that are verifiably signed by a trusted party.","summary":"An attacker spoofs a UDDI, ebXML, or similar message in order to impersonate a service provider in an e-business transaction. UDDI, ebXML, and similar standards are used to identify businesses in e-business transactions. Among other things, they identify a particular participant, WSDL information for SOAP transactions, and supported communication protocols, including security protocols. By spoofing one of these messages an attacker could impersonate a legitimate business in a transaction or could manipulate the protocols used between a client and business. This could result in disclosure of sensitive information, loss of message integrity, or even financial fraud."},{"id":"385","name":"Transaction or Event Tampering via Application API Manipulation","prerequisites":"Targeted software is utilizing application framework APIs","related_weakness":["311","345","346","471","602"],"solutions":"","summary":"An attacker hosts or joins an event or transaction within an application framework in order to change the content of messages or items that are being exchanged. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, substitute one item or another, spoof an existing item and conduct a false exchange, or otherwise change the amounts or identity of what is being exchanged. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system in order to change the content of various application elements. Often, items exchanged in game can be monetized via sales for coin, virtual dollars, etc. The purpose of the attack is for the attack to scam the victim by trapping the data packets involved the exchange and altering the integrity of the transfer process."},{"id":"384","name":"Application API Message Manipulation via Man-in-the-Middle","prerequisites":"Targeted software is utilizing application framework APIs","related_weakness":["311","345","346","471","602"],"solutions":"","summary":"An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack can allow the attacker to gain unauthorized privileges within the application, or conduct attacks such as phishing, deceptive strategies to spread malware, or traditional web-application attacks. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system. Despite the use of MITM software, the attack is actually directed at the server, as the client is one node in a series of content brokers that pass information along to the application framework. Additionally, it is not true \"Man-in-the-Middle\" attack at the network layer, but an application-layer attack the root cause of which is the master applications trust in the integrity of code supplied by the client."},{"id":"386","name":"Application API Navigation Remapping","prerequisites":"Targeted software is utilizing application framework APIs","related_weakness":["311","345","346","471","602"],"solutions":"","summary":"An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of links/buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains links/buttons that point to an attacker controlled destination. Some applications make navigation remapping more difficult to detect because the actual HREF values of images, profile elements, and links/buttons are masked. One example would be to place an image in a user's photo gallery that when clicked upon redirected the user to an off-site location. Also, traditional web vulnerabilities (such as CSRF) can be constructed with remapped buttons or links. In some cases navigation remapping can be used for Phishing attacks or even means to artificially boost the page view, user site reputation, or click-fraud."},{"id":"388","name":"Application API Button Hijacking","prerequisites":"Targeted software is utilizing application framework APIs","related_weakness":["311","345","346","471","602"],"solutions":"","summary":"An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains buttons that point to an attacker controlled destination."},{"id":"141","name":"Cache Poisoning","prerequisites":"The attacker must be able to modify the value stored in a cache to match a desired value. The targeted application must not be able to detect the illicit modification of the cache and must trust the cache value in its calculations.","related_weakness":["345","346","348","349","441"],"solutions":"Configuration: Disable client side caching. Implementation: Listens for query replies on a network, and sends a notification via email when an entry changes.","summary":"An attacker exploits the functionality of cache technologies to cause specific data to be cached that aids the attackers' objectives. This describes any attack whereby an attacker places incorrect or harmful material in cache. The targeted cache can be an application's cache (e.g. a web browser cache) or a public cache (e.g. a DNS or ARP cache). Until the cache is refreshed, most applications or clients will treat the corrupted cache value as valid. This can lead to a wide range of exploits including redirecting web browsers towards sites that install malware and repeatedly incorrect calculations based on the incorrect value."},{"id":"148","name":"Content Spoofing","prerequisites":"The target must provide content but fail to adequately protect it against modification.The adversary must have the means to alter data to which he/she is not authorized.If the content is to be modified in transit, the adversary must be able to intercept the targeted messages.","related_weakness":["345"],"solutions":"","summary":"An adversary modifies content to make it contain something other than what the original content producer intended while keeping the apparent source of the content unchanged. The term content spoofing is most often used to describe modification of web pages hosted by a target to display the adversary's content instead of the owner's content. However, any content can be spoofed, including the content of email messages, file transfers, or the content of other network communication protocols. Content can be modified at the source (e.g. modifying the source file for a web page) or in transit (e.g. intercepting and modifying a message between the sender and recipient). Usually, the adversary will attempt to hide the fact that the content has been modified, but in some cases, such as with web site defacement, this is not necessary. Content Spoofing can lead to malware exposure, financial fraud (if the content governs financial transactions), privacy violations, and other unwanted outcomes."},{"id":"111","name":"JSON Hijacking (aka JavaScript Hijacking)","prerequisites":"JSON is used as a transport mechanism between the client and the server The target server cannot differentiate real requests from forged requests The JSON object returned from the server can be accessed by the attackers' malicious code via a script tag","related_weakness":["345","346","352"],"solutions":"Ensure that server side code can differentiate between legitimate requests and forged requests. The solution is similar to protection against Cross Site Request Forger (CSRF), which is to use a hard to guess random nonce (that is unique to the victim's session with the server) that the attacker has no way of knowing (at least in the absence of other weaknesses). Each request from the client to the server should contain this nonce and the server should reject all requests that do not contain the nonce. On the client side, the system's design could make it difficult to get access to the JSON object content via the script tag. Since the JSON object is never assigned locally to a variable, it cannot be readily modified by the attacker before being used by a script tag. For instance, if while(1) was added to the beginning of the JavaScript returned by the server, trying to access it with a script tag would result in an infinite loop. On the other hand, legitimate client side code can remove the while(1) statement after which the JavaScript can be evaluated. A similar result can be achieved by surrounding the returned JavaScript with comment tags, or using other similar techniques (e.g. wrapping the JavaScript with HTML tags). Make the URLs in the system used to retrieve JSON objects unpredictable and unique for each user session. Ensure that to the extent possible, no sensitive data is passed from the server to the client via JSON objects. JavaScript was never intended to play that role, hence the same origin policy does not adequate address this scenario.","summary":"An attacker targets a system that uses JavaScript Object Notation (JSON) as a transport mechanism between the client and the server (common in Web 2.0 systems using AJAX) to steal possibly confidential information transmitted from the server back to the client inside the JSON object by taking advantage of the loophole in the browser's Same Origin Policy that does not prohibit JavaScript from one website to be included and executed in the context of another website. An attacker gets the victim to visit his or her malicious page that contains a script tag whose source points to the vulnerable system with a URL that requests a response from the server containing a JSON object with possibly confidential information. The malicious page also contains malicious code to capture the JSON object returned by the server before any other processing on it can take place, typically by overriding the JavaScript function used to create new objects. This hook allows the malicious code to get access to the creation of each object and transmit the possibly sensitive contents of the captured JSON object to the attackers' server. There is nothing in the browser's security model to prevent the attackers' malicious JavaScript code (originating from attacker's domain) to set up an environment (as described above) to intercept a JSON object response (coming from the vulnerable target system's domain), read its contents and transmit to the attackers' controlled site. The same origin policy protects the domain object model (DOM), but not the JSON."}],"cvss":4.3,"cvss-time":"2021-06-06T11:15:00","cvss-vector":"AV:N/AC:M/Au:N/C:N/I:P/A:N","cwe":"CWE-345","id":"CVE-2020-11985","impact":{"availability":"NONE","confidentiality":"NONE","integrity":"PARTIAL"},"last-modified":"2021-06-06T11:15:00","redhat":{"advisories":[{"bugzilla":{"id":"1263975","title":"Regression caused by fix for Bug 1255480"},"oval":{"OR":[{"comment":"Red Hat Enterprise Linux must be installed","oval":"oval:com.redhat.rhba:tst:20070304026"},{"AND":[{"comment":"Red Hat Enterprise Linux 7 is installed","oval":"oval:com.redhat.rhba:tst:20150364027"},{"OR":[{"AND":[{"comment":"httpd is earlier than 0:2.4.6-40.el7","oval":"oval:com.redhat.rhba:tst:20152194001"},{"comment":"httpd is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhba:tst:20152194002"}]},{"AND":[{"comment":"httpd-devel is earlier than 0:2.4.6-40.el7","oval":"oval:com.redhat.rhba:tst:20152194003"},{"comment":"httpd-devel is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhba:tst:20152194004"}]},{"AND":[{"comment":"httpd-manual is earlier than 0:2.4.6-40.el7","oval":"oval:com.redhat.rhba:tst:20152194005"},{"comment":"httpd-manual is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhba:tst:20152194006"}]},{"AND":[{"comment":"httpd-tools is earlier than 0:2.4.6-40.el7","oval":"oval:com.redhat.rhba:tst:20152194007"},{"comment":"httpd-tools is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhba:tst:20152194008"}]},{"AND":[{"comment":"mod_ldap is earlier than 0:2.4.6-40.el7","oval":"oval:com.redhat.rhba:tst:20152194009"},{"comment":"mod_ldap is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhba:tst:20152194010"}]},{"AND":[{"comment":"mod_proxy_html is earlier than 1:2.4.6-40.el7","oval":"oval:com.redhat.rhba:tst:20152194011"},{"comment":"mod_proxy_html is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhba:tst:20152194012"}]},{"AND":[{"comment":"mod_session is earlier than 0:2.4.6-40.el7","oval":"oval:com.redhat.rhba:tst:20152194013"},{"comment":"mod_session is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhba:tst:20152194014"}]},{"AND":[{"comment":"mod_ssl is earlier than 1:2.4.6-40.el7","oval":"oval:com.redhat.rhba:tst:20152194015"},{"comment":"mod_ssl is signed with Red Hat redhatrelease2 key","oval":"oval:com.redhat.rhba:tst:20152194016"}]}]}]}]},"rhsa":{"id":"RHBA-2015:2194","released":"2015-11-19","severity":"Moderate","title":"RHBA-2015:2194: httpd bug fix and enhancement update (Moderate)"}}],"rpms":["httpd-0:2.4.6-40.el7","httpd-debuginfo-0:2.4.6-40.el7","httpd-devel-0:2.4.6-40.el7","httpd-manual-0:2.4.6-40.el7","httpd-tools-0:2.4.6-40.el7","mod_ldap-0:2.4.6-40.el7","mod_proxy_html-1:2.4.6-40.el7","mod_session-0:2.4.6-40.el7","mod_ssl-1:2.4.6-40.el7","httpd24-httpd-0:2.4.25-9.el6","httpd24-httpd-0:2.4.25-9.el7","httpd24-httpd-debuginfo-0:2.4.25-9.el6","httpd24-httpd-debuginfo-0:2.4.25-9.el7","httpd24-httpd-devel-0:2.4.25-9.el6","httpd24-httpd-devel-0:2.4.25-9.el7","httpd24-httpd-manual-0:2.4.25-9.el6","httpd24-httpd-manual-0:2.4.25-9.el7","httpd24-httpd-tools-0:2.4.25-9.el6","httpd24-httpd-tools-0:2.4.25-9.el7","httpd24-mod_ldap-0:2.4.25-9.el6","httpd24-mod_ldap-0:2.4.25-9.el7","httpd24-mod_proxy_html-1:2.4.25-9.el6","httpd24-mod_proxy_html-1:2.4.25-9.el7","httpd24-mod_session-0:2.4.25-9.el6","httpd24-mod_session-0:2.4.25-9.el7","httpd24-mod_ssl-1:2.4.25-9.el6","httpd24-mod_ssl-1:2.4.25-9.el7"]},"references":["https://httpd.apache.org/security/vulnerabilities_24.html","https://security.gentoo.org/glsa/202008-04","https://security.netapp.com/advisory/ntap-20200827-0002/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HYVYE2ZERFXDV6RMKK3I5SDSDQLPSEIQ/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A2RN46PRBJE7E7OPD4YZX5SVWV5QKGV5/","https://www.oracle.com/security-alerts/cpujan2021.html","https://lists.apache.org/thread.html/rf6449464fd8b7437704c55f88361b66f12d5b5f90bcce66af4be4ba9@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/rc998b18880df98bafaade071346690c2bc1444adaa1a1ea464b93f0a@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/r9f93cf6dde308d42a9c807784e8102600d0397f5f834890708bf6920@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/r03ee478b3dda3e381fd6189366fa7af97c980d2f602846eef935277d@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/r3c5c3104813c1c5508b55564b66546933079250a46ce50eee90b2e36@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/rd336919f655b7ff309385e34a143e41c503e133da80414485b3abcc9@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/r09bb998baee74a2c316446bd1a41ae7f8d7049d09d9ff991471e8775@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/rcc44594d4d6579b90deccd4536b5d31f099ef563df39b094be286b9e@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/r476d175be0aaf4a17680ef98c5153b4d336eaef76fb2224cc94c463a@%3Ccvs.httpd.apache.org%3E","https://lists.apache.org/thread.html/r76142b8c5119df2178be7c2dba88fde552eedeec37ea993dfce68d1d@%3Ccvs.httpd.apache.org%3E"],"refmap":{"confirm":["https://security.netapp.com/advisory/ntap-20200827-0002/"],"fedora":["FEDORA-2020-0d3d3f5072","FEDORA-2020-189a1e6c3e"],"gentoo":["GLSA-202008-04"],"misc":["https://httpd.apache.org/security/vulnerabilities_24.html","https://www.oracle.com/security-alerts/cpujan2021.html"]},"summary":"IP address spoofing when proxying using mod_remoteip and mod_rewrite For configurations using proxying with mod_remoteip and certain mod_rewrite rules, an attacker could spoof their IP address for logging and PHP scripts. Note this issue was fixed in Apache HTTP Server 2.4.24 but was retrospectively allocated a low severity CVE in 2020.","vulnerable_configuration":[{"id":"cpe:2.3:a:apache:http_server:2.4.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.3:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.4:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.4:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.6:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.6:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.7:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.7:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.8:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.8:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.9:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.9:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.10:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.10:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.12:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.12:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.14:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.14:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.16:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.16:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.17:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.17:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.18:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.18:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.19:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.19:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.20:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.20:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.21:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.21:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.22:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.22:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:apache:http_server:2.4.23:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:http_server:2.4.23:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:apache:http_server:2.4.1:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.2:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.3:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.4:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.6:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.7:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.8:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.9:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.10:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.12:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.14:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.16:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.17:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.18:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.19:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.20:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.21:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.22:*:*:*:*:*:*:*","cpe:2.3:a:apache:http_server:2.4.23:*:*:*:*:*:*:*"]}