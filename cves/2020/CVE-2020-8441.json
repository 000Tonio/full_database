{"Modified":"2020-03-13T10:15:00","Published":"2020-02-19T17:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":7.5,"cvss-time":"2020-03-13T10:15:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2020-8441","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-03-13T10:15:00","references":["https://gist.github.com/j0lt-github/f5141abcacae63d434ecae211422153a","https://github.com/mbechler/marshalsec","https://github.com/mbechler/marshalsec/blob/master/marshalsec.pdf","https://security.netapp.com/advisory/ntap-20200313-0001/","https://sourceforge.net/p/jyaml/bugs/"],"refmap":{"confirm":["https://security.netapp.com/advisory/ntap-20200313-0001/"],"misc":["https://gist.github.com/j0lt-github/f5141abcacae63d434ecae211422153a","https://github.com/mbechler/marshalsec","https://github.com/mbechler/marshalsec/blob/master/marshalsec.pdf","https://sourceforge.net/p/jyaml/bugs/"]},"summary":"JYaml through 1.3 allows remote code execution during deserialization of a malicious payload through the load() function. NOTE: this is a discontinued product.","vulnerable_configuration":[{"id":"cpe:2.3:a:jyaml_project:jyaml:1.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:jyaml_project:jyaml:1.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:jyaml_project:jyaml:1.0:beta:*:*:*:*:*:*","title":"cpe:2.3:a:jyaml_project:jyaml:1.0:beta:*:*:*:*:*:*"},{"id":"cpe:2.3:a:jyaml_project:jyaml:1.0:beta2:*:*:*:*:*:*","title":"cpe:2.3:a:jyaml_project:jyaml:1.0:beta2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:jyaml_project:jyaml:1.0:beta3:*:*:*:*:*:*","title":"cpe:2.3:a:jyaml_project:jyaml:1.0:beta3:*:*:*:*:*:*"},{"id":"cpe:2.3:a:jyaml_project:jyaml:1.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:jyaml_project:jyaml:1.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:jyaml_project:jyaml:1.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:jyaml_project:jyaml:1.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:jyaml_project:jyaml:1.3:*:*:*:*:*:*:*","title":"cpe:2.3:a:jyaml_project:jyaml:1.3:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:jyaml_project:jyaml:1.0:-:*:*:*:*:*:*","cpe:2.3:a:jyaml_project:jyaml:1.0:beta:*:*:*:*:*:*","cpe:2.3:a:jyaml_project:jyaml:1.0:beta2:*:*:*:*:*:*","cpe:2.3:a:jyaml_project:jyaml:1.0:beta3:*:*:*:*:*:*","cpe:2.3:a:jyaml_project:jyaml:1.1:*:*:*:*:*:*:*","cpe:2.3:a:jyaml_project:jyaml:1.2:*:*:*:*:*:*:*","cpe:2.3:a:jyaml_project:jyaml:1.3:*:*:*:*:*:*:*"]}