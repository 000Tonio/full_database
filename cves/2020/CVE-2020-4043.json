{"Modified":"2020-06-22T17:07:00","Published":"2020-06-10T20:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":7.5,"cvss-time":"2020-06-22T17:07:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2020-4043","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-06-22T17:07:00","references":["https://github.com/phpMussel/phpMussel/commit/97f25973433921c1f953430f32d3081adc4851a4","https://github.com/phpMussel/phpMussel/issues/167","https://github.com/phpMussel/phpMussel/pull/173","https://github.com/phpMussel/phpMussel/security/advisories/GHSA-qr95-4mq5-r3fh","https://github.com/phpMussel/phpMussel/security/policy#currently-known-vulnerabilities"],"refmap":{"confirm":["https://github.com/phpMussel/phpMussel/security/advisories/GHSA-qr95-4mq5-r3fh"],"misc":["https://github.com/phpMussel/phpMussel/commit/97f25973433921c1f953430f32d3081adc4851a4","https://github.com/phpMussel/phpMussel/issues/167","https://github.com/phpMussel/phpMussel/pull/173","https://github.com/phpMussel/phpMussel/security/policy#currently-known-vulnerabilities"]},"summary":"phpMussel from versions 1.0.0 and less than 1.6.0 has an unserialization vulnerability in PHP's phar wrapper. Uploading a specially crafted file to an affected version allows arbitrary code execution (discovered, tested, and confirmed by myself), so the risk factor should be regarded as very high. Newer phpMussel versions don't use PHP's phar wrapper, and are therefore unaffected. This has been fixed in version 1.6.0.","vulnerable_configuration":[{"id":"cpe:2.3:a:phpmussel_project:phpmussel:1.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:phpmussel_project:phpmussel:1.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:phpmussel_project:phpmussel:1.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:phpmussel_project:phpmussel:1.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:phpmussel_project:phpmussel:1.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:phpmussel_project:phpmussel:1.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:phpmussel_project:phpmussel:1.3.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:phpmussel_project:phpmussel:1.3.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:phpmussel_project:phpmussel:1.3.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:phpmussel_project:phpmussel:1.3.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:phpmussel_project:phpmussel:1.4.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:phpmussel_project:phpmussel:1.4.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:phpmussel_project:phpmussel:1.5.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:phpmussel_project:phpmussel:1.5.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:phpmussel_project:phpmussel:1.0.0:*:*:*:*:*:*:*","cpe:2.3:a:phpmussel_project:phpmussel:1.1.0:*:*:*:*:*:*:*","cpe:2.3:a:phpmussel_project:phpmussel:1.2.0:*:*:*:*:*:*:*","cpe:2.3:a:phpmussel_project:phpmussel:1.3.0:*:*:*:*:*:*:*","cpe:2.3:a:phpmussel_project:phpmussel:1.3.1:*:*:*:*:*:*:*","cpe:2.3:a:phpmussel_project:phpmussel:1.4.0:*:*:*:*:*:*:*","cpe:2.3:a:phpmussel_project:phpmussel:1.5.0:*:*:*:*:*:*:*"]}