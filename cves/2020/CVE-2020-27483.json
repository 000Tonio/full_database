{"Modified":"2020-12-02T14:55:00","Published":"2020-11-16T21:15:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"100","name":"Overflow Buffers","prerequisites":"Targeted software performs buffer operations. Targeted software inadequately performs bounds-checking on buffer operations. Adversary has the capability to influence the input to buffer operations.","related_weakness":["119","120","129","131","19","680","805"],"solutions":"Use a language or compiler that performs automatic bounds checking. Use secure functions not vulnerable to buffer overflow. If you have to use dangerous functions, make sure that you do boundary checking. Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution. Use OS-level preventative functionality. Not a complete solution. Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software.","summary":"Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice."}],"cvss":6.5,"cvss-time":"2020-12-02T14:55:00","cvss-vector":"AV:N/AC:L/Au:S/C:P/I:P/A:P","cwe":"CWE-129","id":"CVE-2020-27483","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-12-02T14:55:00","references":["https://github.com/atredispartners/advisories/blob/master/ATREDIS-2020-0007.md"],"refmap":{"misc":["https://github.com/atredispartners/advisories/blob/master/ATREDIS-2020-0007.md"]},"summary":"Garmin Forerunner 235 before 8.20 is affected by: Array index error. The component is: ConnectIQ TVM. The attack vector is: To exploit the vulnerability, the attacker must upload a malicious ConnectIQ application to the ConnectIQ store. The ConnectIQ program interpreter trusts the offset provided for the stack value duplication instruction, DUP. The offset is unchecked and memory prior to the start of the execution stack can be read and treated as a TVM object. A successful exploit could use the vulnerability to leak runtime information such as the heap handle or pointer for a number of TVM context variables. Some reachable values may be controlled enough to forge a TVM object on the stack, leading to possible remote code execution.","vulnerable_configuration":[{"id":"cpe:2.3:o:garmin:forerunner_235_firmware:*:*:*:*:*:*:*:*","title":"cpe:2.3:o:garmin:forerunner_235_firmware:*:*:*:*:*:*:*:*"},{"id":"cpe:2.3:h:garmin:forerunner_235:-:*:*:*:*:*:*:*","title":"cpe:2.3:h:garmin:forerunner_235:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:garmin:forerunner_235_firmware:*:*:*:*:*:*:*:*"]}