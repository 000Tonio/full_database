{"Modified":"2020-04-01T20:11:00","Published":"2020-03-30T22:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":7.5,"cvss-time":"2020-04-01T20:11:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-763","id":"CVE-2020-11105","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-04-01T20:11:00","references":["https://github.com/USCiLab/cereal/issues/636"],"refmap":{"misc":["https://github.com/USCiLab/cereal/issues/636"]},"summary":"An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.","vulnerable_configuration":[{"id":"cpe:2.3:a:usc:cereal:0.9.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:0.9.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:0.9.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:0.9.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:1.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:1.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:1.1.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:1.1.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:1.1.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:1.1.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:1.1.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:1.1.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:1.2.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:1.2.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:1.2.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:1.2.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:1.2.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:1.2.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:usc:cereal:1.3.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:usc:cereal:1.3.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:usc:cereal:0.9.0:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:0.9.1:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:1.0.0:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:1.1.0:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:1.1.1:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:1.1.2:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:1.2.0:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:1.2.1:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:1.2.2:*:*:*:*:*:*:*","cpe:2.3:a:usc:cereal:1.3.0:*:*:*:*:*:*:*"]}