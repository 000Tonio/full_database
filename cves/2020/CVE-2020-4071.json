{"Modified":"2020-07-09T14:11:00","Published":"2020-06-24T13:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"LOCAL"},"assigner":"cve@mitre.org","capec":[{"id":"462","name":"Cross-Domain Search Timing","prerequisites":"Ability to issue GET / POST requests cross domainJava Script is enabled in the victim's browserThe victim has an active session with the site from which the attacker would like to receive informationThe victim's site does not protect search functionality with cross site request forgery (CSRF) protection","related_weakness":["208","352","385"],"solutions":"Design: The browser's security model could be fixed to not leak timing information for cross domain requests","summary":"An attacker initiates cross domain HTTP / GET requests and times the server responses. The timing of these responses may leak important information on what is happening on the server. Browser's same origin policy prevents the attacker from directly reading the server responses (in the absence of any other weaknesses), but does not prevent the attacker from timing the responses to requests that the attacker issued cross domain. For GET requests an attacker could for instance leverage the \"img\" tag in conjunction with \"onload() / onerror()\" javascript events. For the POST requests, an attacker could leverage the \"iframe\" element and leverage the \"onload()\" event. There is nothing in the current browser security model that prevents an attacker to use these methods to time responses to the attackers' cross domain requests. The timing for these responses leaks information. For instance, if a victim has an active session with their online e-mail account, an attacker could issue search requests in the victim's mailbox. While the attacker is not able to view the responses, based on the timings of the responses, the attacker could ask yes / no questions as to the content of victim's e-mails, who the victim e-mailed, when, etc. This is but one example; There are other scenarios where an attacker could infer potentially sensitive information from cross domain requests by timing the responses while asking the right questions that leak information."}],"cvss":2.1,"cvss-time":"2020-07-09T14:11:00","cvss-vector":"AV:L/AC:L/Au:N/C:P/I:N/A:N","cwe":"CWE-208","id":"CVE-2020-4071","impact":{"availability":"NONE","confidentiality":"PARTIAL","integrity":"NONE"},"last-modified":"2020-07-09T14:11:00","references":["https://github.com/tm-kn/django-basic-auth-ip-whitelist/security/advisories/GHSA-m38j-pmg3-v5x5","https://groups.google.com/forum/#!msg/django-developers/iAaq0pvHXuA/fpUuwjK3i2wJ"],"refmap":{"confirm":["https://github.com/tm-kn/django-basic-auth-ip-whitelist/security/advisories/GHSA-m38j-pmg3-v5x5"],"misc":["https://groups.google.com/forum/#!msg/django-developers/iAaq0pvHXuA/fpUuwjK3i2wJ"]},"summary":"In django-basic-auth-ip-whitelist before 0.3.4, a potential timing attack exists on websites where the basic authentication is used or configured, i.e. BASIC_AUTH_LOGIN and BASIC_AUTH_PASSWORD is set. Currently the string comparison between configured credentials and the ones provided by users is performed through a character-by-character string comparison. This enables a possibility that attacker may time the time it takes the server to validate different usernames and password, and use this knowledge to work out the valid credentials. This attack is understood not to be realistic over the Internet. However, it may be achieved from within local networks where the website is hosted, e.g. from inside a data centre where a website's server is located. Sites protected by IP address whitelisting only are unaffected by this vulnerability. This vulnerability has been fixed on version 0.3.4 of django-basic-auth-ip-whitelist. Update to version 0.3.4 as soon as possible and change basic authentication username and password configured on a Django project using this package. A workaround without upgrading to version 0.3.4 is to stop using basic authentication and use the IP whitelisting component only. It can be achieved by not setting BASIC_AUTH_LOGIN and BASIC_AUTH_PASSWORD in Django project settings.","vulnerable_configuration":[{"id":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:-:*:*:*:*:*:*:*","title":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:-:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.2:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.2.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.2.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3:a0:*:*:*:*:*:*","title":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3:a0:*:*:*:*:*:*"},{"id":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.2:a0:*:*:*:*:*:*","title":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.2:a0:*:*:*:*:*:*"},{"id":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.3:-:*:*:*:*:*:*","title":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.3:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.3:a0:*:*:*:*:*:*","title":"cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.3:a0:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:-:*:*:*:*:*:*:*","cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.2:*:*:*:*:*:*:*","cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.2.1:*:*:*:*:*:*:*","cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3:a0:*:*:*:*:*:*","cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.1:*:*:*:*:*:*:*","cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.2:a0:*:*:*:*:*:*","cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.3:-:*:*:*:*:*:*","cpe:2.3:a:django-basic-auth-ip-whitelist_project:django-basic-auth-ip-whitelist:0.3.3:a0:*:*:*:*:*:*"]}