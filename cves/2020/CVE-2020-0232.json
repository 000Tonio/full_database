{"Modified":"2020-06-22T19:41:00","Published":"2020-06-16T14:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":7.5,"cvss-time":"2020-06-22T19:41:00","cvss-vector":"AV:N/AC:L/Au:N/C:P/I:P/A:P","cwe":"CWE-416","id":"CVE-2020-0232","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-06-22T19:41:00","references":["https://source.android.com/security/bulletin/pixel/2020-06-01"],"refmap":{"misc":["https://source.android.com/security/bulletin/pixel/2020-06-01"]},"summary":"Function abc_pcie_issue_dma_xfer_sync creates a transfer object, adds it to the session object then continues to work with it. A concurrent thread could retrieve created transfer object from the session object and delete it using abc_pcie_dma_user_xfer_clean. If this happens, abc_pcie_start_dma_xfer and abc_pcie_wait_dma_xfer in the original thread will trigger UAF when working with the transfer object.Product: AndroidVersions: Android kernelAndroid ID: A-151453714","vulnerable_configuration":[{"id":"cpe:2.3:o:google:android:-:*:*:*:*:*:*:*","title":"cpe:2.3:o:google:android:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:google:android:-:*:*:*:*:*:*:*"]}