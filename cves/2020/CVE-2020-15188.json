{"Modified":"2020-09-29T14:04:00","Published":"2020-09-18T17:15:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":6.8,"cvss-time":"2020-09-29T14:04:00","cvss-vector":"AV:N/AC:M/Au:N/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2020-15188","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-09-29T14:04:00","references":["https://github.com/inunosinsi/soycms/issues/10","https://github.com/inunosinsi/soycms/pull/12/commits/a75642989132dd25f74a13194b27c0986c3de020","https://github.com/inunosinsi/soycms/security/advisories/GHSA-hrrx-m22r-p9jp","https://www.youtube.com/watch?v=zAE4Swjc-GU&feature=youtu.be"],"refmap":{"confirm":["https://github.com/inunosinsi/soycms/security/advisories/GHSA-hrrx-m22r-p9jp"],"misc":["https://github.com/inunosinsi/soycms/issues/10","https://github.com/inunosinsi/soycms/pull/12/commits/a75642989132dd25f74a13194b27c0986c3de020","https://www.youtube.com/watch?v=zAE4Swjc-GU&feature=youtu.be"]},"summary":"SOY CMS 3.0.2.327 and earlier is affected by Unauthenticated Remote Code Execution (RCE). The allows remote attackers to execute any arbitrary code when the inquiry form feature is enabled by the service. The vulnerability is caused by unserializing the form without any restrictions. This was fixed in 3.0.2.328.","vulnerable_configuration":[{"id":"cpe:2.3:a:brassica:soy_cms:1.8.15:*:*:*:*:*:*:*","title":"cpe:2.3:a:brassica:soy_cms:1.8.15:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:brassica:soy_cms:3.0.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:brassica:soy_cms:3.0.0:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:brassica:soy_cms:3.0.1:*:*:*:*:*:*:*","title":"cpe:2.3:a:brassica:soy_cms:3.0.1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:brassica:soy_cms:3.0.2:*:*:*:*:*:*:*","title":"cpe:2.3:a:brassica:soy_cms:3.0.2:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:brassica:soy_cms:1.8.15:*:*:*:*:*:*:*","cpe:2.3:a:brassica:soy_cms:3.0.0:*:*:*:*:*:*:*","cpe:2.3:a:brassica:soy_cms:3.0.1:*:*:*:*:*:*:*","cpe:2.3:a:brassica:soy_cms:3.0.2:*:*:*:*:*:*:*"]}