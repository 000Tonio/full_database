{"Modified":"2020-05-13T17:42:00","Published":"2020-05-11T16:15:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":6.5,"cvss-time":"2020-05-13T17:42:00","cvss-vector":"AV:N/AC:L/Au:S/C:P/I:P/A:P","cwe":"CWE-502","id":"CVE-2020-12760","impact":{"availability":"PARTIAL","confidentiality":"PARTIAL","integrity":"PARTIAL"},"last-modified":"2020-05-13T17:42:00","references":["https://github.com/OpenNMS/opennms/releases/tag/opennms-26.0.1-1","https://issues.opennms.org/browse/NMS-12673","https://www.opennms.com/en/blog/2020-04-29-opennms-horizon-26-0-1-luchador-released/","https://www.opennms.com/en/blog/2020-04-29-opennms-meridian-2018-1-18-wildfire-released/","https://www.opennms.com/en/blog/2020-04-29-opennms-meridian-2019-1-6-europa-released/"],"refmap":{"misc":["https://github.com/OpenNMS/opennms/releases/tag/opennms-26.0.1-1","https://issues.opennms.org/browse/NMS-12673","https://www.opennms.com/en/blog/2020-04-29-opennms-horizon-26-0-1-luchador-released/","https://www.opennms.com/en/blog/2020-04-29-opennms-meridian-2018-1-18-wildfire-released/","https://www.opennms.com/en/blog/2020-04-29-opennms-meridian-2019-1-6-europa-released/"]},"summary":"An issue was discovered in OpenNMS Horizon before 26.0.1, and Meridian before 2018.1.19 and 2019 before 2019.1.7. The ActiveMQ channel configuration allowed for arbitrary deserialization of Java objects (aka ActiveMQ Minion payload deserialization), leading to remote code execution for any authenticated channel user regardless of its assigned permissions.","vulnerable_configuration":[{"id":"cpe:2.3:a:opennms:opennms_horizon:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:opennms:opennms_horizon:*:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:opennms:opennms_meridian:*:*:*:*:*:*:*:*","title":"cpe:2.3:a:opennms:opennms_meridian:*:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:opennms:opennms_meridian:2019.1.2-1:*:*:*:*:*:*:*","title":"cpe:2.3:a:opennms:opennms_meridian:2019.1.2-1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:opennms:opennms_meridian:2019.1.3-1:*:*:*:*:*:*:*","title":"cpe:2.3:a:opennms:opennms_meridian:2019.1.3-1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:opennms:opennms_meridian:2019.1.4-1:*:*:*:*:*:*:*","title":"cpe:2.3:a:opennms:opennms_meridian:2019.1.4-1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:opennms:opennms_meridian:2019.1.5-1:*:*:*:*:*:*:*","title":"cpe:2.3:a:opennms:opennms_meridian:2019.1.5-1:*:*:*:*:*:*:*"},{"id":"cpe:2.3:a:opennms:opennms_meridian:2019.1.6-1:*:*:*:*:*:*:*","title":"cpe:2.3:a:opennms:opennms_meridian:2019.1.6-1:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:opennms:opennms_horizon:*:*:*:*:*:*:*:*","cpe:2.3:a:opennms:opennms_meridian:*:*:*:*:*:*:*:*","cpe:2.3:a:opennms:opennms_meridian:2019.1.2-1:*:*:*:*:*:*:*","cpe:2.3:a:opennms:opennms_meridian:2019.1.3-1:*:*:*:*:*:*:*","cpe:2.3:a:opennms:opennms_meridian:2019.1.4-1:*:*:*:*:*:*:*","cpe:2.3:a:opennms:opennms_meridian:2019.1.5-1:*:*:*:*:*:*:*","cpe:2.3:a:opennms:opennms_meridian:2019.1.6-1:*:*:*:*:*:*:*"]}