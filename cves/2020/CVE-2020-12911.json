{"Modified":"2020-10-22T16:06:00","Published":"2020-10-13T22:15:00","access":{"authentication":"NONE","complexity":"LOW","vector":"LOCAL"},"assigner":"cve@mitre.org","capec":[{"id":"537","name":"Infiltration of Hardware Development Environment","prerequisites":"The victim must use email or removable media from systems running the IDE (or systems adjacent to the IDE systems). The victim must have a system running exploitable applications and/or a vulnerable configuration to allow for initial infiltration. The attacker must have working knowledge of some if not all of the components involved in the IDE system as well as the infrastructure.","related_weakness":["125"],"solutions":"","summary":"An attacker, leveraging the ability to manipulate components of primary support systems and tools within the development and production environments, inserts malicious software within the hardware and/or firmware development environment. The infiltration purpose is to alter developed hardware components in a system destined for deployment at the victim's organization, for the purpose of disruption or further compromise."},{"id":"540","name":"Overread Buffers","prerequisites":"For this type of attack to be successful, a few prerequisites must be met. First, the targeted software must be written in a language that enables fine grained buffer control. (e.g., c, c++) Second, the targeted software must actually perform buffer operations and inadequately perform bounds-checking on those buffer operations. Finally, the adversary must have the capability to influence the input that guides these buffer operations.","related_weakness":["125"],"solutions":"","summary":"An adversary attacks a target by providing input that causes an application to read beyond the boundary of a defined buffer. This typically occurs when a value influencing where to start or stop reading is set to reflect positions outside of the valid memory location of the buffer. This type of attack may result in exposure of sensitive information, a system crash, or arbitrary code execution."}],"cvss":4.9,"cvss-time":"2020-10-22T16:06:00","cvss-vector":"AV:L/AC:L/Au:N/C:N/I:N/A:C","cwe":"CWE-125","id":"CVE-2020-12911","impact":{"availability":"COMPLETE","confidentiality":"NONE","integrity":"NONE"},"last-modified":"2020-10-22T16:06:00","references":["https://www.amd.com/en/corporate/product-security"],"refmap":{"misc":["https://www.amd.com/en/corporate/product-security"]},"summary":"A denial of service vulnerability exists in the D3DKMTCreateAllocation handler functionality of AMD ATIKMDAG.SYS (e.g. version 26.20.15029.27017). A specially crafted D3DKMTCreateAllocation API request can cause an out-of-bounds read and denial of service (BSOD). This vulnerability can be triggered from a non-privileged account.","vulnerable_configuration":[{"id":"cpe:2.3:o:amd:atikmdag.sys:26.20.15029.27017:*:*:*:*:*:*:*","title":"cpe:2.3:o:amd:atikmdag.sys:26.20.15029.27017:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:amd:atikmdag.sys:26.20.15029.27017:*:*:*:*:*:*:*"]}