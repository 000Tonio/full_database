{"Modified":"2013-02-26T04:51:00","Published":"2012-11-28T13:03:00","access":{"authentication":"NONE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"485","name":"Signature Spoofing by Key Recreation","prerequisites":"An authoritative signer is using a weak method of random number generation or weak signing software that causes key leakage or permits key inference. An authoritative signer is using a signature algorithm with a direct weakness or with poorly chosen parameters that enable the key to be recovered using signatures from that signer.","related_weakness":["310","330"],"solutions":"Ensure cryptographic elements have been sufficiently tested for weaknesses.","summary":"An attacker obtains an authoritative or reputable signer's private signature key by exploiting a cryptographic weakness in the signature algorithm or pseudorandom number generation and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker."}],"cvss":5,"cvss-time":"2013-02-26T04:51:00","cvss-vector":"AV:N/AC:L/Au:N/C:N/I:N/A:P","cwe":"CWE-310","id":"CVE-2012-5372","impact":{"availability":"PARTIAL","confidentiality":"NONE","integrity":"NONE"},"last-modified":"2013-02-26T04:51:00","references":["http://2012.appsec-forum.ch/conferences/#c17","http://asfws12.files.wordpress.com/2012/11/asfws2012-jean_philippe_aumasson-martin_bosslet-hash_flooding_dos_reloaded.pdf","http://www.ocert.org/advisories/ocert-2012-001.html","http://www.securityfocus.com/bid/56670","https://www.131002.net/data/talks/appsec12_slides.pdf"],"refmap":{"bid":["56670"],"misc":["http://2012.appsec-forum.ch/conferences/#c17","http://asfws12.files.wordpress.com/2012/11/asfws2012-jean_philippe_aumasson-martin_bosslet-hash_flooding_dos_reloaded.pdf","http://www.ocert.org/advisories/ocert-2012-001.html","https://www.131002.net/data/talks/appsec12_slides.pdf"]},"summary":"Rubinius computes hash values without properly restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table, as demonstrated by a universal multicollision attack against the MurmurHash3 algorithm.","vulnerable_configuration":[{"id":"cpe:2.3:a:rubinius:rubinius:-:*:*:*:*:*:*:*","title":"cpe:2.3:a:rubinius:rubinius:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:rubinius:rubinius:-:*:*:*:*:*:*:*"]}