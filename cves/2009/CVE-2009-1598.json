{"Modified":"2021-11-15T18:38:00","Published":"2009-05-11T15:30:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[],"cvss":9.3,"cvss-time":"2021-11-15T18:38:00","cvss-vector":"AV:N/AC:M/Au:N/C:C/I:C/A:C","cwe":"NVD-CWE-noinfo","id":"CVE-2009-1598","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2021-11-15T18:38:00","references":["http://secniche.org/papers/SNS_09_03_PDF_Silent_Form_Re_Purp_Attack.pdf","http://www.securityfocus.com/archive/1/503183/100/0/threaded"],"refmap":{"bugtraq":["20090503 [SecNiche WhitePaper ] - PDF Silent HTTP Form Repurposing Attacks"],"misc":["http://secniche.org/papers/SNS_09_03_PDF_Silent_Form_Re_Purp_Attack.pdf"]},"summary":"Google Chrome executes DOM calls in response to a javascript: URI in the target attribute of a submit element within a form contained in an inline PDF file, which might allow remote attackers to bypass intended Adobe Acrobat JavaScript restrictions on accessing the document object, as demonstrated by a web site that permits PDF uploads by untrusted users, and therefore has a shared document.domain between the web site and this javascript: URI.  NOTE: the researcher reports that Adobe's position is \"a PDF file is active content.\"","vulnerable_configuration":[{"id":"cpe:2.3:a:google:chrome:-:*:*:*:*:*:*:*","title":"cpe:2.3:a:google:chrome:-:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:google:chrome:-:*:*:*:*:*:*:*"]}