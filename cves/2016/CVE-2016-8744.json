{"Modified":"2017-09-29T22:27:00","Published":"2017-09-13T16:29:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"586","name":"Object Injection","prerequisites":"The target application must unserialize data before validation.","related_weakness":["502"],"solutions":"Implementation: Keep session state on the server, when possible.","summary":"An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."}],"cvss":9,"cvss-time":"2017-09-29T22:27:00","cvss-vector":"AV:N/AC:L/Au:S/C:C/I:C/A:C","cwe":"CWE-502","id":"CVE-2016-8744","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2017-09-29T22:27:00","references":["https://brooklyn.apache.org/community/security/CVE-2016-8744.html","https://lists.apache.org/thread.html/3f4d09c1c1a3cdfd1da0a05c8362769b917c078eed5b6c2f8e37a761@%3Cdev.brooklyn.apache.org%3E"],"refmap":{"confirm":["https://brooklyn.apache.org/community/security/CVE-2016-8744.html"],"mlist":["[dev] 20170210 [SECURITY] CVE-2016-8744: Apache Brooklyn, SnakeYAML configuration potentially allows remote code execution"]},"summary":"Apache Brooklyn uses the SnakeYAML library for parsing YAML inputs. SnakeYAML allows the use of YAML tags to indicate that SnakeYAML should unmarshal data to a Java type. In the default configuration in Brooklyn before 0.10.0, SnakeYAML will allow unmarshalling to any Java type available on the classpath. This could provide an authenticated user with a means to cause the JVM running Brooklyn to load and run Java code without detection by Brooklyn. Such code would have the privileges of the Java process running Brooklyn, including the ability to open files and network connections, and execute system commands. There is known to be a proof-of-concept exploit using this vulnerability.","vulnerable_configuration":[{"id":"cpe:2.3:a:apache:brooklyn:0.9.0:*:*:*:*:*:*:*","title":"cpe:2.3:a:apache:brooklyn:0.9.0:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:apache:brooklyn:0.9.0:*:*:*:*:*:*:*"]}