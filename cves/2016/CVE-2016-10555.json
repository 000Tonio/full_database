{"Modified":"2019-10-09T23:16:00","Published":"2018-05-31T20:29:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"485","name":"Signature Spoofing by Key Recreation","prerequisites":"An authoritative signer is using a weak method of random number generation or weak signing software that causes key leakage or permits key inference. An authoritative signer is using a signature algorithm with a direct weakness or with poorly chosen parameters that enable the key to be recovered using signatures from that signer.","related_weakness":["310","330"],"solutions":"Ensure cryptographic elements have been sufficiently tested for weaknesses.","summary":"An attacker obtains an authoritative or reputable signer's private signature key by exploiting a cryptographic weakness in the signature algorithm or pseudorandom number generation and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker."}],"cvss":4,"cvss-time":"2019-10-09T23:16:00","cvss-vector":"AV:N/AC:L/Au:S/C:N/I:P/A:N","cwe":"CWE-310","id":"CVE-2016-10555","impact":{"availability":"NONE","confidentiality":"NONE","integrity":"PARTIAL"},"last-modified":"2019-10-09T23:16:00","references":["https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/","https://github.com/hokaccha/node-jwt-simple/pull/14","https://github.com/hokaccha/node-jwt-simple/pull/16","https://nodesecurity.io/advisories/87"],"refmap":{"misc":["https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/","https://github.com/hokaccha/node-jwt-simple/pull/14","https://github.com/hokaccha/node-jwt-simple/pull/16","https://nodesecurity.io/advisories/87"]},"summary":"Since \"algorithm\" isn't enforced in jwt.decode()in jwt-simple 0.3.0 and earlier, a malicious user could choose what algorithm is sent sent to the server. If the server is expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think the public key is actually an HMAC private key. This could be used to forge any data an attacker wants.","vulnerable_configuration":[{"id":"cpe:2.3:a:jwt-simple_project:jwt-simple:0.1.0:*:*:*:*:node.js:*:*","title":"cpe:2.3:a:jwt-simple_project:jwt-simple:0.1.0:*:*:*:*:node.js:*:*"},{"id":"cpe:2.3:a:jwt-simple_project:jwt-simple:0.2.0:*:*:*:*:node.js:*:*","title":"cpe:2.3:a:jwt-simple_project:jwt-simple:0.2.0:*:*:*:*:node.js:*:*"},{"id":"cpe:2.3:a:jwt-simple_project:jwt-simple:0.3.0:*:*:*:*:node.js:*:*","title":"cpe:2.3:a:jwt-simple_project:jwt-simple:0.3.0:*:*:*:*:node.js:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:jwt-simple_project:jwt-simple:0.1.0:*:*:*:*:node.js:*:*","cpe:2.3:a:jwt-simple_project:jwt-simple:0.2.0:*:*:*:*:node.js:*:*","cpe:2.3:a:jwt-simple_project:jwt-simple:0.3.0:*:*:*:*:node.js:*:*"]}