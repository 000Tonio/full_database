{"Modified":"2008-11-15T06:42:00","Published":"2007-02-07T20:28:00","access":{"authentication":"NONE","complexity":"MEDIUM","vector":"LOCAL"},"assigner":"cve@mitre.org","capec":[],"cvss":1.9,"cvss-time":"2008-11-15T06:42:00","cvss-vector":"AV:L/AC:M/Au:N/C:P/I:N/A:N","cwe":"NVD-CWE-Other","id":"CVE-2007-0823","impact":{"availability":"NONE","confidentiality":"PARTIAL","integrity":"NONE"},"last-modified":"2008-11-15T06:42:00","references":["http://archives.neohapsis.com/archives/fulldisclosure/2007-02/0012.html","http://gotfault.wordpress.com/2007/02/01/a-funny-case/","http://osvdb.org/33651"],"refmap":{"fulldisc":["20070201 umount crash and xterm (kind of) information leak!"],"misc":["http://gotfault.wordpress.com/2007/02/01/a-funny-case/"],"osvdb":["33651"]},"statements":[{"contributor":"Mark J Cox","lastmodified":"2007-02-09","organization":"Red Hat","statement":"Red Hat does not consider this issue to be a security vulnerability. It is correct and expected behavior for xterm not to zero-fill its scrollback buffer upon reception of terminal clear excape sequence."}],"summary":"xterm on Slackware Linux 10.2 stores information that had been displayed for a different user account using the same xterm process, which might allow local users to bypass file permissions and read other users' files, or obtain other sensitive information, by reading the xterm process memory.  NOTE: it could be argued that this is an expected consequence of multiple users sharing the same interactive process, in which case this is not a vulnerability.","vulnerable_configuration":[{"id":"cpe:2.3:o:slackware:slackware_linux:10.2:*:*:*:*:*:*:*","title":"cpe:2.3:o:slackware:slackware_linux:10.2:*:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:o:slackware:slackware_linux:10.2:*:*:*:*:*:*:*"]}