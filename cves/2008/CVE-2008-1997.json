{"Modified":"2023-01-17T17:19:00","Published":"2008-04-28T20:05:00","access":{"authentication":"SINGLE","complexity":"LOW","vector":"NETWORK"},"assigner":"cve@mitre.org","capec":[{"id":"242","name":"Code Injection","prerequisites":"The target software does not validate user-controlled input such that the execution of a process may be altered by sending code in through legitimate data channels, using no other mechanism.","related_weakness":["94"],"solutions":"Utilize strict type, character, and encoding enforcement Ensure all input content that is delivered to client is sanitized against an acceptable content specification. Perform input validation for all content. Enforce regular patching of software.","summary":"An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application."},{"id":"35","name":"Leverage Executable Code in Non-Executable Files","prerequisites":"The attacker must have the ability to modify non-executable files consumed by the target software.","related_weakness":["264","270","272","275","282","59","714","94","95","96","97"],"solutions":"Design: Enforce principle of least privilege Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands. Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables. Implementation: Implement host integrity monitoring to detect any unwanted altering of configuration files. Implementation: Ensure that files that are not required to execute, such as configuration files, are not over-privileged, i.e. not allowed to execute.","summary":"An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high."},{"id":"77","name":"Manipulating User-Controlled Variables","prerequisites":"A variable consumed by the application server is exposed to the client. A variable consumed by the application server can be overwritten by the user. The application server trusts user supplied data to compute business logic. The application server does not perform proper input validation.","related_weakness":["15","285","302","473","94","96"],"solutions":"If the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables. A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary. Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data. Use encapsulation when declaring your variables. This is to lower the exposure of your variables. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should be rejected by the program.","summary":"This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An attacker can override environment variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the attacker can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables."}],"cvss":9,"cvss-time":"2023-01-17T17:19:00","cvss-vector":"AV:N/AC:L/Au:S/C:C/I:C/A:C","cwe":"CWE-94","id":"CVE-2008-1997","impact":{"availability":"COMPLETE","confidentiality":"COMPLETE","integrity":"COMPLETE"},"last-modified":"2023-01-17T17:19:00","references":["http://www-1.ibm.com/support/docview.wss?uid=swg1IZ06972","http://secunia.com/advisories/29022","http://www.appsecinc.com/resources/alerts/db2/2008-02.shtml","http://securityreason.com/securityalert/3841","http://www.securityfocus.com/archive/1/491075/100/0/threaded"],"refmap":{"aixapar":["IZ06972"],"bugtraq":["20080418 Team SHATTER Security Advisory: IBM DB2 UDB Arbitrary code execution in ADMIN_SP_C/ADMIN_SP_C2 procedures"],"misc":["http://www.appsecinc.com/resources/alerts/db2/2008-02.shtml"],"secunia":["29022"],"sreason":["3841"]},"summary":"Unspecified vulnerability in the ADMIN_SP_C2 procedure in IBM DB2 8 before FP16, 9.1 before FP4a, and 9.5 before FP1 allows remote authenticated users to execute arbitrary code via unknown vectors. NOTE: the ADMIN_SP_C issue is already covered by CVE-2008-0699.","vulnerable_configuration":[{"id":"cpe:2.3:a:ibm:db2:9.1:fp4:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:9.1:fp4:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:9.1:fp1:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:9.1:fp1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:9.1:fp3:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:9.1:fp3:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:9.1:fp3a:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:9.1:fp3a:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:9.1:fp2a:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:9.1:fp2a:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:9.1:fp2:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:9.1:fp2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:9.5:-:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:9.5:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:9.1:-:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:9.1:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:-:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:-:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak1:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak1:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak10:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak10:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak11:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak11:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak12:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak12:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak13:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak13:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak14:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak14:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak15:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak15:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak2:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak2:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak3:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak3:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak4:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak4:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak5:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak5:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak6:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak6:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak6a:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak6a:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak6b:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak6b:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak6c:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak6c:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak7:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak7:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak7a:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak7a:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak7b:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak7b:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak8:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak8:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak8a:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak8a:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak9:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak9:*:*:*:*:*:*"},{"id":"cpe:2.3:a:ibm:db2:8.0:fixpak9a:*:*:*:*:*:*","title":"cpe:2.3:a:ibm:db2:8.0:fixpak9a:*:*:*:*:*:*"}],"vulnerable_configuration_cpe_2_2":[],"vulnerable_product":["cpe:2.3:a:ibm:db2:9.1:fp4:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:9.1:fp1:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:9.1:fp3:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:9.1:fp3a:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:9.1:fp2a:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:9.1:fp2:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:9.5:-:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:9.1:-:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:-:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak1:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak10:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak11:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak12:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak13:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak14:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak15:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak2:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak3:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak4:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak5:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak6:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak6a:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak6b:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak6c:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak7:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak7a:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak7b:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak8:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak8a:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak9:*:*:*:*:*:*","cpe:2.3:a:ibm:db2:8.0:fixpak9a:*:*:*:*:*:*"]}